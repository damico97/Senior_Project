{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Bergen_County_Line/PascackJct.jsx\";\n\n/**\n * @file PascackJct.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Pascack Junction Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the Pascack Junction Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n// Import React Component\nimport React, { Component } from 'react'; // Import CSS style sheet\n\nimport '../../../css/Bergen_County_Line/pascack_jct.css'; // Import Images\n// Switch Images\n\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png';\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png'; // Signal Images\n\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png'; // Color Constants For Drawing Routes\n\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n/**\n * The React JSX Component Class for the Pascack Junction Interlocking\n * This class is a JSX React Component for the Pascack Junction Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\n\nclass PascackJct extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Switch Status\n      sw_1: this.props.status.sw_1,\n      sw_3: this.props.status.sw_3,\n      // Image File for the switch - Will change depending on route\n      sw_1_src: CX_225,\n      sw_3_src: CX_135,\n      // Colors for tail tracks - Will change depending on route\n      tail_1_w: Empty,\n      tail_2_w: Empty,\n      tail_1_e: Empty,\n      tail_2_e: Empty,\n      // Image File for the signals - Will change depending on route\n      sig_2w_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_2e_src: SIG_E,\n      sig_4e_src: SIG_E,\n      // Information For Interlocking Routes\n      occupied_1: this.props.status.occupied_trk_1,\n      occupied_2: this.props.status.occupied_trk_2,\n      route_1: this.props.status.routed_1,\n      route_2: this.props.status.routed_2,\n      routes: this.props.status.routes\n    };\n  }\n\n  /**\n   * componentWillReceiveProps()\n   * @summary Function that updates the state of the component\n   * \n   * @description The data that is being changed is passed down from the CTC classes in the simulation backend\n   * \n   * @param nextProps, the new data to set the component state too\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sw_1: nextProps.status.sw_1,\n      sw_3: nextProps.status.sw_3,\n      occupied_1: nextProps.status.occupied_trk_1,\n      occupied_2: nextProps.status.occupied_trk_2,\n      route_1: nextProps.status.routed_1,\n      route_2: nextProps.status.routed_2,\n      routes: nextProps.status.routes\n    });\n  } // ---- END componentWillReceiveProps() ----\n\n  /**\n   * render()\n   * @summary standard React function that draws the interlocking to the screen\n   */\n\n\n  render() {\n    // Clear all the drawings from the interlocking so if a train clears the route is gone\n    this.reset_drawings(); // Set the switch images based off the state of each crossover\n\n    this.set_switch_images(); // Draw all the current routes in the interlocking\n\n    this.set_route_drawings(); // Returns the HTML to draw the interlocking and it's current state to the screen\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pascack_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"PASCACK\"), React.createElement(\"div\", {\n      className: \"pascack_milepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"MP 7.6\"), React.createElement(\"div\", {\n      className: \"pascack_1_west\",\n      style: {\n        background: this.state.tail_1_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"pascack_2_west\",\n      style: {\n        background: this.state.tail_2_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"pascack_SW_1\",\n      onClick: this.props.throw_sw_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pascack_SW_3\",\n      onClick: this.props.throw_sw_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pascack_1_east\",\n      style: {\n        background: this.state.tail_1_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"pascack_2_east\",\n      style: {\n        background: this.state.tail_2_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"pascack_sig_2w\",\n      onClick: this.props.click_sig_2w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pascack_sig_4w\",\n      onClick: this.props.click_sig_4w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pascack_sig_2e\",\n      onClick: this.props.click_sig_2e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pascack_sig_4e\",\n      onClick: this.props.click_sig_4e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  } // ---- END render() ----\n\n  /**\n   * @summary Sets the drawing for the route through the interlocking\n   * \n   * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n   * will change depending on if the interlocking is occupied or not\n   */\n\n\n  set_route_drawings() {\n    let color_1 = Empty;\n    let color_2 = Empty; // Setting the color of the tracks depending on if the interlocking in occupied or not\n\n    if (this.state.route_1) {\n      color_1 = Green;\n    }\n\n    if (this.state.route_2) {\n      color_2 = Green;\n    }\n\n    if (this.state.occupied_1) {\n      color_1 = Red;\n    }\n\n    if (this.state.occupied_2) {\n      color_2 = Red;\n    } // Loop through all the routes\n\n\n    for (let i = 0; i < this.state.routes.length; i++) {\n      if (this.state.routes[i] === \"W_1_1__|__1_bt_pascack\" || this.state.routes[i] === \"E_1_1__|__1_pascack_hx\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_1_w = color_1; // Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          if (this.state.route_2) {\n            this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n          } else if (this.state.occupied_2) {\n            this.state.sw_1_src = CX_225_Occupied_Both;\n            this.state.sw_3_src = CX_135_Occupied_Both;\n          } else {\n            this.state.sw_1_src = CX_225_Occupied_Top;\n            this.state.sw_3_src = CX_135_Occupied_Top;\n          } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n        } // Route Is Not Occupied\n        else {\n            // Switches\n            if (this.state.route_2) {\n              this.state.sw_1_src = CX_225_Lined_Both;\n              this.state.sw_3_src = CX_135_Lined_Both;\n            } else if (this.state.occupied_2) {\n              this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n              this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n            } else {\n              this.state.sw_1_src = CX_225_Lined_Top;\n              this.state.sw_3_src = CX_135_Lined_Top;\n            } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_1_1__|__1_bt_pascack\") {\n              this.state.sig_2w_src = SIG_W_Clear;\n              this.state.sig_2e_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_2w_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_2_2__|__2_bt_pascack\" || this.state.routes[i] === \"E_2_2__|__2_pascack_hx\") {\n        // Tail Tracks\n        this.state.tail_2_e = color_2;\n        this.state.tail_2_w = color_2;\n\n        if (this.state.occupied_2) {\n          // Switches\n          // Switches\n          if (this.state.route_1) {\n            this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n            this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n          } else if (this.state.occupied_1) {\n            this.state.sw_1_src = CX_225_Occupied_Both;\n            this.state.sw_3_src = CX_135_Occupied_Both;\n          } else {\n            this.state.sw_1_src = CX_225_Occupied_Bottom;\n            this.state.sw_3_src = CX_135_Occupied_Bottom;\n          } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          // Switches\n          if (this.state.route_1) {\n            this.state.sw_1_src = CX_225_Lined_Both;\n            this.state.sw_3_src = CX_135_Lined_Both;\n          } else if (this.state.occupied_1) {\n            this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n          } else {\n            this.state.sw_1_src = CX_225_Lined_Bottom;\n            this.state.sw_3_src = CX_135_Lined_Bottom;\n          } // Signals\n          // West Bound Signals\n\n\n          if (this.state.routes[i] === \"W_2_2__|__2_bt_pascack\") {\n            this.state.sig_4w_src = SIG_W_Clear;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // East Bound Signals\n          else {\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_4e_src = SIG_E_Clear;\n            }\n        }\n      } else if (this.state.routes[i] === \"W_1_2__|__2_bt_pascack\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_2_w = color_1;\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_1_src = CX_225_R_Occupied;\n          this.state.sw_3_src = CX_135_Occupied_Top; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_1_src = CX_225_R_Lined;\n          this.state.sw_3_src = CX_135_Lined_Top; // Signals\n\n          this.state.sig_2w_src = SIG_W_Clear;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"E_2_1__|__1_pascack_hx\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_2;\n        this.state.tail_2_w = color_2;\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_1_src = CX_225_R_Occupied;\n          this.state.sw_3_src = CX_135_Occupied_Top; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_1_src = CX_225_R_Lined;\n          this.state.sw_3_src = CX_135_Lined_Top; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Clear;\n        }\n      } else if (this.state.routes[i] === \"W_2_1__|__1_bt_pascack\") {\n        // Tail Tracks\n        this.state.tail_2_e = color_2;\n        this.state.tail_1_w = color_2;\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_1_src = CX_225_Occupied_Top;\n          this.state.sw_3_src = CX_135_R_Occupied; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_1_src = CX_225_Lined_Top;\n          this.state.sw_3_src = CX_135_R_Lined; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Clear;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"E_1_2__|__2_pascack_hx\") {\n        // Tail Tracks\n        this.state.tail_2_e = color_1;\n        this.state.tail_1_w = color_1;\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_1_src = CX_225_Occupied_Top;\n          this.state.sw_3_src = CX_135_R_Occupied; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_1_src = CX_225_Lined_Top;\n          this.state.sw_3_src = CX_135_R_Lined; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Clear;\n          this.state.sig_4e_src = SIG_E_Stop;\n        }\n      }\n    }\n  } // ---- END set_route_drawings() ----\n\n  /**\n   * set_switch_images()\n   * @summary Changes image sources for the switches, depending on switch status\n   * \n   * @description This function uses the data passed in through status from the CTC classes and \n   * shows if the switches are reversed or not on the screen, by changing the image\n   * source files, to the correct .png file respectivly\n   */\n\n\n  set_switch_images() {\n    // Set SW #1\n    // SW #1 Reversed\n    if (this.state.sw_1) {\n      this.state.sw_1_src = CX_225_R;\n    } // SW #1 Normal\n    else {\n        this.state.sw_1_src = CX_225;\n      } // Set SW #3\n    // SW #3 Reversed\n\n\n    if (this.state.sw_3) {\n      this.state.sw_3_src = CX_135_R;\n    } // SW #3 Normal\n    else {\n        this.state.sw_3_src = CX_135;\n      }\n  } // ---- END set_switch_images() ----\n\n  /**\n   * @summary Function to reset the signal images and track colors\n   * \n   * @description This function is need, because if the player was to remove a route,\n   * or when the train clears the interlocking nothing will clear the route\n   * the is displaying on the screen, even if it's gone in the backend\n   */\n\n\n  reset_drawings() {\n    this.state.tail_1_w = Empty;\n    this.state.tail_2_w = Empty;\n    this.state.tail_1_e = Empty;\n    this.state.tail_2_e = Empty;\n    this.state.sig_2w_src = SIG_W;\n    this.state.sig_4w_src = SIG_W;\n    this.state.sig_2e_src = SIG_E;\n    this.state.sig_4e_src = SIG_E;\n  } //---- END reset_drawings() ----\n\n\n} // Export the interlocking to be drawn on the screen\n\n\nexport default PascackJct;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Bergen_County_Line/PascackJct.jsx"],"names":["React","Component","CX_135","CX_135_Lined_Top","CX_135_Lined_Bottom","CX_135_Lined_Both","CX_135_R","CX_135_R_Lined","CX_135_Lined_Top_Occupied_Bottom","CX_135_Occupied_Top_Lined_Bottom","CX_135_Occupied_Top","CX_135_Occupied_Bottom","CX_135_Occupied_Both","CX_135_R_Occupied","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","PascackJct","state","sw_1","props","status","sw_3","sw_1_src","sw_3_src","tail_1_w","tail_2_w","tail_1_e","tail_2_e","sig_2w_src","sig_4w_src","sig_2e_src","sig_4e_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_1","route_2","routed_2","routes","componentWillReceiveProps","nextProps","setState","render","reset_drawings","set_switch_images","set_route_drawings","background","throw_sw_1","throw_sw_3","click_sig_2w","click_sig_4w","click_sig_2e","click_sig_4e","color_1","color_2","i","length"],"mappings":"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","sourcesContent":["/**\n * @file PascackJct.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Pascack Junction Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the Pascack Junction Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Bergen_County_Line/pascack_jct.css';\n\n// Import Images\n// Switch Images\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png';\n\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the Pascack Junction Interlocking\n * This class is a JSX React Component for the Pascack Junction Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass PascackJct extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * @description This object holds all the information for the interlocking that is required to display the routes \n     * correctly Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_225,\n        sw_3_src: CX_135,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        // Image File for the signals - Will change depending on route\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_1,\n        route_2: this.props.status.routed_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * @description The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_1,\n            route_2: nextProps.status.routed_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings(); \n        // Set the switch images based off the state of each crossover\n        this.set_switch_images();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"pascack_title\">PASCACK</div>\n                <div className=\"pascack_milepost\">MP 7.6</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"pascack_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"pascack_2_west\" style={{background: this.state.tail_2_w}}></div>\n                {/* Switches */}\n                <div className=\"pascack_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"pascack_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"pascack_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"pascack_2_east\" style={{background: this.state.tail_2_e}}></div>\n                {/* Signals */}\n                <div className=\"pascack_sig_2w\" onClick={this.props.click_sig_2w}><img src={this.state.sig_2w_src}/></div>\n                <div className=\"pascack_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n                <div className=\"pascack_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"pascack_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Setting the color of the tracks depending on if the interlocking in occupied or not\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop through all the routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_bt_pascack\" || this.state.routes[i] === \"E_1_1__|__1_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                    }\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                        this.state.sw_3_src = CX_135_Occupied_Both;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                        this.state.sw_3_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // Route Is Not Occupied\n                else {\n                    // Switches\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                        this.state.sw_3_src = CX_135_Lined_Both;\n                    }\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                        this.state.sw_3_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_bt_pascack\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_bt_pascack\" || this.state.routes[i] === \"E_2_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                if (this.state.occupied_2) {\n                    // Switches\n                    // Switches\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                    }\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                        this.state.sw_3_src = CX_135_Occupied_Both;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    // Switches\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                        this.state.sw_3_src = CX_135_Lined_Both;\n                    }\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Bottom;\n                        this.state.sw_3_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_bt_pascack\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_bt_pascack\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Occupied;\n                    this.state.sw_3_src = CX_135_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Lined;\n                    this.state.sw_3_src = CX_135_Lined_Top;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Occupied;\n                    this.state.sw_3_src = CX_135_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Lined;\n                    this.state.sw_3_src = CX_135_Lined_Top;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__1_bt_pascack\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_1_w = color_2;\n\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_225_Lined_Top;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n                    \n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_225_Lined_Top;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Clear;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_images()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * @description This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_images() {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_225_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_225;\n        }\n\n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = CX_135_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = CX_135;\n        }\n    }\n    // ---- END set_switch_images() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * @description This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n\n        this.state.sig_2w_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_4e_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default PascackJct;"]},"metadata":{},"sourceType":"module"}