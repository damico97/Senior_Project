{"ast":null,"code":"/**\n * @file ctc_laurel.js\n * @author Joey Damico\n * @date September 25, 2019\n * @summary CTC Controller Class for the Laurel Interlocking\n */\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Lined = '#75fa4c';\nconst Occupied = '#eb3323';\n/**\n * Class is the Backend for the Laurel Interlocking This class is what controlls the Laurel Interlocking, \n * it is sort of like a backen, but is the controller, this is what makes all the train movements possible, \n * and the ReactJS Component class gets information from this class to display the correct status of the \n * interlocking on the screen\n * \n * MEMBER VARIABLES\n * @member sw_1 -> Bool if Switch #1 is Reveresed or Not\n * @member sw_3 -> Bool if Switch #3 is Reveresed or Not\n * @member sw_7 -> Bool if Switch #7 is Reveresed or Not\n * @member sw_9 -> Bool if Switch #9 is Reveresed or Not\n * @member sw_11 -> Bool if Switch #11 is Reveresed or Not\n * @member sw_13 -> Bool if Switch #13 is Reveresed or Not\n * \n * @member sig_2w -> Bool if Signal #2w is Lined or Not\n * @member sig_4w -> Bool if Signal #4w is Lined or Not\n * @member sig_8w -> Bool if Signal #8w is Lined or Not\n * @member sig_10w -> Bool if Signal #10w is Lined or Not\n * @member sig_2e -> Bool if Signal #2e is Lined or Not\n * @member sig_4e -> Bool if Signal #4e is Lined or Not\n * @member sig_8e -> Bool if Signal #8e is Lined or Not\n * @member sig_12e -> Bool if Signal #12e is Lined or Not\n * \n * @member route_w_trk_1 = The west bound route for track #1\n * @member route_w_trk_2 = The west bound route for track #2\n * @member route_w_trk_3 = The west bound route for track #3\n * @member route_w_trk_4 = The west bound route for track #4\n * @member route_e_trk_1 = The east bound route for track #1\n * @member route_e_trk_2 = The east bound route for track #2\n * @member route_e_trk_3 = The east bound route for track #3\n * @member route_e_trk_4 = The east bound route for track #4\n * \n * @member routed_trk_1 = Bool if track #1 is routed or not\n * @member routed_trk_2 = Bool if track #2 is routed or not\n * @member routed_trk_3 = Bool if track #3 is routed or not\n * @member routed_trk_4 = Bool if track #4 is routed or not\n * @member trk_1_time = The time track #1 was occupied, used to know when to clear the route\n * @member trk_2_time = The time track #2 was occupied, used to know when to clear the route\n * @member trk_3_time = The time track #3 was occupied, used to know when to clear the route\n * @member trk_4_time = The time track #4 was occupied, used to know when to clear the route\n * @member trk_1_occupied = Bool if track #1 is occupied or not\n * @member trk_2_occupied = Bool if track #2 is occupied or not\n * @member trk_3_occupied = Bool if track #3 is occupied or not\n * @member trk_4_occupied = Bool if track #4 is occupied or not\n */\n\nclass CTC_Laurel {\n  /**\n   * constructor()\n   * @summary The constructor for the CTC_Laurel class\n   * \n   * @description This will initialize all the member variables when the program is started\n   */\n  constructor() {\n    // Bools for the switches\n    this.sw_1 = false;\n    this.sw_3 = false;\n    this.sw_7 = false;\n    this.sw_9 = false;\n    this.sw_11 = false;\n    this.sw_13 = false; // Bools for the signals\n\n    this.sig_2w = false;\n    this.sig_4w = false;\n    this.sig_8w = false;\n    this.sig_10w = false;\n    this.sig_6e = false;\n    this.sig_12e = false;\n    this.sig_8e = false;\n    this.sig_4e = false; // Track routes\n\n    this.route_w_trk_3 = null;\n    this.route_w_trk_4 = null;\n    this.route_w_trk_1 = null;\n    this.route_w_trk_2 = null;\n    this.route_e_trk_3 = null;\n    this.route_e_trk_4 = null;\n    this.route_e_trk_1 = null;\n    this.route_e_trk_2 = null; // Used for routing and occupying the tracks \n\n    this.routed_trk_1 = false;\n    this.routed_trk_2 = false;\n    this.routed_trk_3 = false;\n    this.routed_trk_4 = false;\n    this.occupied_trk_1 = false;\n    this.occupied_trk_2 = false;\n    this.occupied_trk_3 = false;\n    this.occupied_trk_4 = false;\n    this.trk_1_time = null;\n    this.trk_2_time = null;\n    this.trk_3_time = null;\n    this.trk_4_time = null;\n  } // ---- END constructor() ----\n\n  /**\n   * get_train_route()\n   * @summary Returns the route for the train at a given track\n   * \n   * @param direction, The direction the train is moving\n   * @param track, The Track number of the train \n   */\n\n\n  get_train_route(direction, track) {\n    if (direction === \"WEST\") {\n      if (track === \"1\") {\n        return this.route_w_trk_1;\n      } else if (track === \"2\") {\n        return this.route_w_trk_2;\n      } else if (track === \"3\") {\n        return this.route_w_trk_3;\n      } else {\n        return this.route_w_trk_4;\n      }\n    } else {\n      if (track === \"1\") {\n        return this.route_e_trk_1;\n      } else if (track === \"2\") {\n        return this.route_e_trk_2;\n      } else if (track === \"3\") {\n        return this.route_e_trk_3;\n      } else {\n        return this.route_e_trk_4;\n      }\n    }\n  } // ---- END get_train_route() ----\n\n  /**\n   * click_sig_2w()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_1, The next block on Track #1\n   * @param next_block_2, The next block on Track #2\n   * @param next_block_3, The next block on Track #3\n   */\n\n\n  click_sig_2w(next_block_1, next_block_2, next_block_3) {\n    if (this.sw_11 || this.sw_1) {\n      return;\n    } else if (!this.sw_7 && !this.sw_3) {\n      if (this.sig_2w) {\n        this.route_w_trk_1 = null;\n        this.routed_trk_1 = false;\n        this.sig_2w = false;\n        return;\n      } else {\n        if (next_block_1 === Occupied || next_block_1 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_1 = \"W_1_1__|__2_hx_laurel\";\n        this.routed_trk_1 = true;\n        this.sig_2w = true;\n      }\n    } else if (!this.sw_7 && this.sw_3) {\n      if (this.sig_2w) {\n        this.route_w_trk_1 = null;\n        this.routed_trk_1 = false;\n        this.sig_2w = false;\n      } else {\n        if (next_block_3 === Occupied || next_block_3 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_1 = \"W_1_3__|__3_hx_laurel\";\n        this.routed_trk_1 = true;\n        this.sig_2w = true;\n      }\n    } else if (this.sw_7) {\n      if (this.sig_2w) {\n        this.route_w_trk_1 = null;\n        this.routed_trk_1 = false;\n        this.sig_2w = false;\n        return;\n      } else {\n        if (next_block_2 === Occupied || next_block_2 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_1 = \"W_1_2__|__2_westSecaucus_laurel\";\n        this.routed_trk_1 = true;\n        this.sig_2w = true;\n      }\n    }\n  } // ---- END click_sig_2w() ----\n\n  /**\n   * click_sig_4w()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_1, The next block on Track #1\n   * @param next_block_2, The next block on Track #2\n   * @param next_block_3, The next block on Track #3\n   */\n\n\n  click_sig_4w(next_block_1, next_block_2, next_block_3) {\n    if (this.sw_13 || this.sw_7) {\n      return;\n    } else if (!this.sw_1) {\n      if (this.sig_4w) {\n        this.route_w_trk_2 = null;\n        this.routed_trk_2 = false;\n        this.sig_4w = false;\n      } else {\n        if (next_block_2 === Occupied || next_block_2 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_2 = \"W_2_2__|__2_westSecaucus_laurel\";\n        this.routed_trk_2 = true;\n        this.sig_4w = true;\n      }\n    } else if (this.sw_1 && !this.sw_3) {\n      if (this.sig_4w) {\n        this.route_w_trk_2 = null;\n        this.routed_trk_2 = false;\n        this.sig_4w = false;\n      } else {\n        if (next_block_1 === Occupied || next_block_1 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_2 = \"W_2_1__|__2_hx_laurel\";\n        this.routed_trk_2 = true;\n        this.sig_4w = true;\n      }\n    } else if (this.sw_1 && this.sw_3) {\n      if (this.sig_4w) {\n        this.route_w_trk_2 = null;\n        this.routed_trk_2 = false;\n        this.sig_4w = false;\n      } else {\n        if (next_block_3 === Occupied || next_block_3 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_2 = \"W_2_3__|__3_hx_laurel\";\n        this.routed_trk_2 = true;\n        this.sig_4w = true;\n      }\n    }\n  } // ---- END click_sig_4w() ----\n\n  /**\n   * click_sig_8w()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_1, The next block on Track #1\n   * @param next_block_2, The next block on Track #2\n   * @param next_block_3, The next block on Track #3\n   * @param next_block_4, The next block on Track #4\n   */\n\n\n  click_sig_8w(next_block_1, next_block_2, next_block_3, next_block_4) {\n    if (!this.sw_13) {\n      if (this.sig_8w) {\n        this.route_w_trk_4 = null;\n        this.routed_trk_4 = false;\n        this.sig_8w = false;\n      } else {\n        if (next_block_4 === Occupied || next_block_4 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_4 = \"W_4_4__|__4_westSecaucus_laurel\";\n        this.routed_trk_4 = true;\n        this.sig_8w = true;\n      }\n    } else if (this.sw_13 && !this.sw_7 && !this.sw_1) {\n      if (this.sig_8w) {\n        this.route_w_trk_4 = null;\n        this.routed_trk_4 = false;\n        this.sig_8w = false;\n      } else {\n        if (next_block_2 === Occupied || next_block_2 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_4 = \"W_4_2__|__2_westSecaucus_laurel\";\n        this.routed_trk_4 = true;\n        this.sig_8w = true;\n      }\n    } else if (this.sw_13 && !this.sw_7 && this.sw_1 && !this.sw_3) {\n      if (this.sig_8w) {\n        this.route_w_trk_4 = null;\n        this.routed_trk_4 = false;\n        this.sig_8w = false;\n      } else {\n        if (next_block_1 === Occupied || next_block_1 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_4 = \"W_4_1__|__2_hx_laurel\";\n        this.routed_trk_4 = true;\n        this.sig_8w = true;\n      }\n    } else if (this.sw_13 && !this.sw_7 && this.sw_1 && this.sw_3) {\n      if (this.sig_8w) {\n        this.route_w_trk_4 = null;\n        this.routed_trk_4 = false;\n        this.sig_8w = false;\n      } else {\n        if (next_block_3 === Occupied || next_block_3 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_4 = \"W_4_3__|__3_hx_laurel\";\n        this.routed_trk_4 = true;\n        this.sig_8w = true;\n      }\n    }\n  } // ---- END click_sig_8w() ----\n\n  /**\n   * click_sig_10w()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_1, The next block on Track #1\n   * @param next_block_2, The next block on Track #2\n   * @param next_block_3, The next block on Track #3\n   */\n\n\n  click_sig_10w(next_block_1, next_block_2, next_block_3) {\n    if (!this.sw_11 && !this.sw_3) {\n      if (this.sig_10w) {\n        this.route_w_trk_3 = null;\n        this.routed_trk_3 = false;\n        this.sig_10w = false;\n      } else {\n        if (next_block_3 === Occupied || next_block_3 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_3 = \"W_3_3__|__3_hx_laurel\";\n        this.routed_trk_3 = true;\n        this.sig_10w = true;\n      }\n    } else if (this.sw_11 && !this.sw_7 && !this.sw_3 && !this.sw_1) {\n      if (this.sig_10w) {\n        this.route_w_trk_3 = null;\n        this.routed_trk_3 = false;\n        this.sig_10w = false;\n      } else {\n        if (next_block_1 === Occupied || next_block_1 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_3 = \"W_3_1__|__1_hx_laurel\";\n        this.routed_trk_3 = true;\n        this.sig_10w = true;\n      }\n    } else if (this.sw_11 && this.sw_7 && !this.sw_1) {\n      if (this.sig_10w) {\n        this.route_w_trk_3 = null;\n        this.routed_trk_3 = false;\n        this.sig_10w = false;\n      } else {\n        if (next_block_2 === Occupied || next_block_2 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_w_trk_3 = \"W_3_2__|__2_westSecaucus_laurel\";\n        this.routed_trk_3 = true;\n        this.sig_10w = true;\n      }\n    }\n  } // ---- END click_sig_10w() ----\n\n  /**\n   * click_sig_6e()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_1, The next block on Track #1\n   * @param next_block_2, The next block on Track #2\n   * @param next_block_3, The next block on Track #3\n   * @param next_block_4, The next block on Track #4\n   */\n\n\n  click_sig_6e(next_block_1, next_block_2, next_block_3, next_block_4) {\n    if (!this.sw_3 && !this.sw_11) {\n      if (this.sig_6e) {\n        this.route_e_trk_3 = null;\n        this.routed_trk_3 = false;\n        this.sig_6e = false;\n      } else {\n        if (next_block_3 === Occupied || next_block_3 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_3 = \"E_3_3__|__3_laurel_westEnd\";\n        this.routed_trk_3 = true;\n        this.sig_6e = true;\n      }\n    } else if (this.sw_3 && !this.sw_1 && !this.sw_7) {\n      if (this.sig_6e) {\n        this.route_e_trk_3 = null;\n        this.routed_trk_3 = false;\n        this.sig_6e = false;\n      } else {\n        if (next_block_1 === Occupied || next_block_1 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_3 = \"E_3_1__|__1_laurel_westEnd\";\n        this.routed_trk_3 = true;\n        this.sig_6e = true;\n      }\n    } else if (this.sw_3 && this.sw_1 && !this.sw_7 && !this.sw_13) {\n      if (this.sig_6e) {\n        this.route_e_trk_3 = null;\n        this.routed_trk_3 = false;\n        this.sig_6e = false;\n      } else {\n        if (next_block_2 === Occupied || next_block_2 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_3 = \"E_3_2__|__2_laurel_westEnd\";\n        this.routed_trk_3 = true;\n        this.sig_6e = true;\n      }\n    } else if (this.sw_3 && this.sw_1 && !this.sw_7 && this.sw_13) {\n      if (this.sig_6e) {\n        this.route_e_trk_3 = null;\n        this.routed_trk_3 = false;\n        this.sig_6e = false;\n      } else {\n        if (next_block_4 === Occupied || next_block_4 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_3 = \"E_3_4__|__4_laurel_westEnd\";\n        this.routed_trk_3 = true;\n        this.sig_6e = true;\n      }\n    }\n  } // ---- END click_sig_6e() ----\n\n  /**\n   * click_sig_12e()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_1, The next block on Track #1\n   * @param next_block_2, The next block on Track #2\n   * @param next_block_3, The next block on Track #3\n   * @param next_block_4, The next block on Track #4\n   */\n\n\n  click_sig_12e(next_block_1, next_block_2, next_block_3, next_block_4) {\n    if (this.sw_3 || this.sw_7) {\n      return;\n    } else if (!this.sw_1 && !this.sw_11) {\n      if (this.sig_12e) {\n        this.route_e_trk_1 = null;\n        this.routed_trk_1 = false;\n        this.sig_12e = false;\n      } else {\n        if (next_block_1 === Occupied || next_block_1 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_1 = \"E_1_1__|__1_laurel_westEnd\";\n        this.routed_trk_1 = true;\n        this.sig_12e = true;\n      }\n    } else if (!this.sw_1 && this.sw_11) {\n      if (this.sig_12e) {\n        this.route_e_trk_1 = null;\n        this.routed_trk_1 = false;\n        this.sig_12e = false;\n      } else {\n        if (next_block_3 === Occupied || next_block_3 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_1 = \"E_1_3__|__3_laurel_westEnd\";\n        this.routed_trk_1 = true;\n        this.sig_12e = true;\n      }\n    } else if (this.sw_1 && !this.sw_13) {\n      if (this.sig_12e) {\n        this.route_e_trk_1 = null;\n        this.routed_trk_1 = false;\n        this.sig_12e = false;\n      } else {\n        if (next_block_2 === Occupied || next_block_2 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_1 = \"E_1_2__|__2_laurel_westEnd\";\n        this.routed_trk_1 = true;\n        this.sig_12e = true;\n      }\n    } else if (this.sw_1 && this.sw_13) {\n      if (this.sig_12e) {\n        this.route_e_trk_1 = null;\n        this.routed_trk_1 = false;\n        this.sig_12e = false;\n      } else {\n        if (next_block_4 === Occupied || next_block_4 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_1 = \"E_1_4__|__4_laurel_westEnd\";\n        this.routed_trk_1 = true;\n        this.sig_12e = true;\n      }\n    }\n  } // ---- END click_sig_12e() ----\n\n  /**\n   * click_sig_4e()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_1, The next block on Track #1\n   * @param next_block_2, The next block on Track #2\n   * @param next_block_3, The next block on Track #3\n   * @param next_block_4, The next block on Track #4\n   */\n\n\n  click_sig_4e(next_block_1, next_block_2, next_block_3, next_block_4) {\n    if (this.sw_1) {\n      return;\n    } else if (!this.sw_7 && !this.sw_13) {\n      if (this.sig_4e) {\n        this.route_e_trk_2 = null;\n        this.routed_trk_2 = false;\n        this.sig_4e = false;\n      } else {\n        if (next_block_2 === Occupied || next_block_2 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_2 = \"E_2_2__|__2_laurel_westEnd\";\n        this.routed_trk_2 = true;\n        this.sig_4e = true;\n      }\n    } else if (!this.sw_7 && this.sw_13) {\n      if (this.sig_4e) {\n        this.route_e_trk_2 = null;\n        this.routed_trk_2 = false;\n        this.sig_4e = false;\n      } else {\n        if (next_block_4 === Occupied || next_block_4 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_2 = \"E_2_4__|__4_laurel_westEnd\";\n        this.routed_trk_2 = true;\n        this.sig_4e = true;\n      }\n    } else if (this.sw_7 && !this.sw_11) {\n      if (this.sig_4e) {\n        this.route_e_trk_2 = null;\n        this.routed_trk_2 = false;\n        this.sig_4e = false;\n      } else {\n        if (next_block_1 === Occupied || next_block_1 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_2 = \"E_2_1__|__1_laurel_westEnd\";\n        this.routed_trk_2 = true;\n        this.sig_4e = true;\n      }\n    } else if (this.sw_7 && this.sw_11) {\n      if (this.sig_4e) {\n        this.route_e_trk_2 = null;\n        this.routed_trk_2 = false;\n        this.sig_4e = false;\n      } else {\n        if (next_block_3 === Occupied || next_block_3 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_2 = \"E_2_3__|__3_laurel_westEnd\";\n        this.routed_trk_2 = true;\n        this.sig_4e = true;\n      }\n    }\n  } // ---- END click_sig_4e() ----\n\n  /**\n   * click_sig_8e()\n   * @summary the function that is called when clicking the signal, creates a route\n   * \n   * @description When the function is called it will determine if a route can be created, \n   * and if so what the route is and sets it based off of the switch status\n   * \n   * @param next_block_4, The next block on Track #4\n   */\n\n\n  click_sig_8e(next_block_4) {\n    if (this.sw_13) {\n      return;\n    } else {\n      if (this.sig_8e) {\n        this.route_e_trk_4 = null;\n        this.routed_trk_4 = false;\n        this.sig_8e = false;\n      } else {\n        if (next_block_4 === Occupied || next_block_4 === Lined) {\n          alert(\"Cannot Line Route Because Conflict With Next Block\");\n          return;\n        }\n\n        this.route_e_trk_4 = \"E_4_4__|__4_laurel_westEnd\";\n        this.routed_trk_4 = true;\n        this.sig_8e = true;\n      }\n    }\n  } // ---- END click_sig_8e() ----\n\n  /**\n   * set_trk_1_occupied()\n   * @summary Sets track #1 as occupied\n   * \n   * @param n_state, The new state of the track\n   * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n   */\n\n\n  set_trk_1_occupied(n_state) {\n    if (n_state === true) {\n      this.occupied_trk_1 = n_state;\n      this.routed_trk_1 = false;\n      this.trk_1_time = new Date().getTime() / 1000;\n    } else {\n      console.log(\"ERROR\");\n    }\n  } // ---- END set_trk_1_occupied() ----\n\n  /**\n   * set_trk_2_occupied()\n   * @summary Sets track #2 as occupied\n   * \n   * @param n_state, The new state of the track\n   * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n   */\n\n\n  set_trk_2_occupied(n_state) {\n    if (n_state === true) {\n      this.occupied_trk_2 = n_state;\n      this.routed_trk_2 = false;\n      this.trk_2_time = new Date().getTime() / 1000;\n    } else {\n      console.log(\"ERROR\");\n    }\n  } // ---- END set_trk_2_occupied() ----\n\n  /**\n   * set_trk_3_occupied()\n   * @summary Sets track #3 as occupied\n   * \n   * @param n_state, The new state of the track\n   * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n   */\n\n\n  set_trk_3_occupied(n_state) {\n    if (n_state === true) {\n      this.occupied_trk_3 = n_state;\n      this.routed_trk_3 = false;\n      this.trk_3_time = new Date().getTime() / 1000;\n    } else {\n      console.log(\"ERROR\");\n    }\n  } // ---- END set_trk_3_occupied() ----\n\n  /**\n   * set_trk_4_occupied()\n   * @summary Sets track #4 as occupied\n   * \n   * @param n_state, The new state of the track\n   * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n   */\n\n\n  set_trk_4_occupied(n_state) {\n    if (n_state === true) {\n      this.occupied_trk_4 = n_state;\n      this.routed_trk_4 = false;\n      this.trk_4_time = new Date().getTime() / 1000;\n    } else {\n      console.log(\"ERROR\");\n    }\n  } // ---- END set_trk_4_occupied() ----\n\n  /**\n   * can_clear()\n   * @summary Checks if a track could be cleared, meaning a train is no longer in the interlocking\n   * \n   * @description Check both track if a train has been in the interlocking for more then 4 seconds, if so it\n   * clears that track\n   */\n\n\n  can_clear() {\n    // Get the current time\n    let current_time = new Date().getTime() / 1000; // Track #1\n\n    if (current_time - this.trk_1_time > 4 && current_time - this.trk_1_time < 100000) {\n      this.sig_2w = false;\n      this.sig_12e = false;\n      this.route_w_trk_1 = null;\n      this.route_e_trk_1 = null;\n      this.routed_trk_1 = false;\n      this.occupied_trk_1 = false;\n      this.trk_1_time = null;\n    } // Track #2\n\n\n    if (current_time - this.trk_2_time > 4 && current_time - this.trk_2_time < 100000) {\n      this.sig_4w = false;\n      this.sig_4e = false;\n      this.route_w_trk_2 = null;\n      this.route_e_trk_2 = null;\n      this.routed_trk_2 = false;\n      this.occupied_trk_2 = false;\n      this.trk_2_time = null;\n    } // Track #3\n\n\n    if (current_time - this.trk_3_time > 4 && current_time - this.trk_3_time < 100000) {\n      this.sig_10w = false;\n      this.sig_6e = false;\n      this.route_w_trk_3 = null;\n      this.route_e_trk_3 = null;\n      this.routed_trk_3 = false;\n      this.occupied_trk_3 = false;\n      this.trk_3_time = null;\n    } // Track #4\n\n\n    if (current_time - this.trk_4_time > 4 && current_time - this.trk_4_time < 100000) {\n      this.sig_8w = false;\n      this.sig_8e = false;\n      this.route_w_trk_4 = null;\n      this.route_e_trk_4 = null;\n      this.routed_trk_4 = false;\n      this.occupied_trk_4 = false;\n      this.trk_4_time = null;\n    }\n  } // ---- END can_clear() ----\n\n  /**\n   * get_routes()\n   * @summary Gets all the routes from the interlocking\n   * \n   * @returns An Array holding every route variable from the interlocking\n   */\n\n\n  get_routes() {\n    let routes = [this.route_e_trk_4, this.route_e_trk_3, this.route_e_trk_1, this.route_e_trk_2, this.route_w_trk_4, this.route_w_trk_3, this.route_w_trk_2, this.route_w_trk_1];\n    return routes;\n  } // ---- END get_routes() ----\n\n  /**\n   * @summary Function to throw switch #1 in the interlocking\n   * \n   * The function sets the status of the switch, whether it is is the normal possition\n   * of reversed, (True = Reversed / False = Normal)\n   */\n\n\n  throw_sw_1() {\n    if (this.sw_1 === false) {\n      this.sw_1 = true;\n    } else {\n      this.sw_1 = false;\n    }\n  } // ---- END throw_sw_1() ----\n\n  /**\n   * @summary Funtion to throw switch #3 in the interlocking\n   * \n   * The function sets the status of the switch, whether it is is the normal possition\n   * of reversed, (True = Reversed / False = Normal)\n   */\n\n\n  throw_sw_3() {\n    if (this.sw_3 === false) {\n      this.sw_3 = true;\n    } else {\n      this.sw_3 = false;\n    }\n  } // ---- END throw_sw_3() ----\n\n  /**\n   * @summary Funtion to throw switch #7 in the interlocking\n   * \n   * The function sets the status of the switch, whether it is is the normal possition\n   * of reversed, (True = Reversed / False = Normal)\n   */\n\n\n  throw_sw_7() {\n    if (this.sw_7 === false) {\n      this.sw_7 = true;\n    } else {\n      this.sw_7 = false;\n    }\n  } // ---- END throw_sw_7() ----\n\n  /**\n   * @summary Funtion to throw switch #9 in the interlocking\n   * \n   * The function sets the status of the switch, whether it is is the normal possition\n   * of reversed, (True = Reversed / False = Normal)\n   */\n\n\n  throw_sw_9() {\n    if (this.sw_9 === false) {\n      this.sw_9 = true;\n    } else {\n      this.sw_9 = false;\n    }\n  } // ---- END throw_sw_9() ----\n\n  /**\n   * @summary Funtion to throw switch #11 in the interlocking\n   * \n   * The function sets the status of the switch, whether it is is the normal possition\n   * of reversed, (True = Reversed / False = Normal)\n   */\n\n\n  throw_sw_11() {\n    if (this.sw_11 === false) {\n      this.sw_11 = true;\n    } else {\n      this.sw_11 = false;\n    }\n  } // ---- END throw_sw_11() ----\n\n  /**\n   * @summary Funtion to throw switch #13 in the interlocking\n   * \n   * The function sets the status of the switch, whether it is is the normal possition\n   * of reversed, (True = Reversed / False = Normal)\n   */\n\n\n  throw_sw_13() {\n    if (this.sw_13 === false) {\n      this.sw_13 = true;\n    } else {\n      this.sw_13 = false;\n    }\n  } // ---- END throw_sw_13() ----\n\n  /**\n   * get_interlocking_status()\n   * @summary returns the status of the interlocking that would be needed by the ReactJS Components\n   * \n   * @description All the information that is returned here is what is needed by the ReactJS Component \n   * for the interlocking that is need to draw the interlocking to the screen\n   * \n   * @returns Object with the status of the interlocking\n   */\n\n\n  get_interlocking_status() {\n    let status = {\n      sw_1: this.sw_1,\n      sw_3: this.sw_3,\n      sw_7: this.sw_7,\n      sw_9: this.sw_9,\n      sw_11: this.sw_11,\n      sw_13: this.sw_13,\n      routed_1: this.routed_trk_1,\n      routed_2: this.routed_trk_2,\n      routed_3: this.routed_trk_3,\n      routed_4: this.routed_trk_4,\n      occupied_1: this.occupied_trk_1,\n      occupied_2: this.occupied_trk_2,\n      occupied_3: this.occupied_trk_3,\n      occupied_4: this.occupied_trk_4,\n      routes: this.get_routes()\n    };\n    return status;\n  } // ---- END get_interlocking_status() ----\n\n\n} // This is required when using ReactJS\n\n\nexport default CTC_Laurel;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/scripts/Interlockings/Main_Line/ctc_laurel.js"],"names":["Empty","Lined","Occupied","CTC_Laurel","constructor","sw_1","sw_3","sw_7","sw_9","sw_11","sw_13","sig_2w","sig_4w","sig_8w","sig_10w","sig_6e","sig_12e","sig_8e","sig_4e","route_w_trk_3","route_w_trk_4","route_w_trk_1","route_w_trk_2","route_e_trk_3","route_e_trk_4","route_e_trk_1","route_e_trk_2","routed_trk_1","routed_trk_2","routed_trk_3","routed_trk_4","occupied_trk_1","occupied_trk_2","occupied_trk_3","occupied_trk_4","trk_1_time","trk_2_time","trk_3_time","trk_4_time","get_train_route","direction","track","click_sig_2w","next_block_1","next_block_2","next_block_3","alert","click_sig_4w","click_sig_8w","next_block_4","click_sig_10w","click_sig_6e","click_sig_12e","click_sig_4e","click_sig_8e","set_trk_1_occupied","n_state","Date","getTime","console","log","set_trk_2_occupied","set_trk_3_occupied","set_trk_4_occupied","can_clear","current_time","get_routes","routes","throw_sw_1","throw_sw_3","throw_sw_7","throw_sw_9","throw_sw_11","throw_sw_13","get_interlocking_status","status","routed_1","routed_2","routed_3","routed_4","occupied_1","occupied_2","occupied_3","occupied_4"],"mappings":"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","sourcesContent":["/**\n * @file ctc_laurel.js\n * @author Joey Damico\n * @date September 25, 2019\n * @summary CTC Controller Class for the Laurel Interlocking\n */\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Lined = '#75fa4c';\nconst Occupied = '#eb3323';\n\n\n/**\n * Class is the Backend for the Laurel Interlocking This class is what controlls the Laurel Interlocking, \n * it is sort of like a backen, but is the controller, this is what makes all the train movements possible, \n * and the ReactJS Component class gets information from this class to display the correct status of the \n * interlocking on the screen\n * \n * MEMBER VARIABLES\n * @member sw_1 -> Bool if Switch #1 is Reveresed or Not\n * @member sw_3 -> Bool if Switch #3 is Reveresed or Not\n * @member sw_7 -> Bool if Switch #7 is Reveresed or Not\n * @member sw_9 -> Bool if Switch #9 is Reveresed or Not\n * @member sw_11 -> Bool if Switch #11 is Reveresed or Not\n * @member sw_13 -> Bool if Switch #13 is Reveresed or Not\n * \n * @member sig_2w -> Bool if Signal #2w is Lined or Not\n * @member sig_4w -> Bool if Signal #4w is Lined or Not\n * @member sig_8w -> Bool if Signal #8w is Lined or Not\n * @member sig_10w -> Bool if Signal #10w is Lined or Not\n * @member sig_2e -> Bool if Signal #2e is Lined or Not\n * @member sig_4e -> Bool if Signal #4e is Lined or Not\n * @member sig_8e -> Bool if Signal #8e is Lined or Not\n * @member sig_12e -> Bool if Signal #12e is Lined or Not\n * \n * @member route_w_trk_1 = The west bound route for track #1\n * @member route_w_trk_2 = The west bound route for track #2\n * @member route_w_trk_3 = The west bound route for track #3\n * @member route_w_trk_4 = The west bound route for track #4\n * @member route_e_trk_1 = The east bound route for track #1\n * @member route_e_trk_2 = The east bound route for track #2\n * @member route_e_trk_3 = The east bound route for track #3\n * @member route_e_trk_4 = The east bound route for track #4\n * \n * @member routed_trk_1 = Bool if track #1 is routed or not\n * @member routed_trk_2 = Bool if track #2 is routed or not\n * @member routed_trk_3 = Bool if track #3 is routed or not\n * @member routed_trk_4 = Bool if track #4 is routed or not\n * @member trk_1_time = The time track #1 was occupied, used to know when to clear the route\n * @member trk_2_time = The time track #2 was occupied, used to know when to clear the route\n * @member trk_3_time = The time track #3 was occupied, used to know when to clear the route\n * @member trk_4_time = The time track #4 was occupied, used to know when to clear the route\n * @member trk_1_occupied = Bool if track #1 is occupied or not\n * @member trk_2_occupied = Bool if track #2 is occupied or not\n * @member trk_3_occupied = Bool if track #3 is occupied or not\n * @member trk_4_occupied = Bool if track #4 is occupied or not\n */\nclass CTC_Laurel { \n    /**\n     * constructor()\n     * @summary The constructor for the CTC_Laurel class\n     * \n     * @description This will initialize all the member variables when the program is started\n     */\n    constructor() {\n        // Bools for the switches\n        this.sw_1 = false;\n        this.sw_3 = false;\n        this.sw_7 = false;\n        this.sw_9 = false;\n        this.sw_11 = false;\n        this.sw_13 = false;\n        // Bools for the signals\n        this.sig_2w = false;\n        this.sig_4w = false;\n        this.sig_8w = false;\n        this.sig_10w = false;\n        this.sig_6e = false;\n        this.sig_12e = false;\n        this.sig_8e = false;\n        this.sig_4e = false;\n        // Track routes\n        this.route_w_trk_3 = null;\n        this.route_w_trk_4 = null;\n        this.route_w_trk_1 = null;\n        this.route_w_trk_2 = null;\n        this.route_e_trk_3 = null;\n        this.route_e_trk_4 = null;\n        this.route_e_trk_1 = null;\n        this.route_e_trk_2 = null;\n        // Used for routing and occupying the tracks \n        this.routed_trk_1 = false;\n        this.routed_trk_2 = false;\n        this.routed_trk_3 = false;\n        this.routed_trk_4 = false;\n        this.occupied_trk_1 = false;\n        this.occupied_trk_2 = false;\n        this.occupied_trk_3 = false;\n        this.occupied_trk_4 = false;\n        this.trk_1_time = null;\n        this.trk_2_time = null;\n        this.trk_3_time = null;\n        this.trk_4_time = null;\n    }\n    // ---- END constructor() ----\n\n    /**\n     * get_train_route()\n     * @summary Returns the route for the train at a given track\n     * \n     * @param direction, The direction the train is moving\n     * @param track, The Track number of the train \n     */\n    get_train_route(direction, track) {\n        if (direction === \"WEST\") {\n            if (track === \"1\") {\n                return this.route_w_trk_1;\n            }\n            else if (track === \"2\") {\n                return this.route_w_trk_2;\n            }\n            else if (track === \"3\") {\n                return this.route_w_trk_3;\n            }\n            else {\n                return this.route_w_trk_4;\n            }\n        }\n        else {\n            if (track === \"1\") {\n                return this.route_e_trk_1;\n            }\n            else if (track === \"2\") {\n                return this.route_e_trk_2;\n            }\n            else if (track === \"3\") {\n                return this.route_e_trk_3;\n            }\n            else {\n                return this.route_e_trk_4;\n            }\n        }\n    }\n    // ---- END get_train_route() ----\n\n    /**\n     * click_sig_2w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */\n    click_sig_2w(next_block_1, next_block_2, next_block_3) {\n        if (this.sw_11 || this.sw_1) {\n            return;\n        }\n        else if (!this.sw_7 && !this.sw_3) {\n            if (this.sig_2w) {\n                this.route_w_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2w = false;\n                return;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_1 = \"W_1_1__|__2_hx_laurel\";\n                this.routed_trk_1 = true;\n                this.sig_2w = true;\n            }\n        }\n        else if (!this.sw_7 && this.sw_3) {\n            if (this.sig_2w) {\n                this.route_w_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2w = false;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_1 = \"W_1_3__|__3_hx_laurel\";\n                this.routed_trk_1 = true;\n                this.sig_2w = true;\n            }\n        }\n        else if (this.sw_7) {\n            if (this.sig_2w) {\n                this.route_w_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2w = false;\n                return;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_1 = \"W_1_2__|__2_westSecaucus_laurel\";\n                this.routed_trk_1 = true;\n                this.sig_2w = true;\n            }\n        }\n    }\n    // ---- END click_sig_2w() ----\n\n    /**\n     * click_sig_4w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */\n    click_sig_4w(next_block_1, next_block_2, next_block_3) {\n        if (this.sw_13 || this.sw_7) {\n            return;\n        }\n        else if (!this.sw_1) {\n            if (this.sig_4w) {\n                this.route_w_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4w = false;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_2 = \"W_2_2__|__2_westSecaucus_laurel\";\n                this.routed_trk_2 = true;\n                this.sig_4w = true;\n            }\n        }\n        else if (this.sw_1 && !this.sw_3) {\n            if (this.sig_4w) {\n                this.route_w_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4w = false;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_2 = \"W_2_1__|__2_hx_laurel\";\n                this.routed_trk_2 = true;\n                this.sig_4w = true;\n            }\n        }\n        else if (this.sw_1 && this.sw_3) {\n            if (this.sig_4w) {\n                this.route_w_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4w = false;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_2 = \"W_2_3__|__3_hx_laurel\";\n                this.routed_trk_2 = true;\n                this.sig_4w = true;\n            }\n        }\n    }\n    // ---- END click_sig_4w() ----\n\n    /**\n     * click_sig_8w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_8w(next_block_1, next_block_2, next_block_3, next_block_4) {\n        if (!this.sw_13) {\n            if (this.sig_8w) {\n                this.route_w_trk_4 = null;\n                this.routed_trk_4 = false;\n                this.sig_8w = false;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_4 = \"W_4_4__|__4_westSecaucus_laurel\";\n                this.routed_trk_4 = true;\n                this.sig_8w = true;\n            }\n        }\n        else if (this.sw_13 && !this.sw_7 && !this.sw_1) {\n            if (this.sig_8w) {\n                this.route_w_trk_4 = null;\n                this.routed_trk_4 = false;\n                this.sig_8w = false;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_4 = \"W_4_2__|__2_westSecaucus_laurel\";\n                this.routed_trk_4 = true;\n                this.sig_8w = true;\n            }\n        }\n        else if (this.sw_13 && !this.sw_7 && this.sw_1 && !this.sw_3) {\n            if (this.sig_8w) {\n                this.route_w_trk_4 = null;\n                this.routed_trk_4 = false;\n                this.sig_8w = false;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_4 = \"W_4_1__|__2_hx_laurel\";\n                this.routed_trk_4 = true;\n                this.sig_8w = true;\n            }\n        }\n        else if (this.sw_13 && !this.sw_7 && this.sw_1 && this.sw_3) {\n            if (this.sig_8w) {\n                this.route_w_trk_4 = null;\n                this.routed_trk_4 = false;\n                this.sig_8w = false;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_4 = \"W_4_3__|__3_hx_laurel\";\n                this.routed_trk_4 = true;\n                this.sig_8w = true;\n            }\n        }\n    }\n    // ---- END click_sig_8w() ----\n\n    /**\n     * click_sig_10w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */\n    click_sig_10w(next_block_1, next_block_2, next_block_3) {\n        if (!this.sw_11 && !this.sw_3) {\n            if (this.sig_10w) {\n                this.route_w_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_10w = false;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_3 = \"W_3_3__|__3_hx_laurel\";\n                this.routed_trk_3 = true;\n                this.sig_10w = true;\n            }\n        }\n        else if (this.sw_11 && !this.sw_7 && !this.sw_3 && !this.sw_1) {\n            if (this.sig_10w) {\n                this.route_w_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_10w = false;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_3 = \"W_3_1__|__1_hx_laurel\";\n                this.routed_trk_3 = true;\n                this.sig_10w = true;\n            }\n        }\n        else if (this.sw_11 && this.sw_7 && !this.sw_1) {\n            if (this.sig_10w) {\n                this.route_w_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_10w = false;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_3 = \"W_3_2__|__2_westSecaucus_laurel\";\n                this.routed_trk_3 = true;\n                this.sig_10w = true;\n            }\n        }\n    }\n    // ---- END click_sig_10w() ----\n\n    /**\n     * click_sig_6e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_6e(next_block_1, next_block_2, next_block_3, next_block_4) {\n        if (!this.sw_3 && !this.sw_11) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_3__|__3_laurel_westEnd\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n        else if (this.sw_3 && !this.sw_1 && !this.sw_7) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_1__|__1_laurel_westEnd\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n        else if (this.sw_3 && this.sw_1 && !this.sw_7 && !this.sw_13) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_2__|__2_laurel_westEnd\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n        else if (this.sw_3 && this.sw_1 && !this.sw_7 && this.sw_13) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_4__|__4_laurel_westEnd\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n    }\n    // ---- END click_sig_6e() ----\n\n    /**\n     * click_sig_12e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_12e(next_block_1, next_block_2, next_block_3, next_block_4) {\n        if (this.sw_3 || this.sw_7) {\n            return;\n        }\n        else if (!this.sw_1 && !this.sw_11) {\n            if (this.sig_12e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_12e = false;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_1__|__1_laurel_westEnd\";\n                this.routed_trk_1 = true;\n                this.sig_12e = true;\n            }\n        }\n        else if (!this.sw_1 && this.sw_11) {\n            if (this.sig_12e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_12e = false;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_3__|__3_laurel_westEnd\";\n                this.routed_trk_1 = true;\n                this.sig_12e = true;\n            }\n        }\n        else if (this.sw_1 && !this.sw_13) {\n            if (this.sig_12e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_12e = false;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_2__|__2_laurel_westEnd\";\n                this.routed_trk_1 = true;\n                this.sig_12e = true;\n            }\n        }\n        else if (this.sw_1 && this.sw_13) {\n            if (this.sig_12e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_12e = false;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_4__|__4_laurel_westEnd\";\n                this.routed_trk_1 = true;\n                this.sig_12e = true;\n            }\n        }\n    }\n    // ---- END click_sig_12e() ----\n\n    /**\n     * click_sig_4e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_4e(next_block_1, next_block_2, next_block_3, next_block_4) {\n        if (this.sw_1) {\n            return;\n        }\n        else if (!this.sw_7 && !this.sw_13) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_2__|__2_laurel_westEnd\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        }   \n        else if (!this.sw_7 && this.sw_13) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_4__|__4_laurel_westEnd\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        }   \n        else if (this.sw_7 && !this.sw_11) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_1__|__1_laurel_westEnd\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        } \n        else if (this.sw_7 && this.sw_11) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_3__|__3_laurel_westEnd\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        } \n    }\n    // ---- END click_sig_4e() ----\n\n    /**\n     * click_sig_8e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_8e(next_block_4) {\n        if (this.sw_13) {\n            return;\n        }\n        else {\n            if (this.sig_8e) {\n                this.route_e_trk_4 = null;\n                this.routed_trk_4 = false;\n                this.sig_8e = false;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_4 = \"E_4_4__|__4_laurel_westEnd\";\n                this.routed_trk_4 = true;\n                this.sig_8e = true;\n            }\n        }\n    }\n    // ---- END click_sig_8e() ----\n\n    /**\n     * set_trk_1_occupied()\n     * @summary Sets track #1 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */\n    set_trk_1_occupied(n_state) {\n        if (n_state === true) {\n            this.occupied_trk_1 = n_state;\n            this.routed_trk_1 = false;\n            this.trk_1_time = new Date().getTime() / 1000;\n        }\n        else {\n            console.log(\"ERROR\");\n        }\n    }\n    // ---- END set_trk_1_occupied() ----\n\n    /**\n     * set_trk_2_occupied()\n     * @summary Sets track #2 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */\n    set_trk_2_occupied(n_state) {\n        if (n_state === true) {\n            this.occupied_trk_2 = n_state;\n            this.routed_trk_2 = false;\n            this.trk_2_time = new Date().getTime() / 1000;\n        }\n        else {\n            console.log(\"ERROR\");\n        }\n    }\n    // ---- END set_trk_2_occupied() ----\n\n    /**\n     * set_trk_3_occupied()\n     * @summary Sets track #3 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */\n    set_trk_3_occupied(n_state) {\n        if (n_state === true) {\n            this.occupied_trk_3 = n_state;\n            this.routed_trk_3 = false;\n            this.trk_3_time = new Date().getTime() / 1000;\n        }\n        else {\n            console.log(\"ERROR\");\n        }\n    }\n    // ---- END set_trk_3_occupied() ----\n\n    /**\n     * set_trk_4_occupied()\n     * @summary Sets track #4 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */\n    set_trk_4_occupied(n_state) {\n        if (n_state === true) {\n            this.occupied_trk_4 = n_state;\n            this.routed_trk_4 = false;\n            this.trk_4_time = new Date().getTime() / 1000;\n        }\n        else {\n            console.log(\"ERROR\");\n        }\n    }\n    // ---- END set_trk_4_occupied() ----\n\n    /**\n     * can_clear()\n     * @summary Checks if a track could be cleared, meaning a train is no longer in the interlocking\n     * \n     * @description Check both track if a train has been in the interlocking for more then 4 seconds, if so it\n     * clears that track\n     */\n    can_clear() {\n        // Get the current time\n        let current_time = new Date().getTime() / 1000;\n        // Track #1\n        if (current_time - this.trk_1_time > 4 && current_time - this.trk_1_time< 100000) {\n            this.sig_2w = false;\n            this.sig_12e = false;\n\n            this.route_w_trk_1 = null;\n            this.route_e_trk_1 = null;\n            this.routed_trk_1 = false;\n\n            this.occupied_trk_1 = false;\n            this.trk_1_time = null;\n        }\n        // Track #2\n        if (current_time - this.trk_2_time > 4 && current_time - this.trk_2_time< 100000) {\n            this.sig_4w = false;\n            this.sig_4e = false;\n\n            this.route_w_trk_2 = null;\n            this.route_e_trk_2 = null;\n            this.routed_trk_2 = false;\n\n            this.occupied_trk_2 = false;\n            this.trk_2_time = null;\n        }\n        // Track #3\n        if (current_time - this.trk_3_time > 4 && current_time - this.trk_3_time< 100000) {\n            this.sig_10w = false;\n            this.sig_6e = false;\n\n            this.route_w_trk_3 = null;\n            this.route_e_trk_3 = null;\n            this.routed_trk_3 = false;\n\n            this.occupied_trk_3 = false;\n            this.trk_3_time = null;\n        }\n        // Track #4\n        if (current_time - this.trk_4_time > 4 && current_time - this.trk_4_time< 100000) {\n            this.sig_8w = false;\n            this.sig_8e = false;\n\n            this.route_w_trk_4 = null;\n            this.route_e_trk_4 = null;\n            this.routed_trk_4 = false;\n\n            this.occupied_trk_4 = false;\n            this.trk_4_time = null;\n        }\n    }\n    // ---- END can_clear() ----\n\n    /**\n     * get_routes()\n     * @summary Gets all the routes from the interlocking\n     * \n     * @returns An Array holding every route variable from the interlocking\n     */\n    get_routes() {\n        let routes = [\n            this.route_e_trk_4, this.route_e_trk_3,\n            this.route_e_trk_1, this.route_e_trk_2,\n            this.route_w_trk_4, this.route_w_trk_3,\n            this.route_w_trk_2, this.route_w_trk_1,\n        ];\n\n        return routes;\n    }\n    // ---- END get_routes() ----\n\n    /**\n     * @summary Function to throw switch #1 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_1() {\n        if (this.sw_1 === false) {\n            this.sw_1 = true;\n        }\n        else {\n            this.sw_1 = false;\n        }\n    }\n    // ---- END throw_sw_1() ----\n\n    /**\n     * @summary Funtion to throw switch #3 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_3() {\n        if (this.sw_3 === false) {\n            this.sw_3 = true;\n        }\n        else {\n            this.sw_3 = false;\n        }\n    }\n    // ---- END throw_sw_3() ----\n\n    /**\n     * @summary Funtion to throw switch #7 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_7() {\n        if (this.sw_7 === false) {\n            this.sw_7 = true;\n        }\n        else {\n            this.sw_7 = false;\n        }\n    }\n    // ---- END throw_sw_7() ----\n\n    /**\n     * @summary Funtion to throw switch #9 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_9() {\n        if (this.sw_9 === false) {\n            this.sw_9 = true;\n        }\n        else {\n            this.sw_9 = false;\n        }\n    }\n    // ---- END throw_sw_9() ----\n\n    /**\n     * @summary Funtion to throw switch #11 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_11() {\n        if (this.sw_11 === false) {\n            this.sw_11 = true;\n        }\n        else {\n            this.sw_11 = false;\n        }\n    }\n    // ---- END throw_sw_11() ----\n\n    /**\n     * @summary Funtion to throw switch #13 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_13() {\n        if (this.sw_13 === false) {\n            this.sw_13 = true;\n        }\n        else {\n            this.sw_13 = false;\n        }\n    }\n    // ---- END throw_sw_13() ----\n\n    /**\n     * get_interlocking_status()\n     * @summary returns the status of the interlocking that would be needed by the ReactJS Components\n     * \n     * @description All the information that is returned here is what is needed by the ReactJS Component \n     * for the interlocking that is need to draw the interlocking to the screen\n     * \n     * @returns Object with the status of the interlocking\n     */\n    get_interlocking_status() {\n        let status = {\n            sw_1: this.sw_1,\n            sw_3: this.sw_3,\n            sw_7: this.sw_7,\n            sw_9: this.sw_9,\n            sw_11: this.sw_11,\n            sw_13: this.sw_13,\n            routed_1: this.routed_trk_1,\n            routed_2: this.routed_trk_2,\n            routed_3: this.routed_trk_3,\n            routed_4: this.routed_trk_4,\n            occupied_1: this.occupied_trk_1,\n            occupied_2: this.occupied_trk_2,\n            occupied_3: this.occupied_trk_3,\n            occupied_4: this.occupied_trk_4,\n            routes: this.get_routes()\n        }\n\n        return status;\n    }\n    // ---- END get_interlocking_status() ----\n}\n\n// This is required when using ReactJS\nexport default CTC_Laurel;"]},"metadata":{},"sourceType":"module"}