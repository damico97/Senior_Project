{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Bergen_County_Line/HX.jsx\";\n\n/**\n * @file HX.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for HX Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the HX Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n// Import React Component\nimport React, { Component } from 'react'; // Import CSS style sheet\n\nimport '../../../css/Bergen_County_Line/hx.css'; // Import Images \n// Switch Images\n\nimport CX_225 from '../../../../public/images/CX_225.png';\nimport CX_225_Lined_Top from '../../../../public/images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../../public/images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../../public/images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../../public/images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../../public/images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../../public/images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../../public/images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../../public/images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../../public/images/CX_225_R_Occupied.png';\nimport SW_U_E from '../../../../public/images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../../public/images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../../public/images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../../public/images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../../public/images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../../public/images/SW_U_E_R_Occupied.png'; // Signal Images\n\nimport SIG_W from '../../../../public/images/SIG_W.png';\nimport SIG_W_Clear from '../../../../public/images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../../public/images/SIG_W_Stop.png';\nimport SIG_E from '../../../../public/images/SIG_E.png';\nimport SIG_E_Clear from '../../../../public/images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../../public/images/SIG_E_Stop.png'; // Color Constants For Drawing Routes\n\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n/**\n * The React JSX Component Class for the HX Interlocking\n * This class is a JSX React Component for the HX Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\n\nclass HX extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Switch Status\n      sw_1: this.props.status.sw_1,\n      sw_3: this.props.status.sw_3,\n      sw_5: this.props.status.sw_5,\n      // Image File for the switch - Will change depending on route\n      sw_1_src: CX_225,\n      sw_3_src: SW_U_E,\n      sw_5_src: SW_U_E,\n      // Colors for tail tracks - Will change depending on route\n      tail_1_w: Empty,\n      tail_2_w: Empty,\n      tail_1_e: Empty,\n      tail_2_e: Empty,\n      tail_3_e: Empty,\n      tail_4_e: Empty,\n      // Image File for the signals - Will change depending on route\n      sig_2w1_src: SIG_W,\n      sig_2w2_src: SIG_W,\n      sig_2w3_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_2e_src: SIG_E,\n      sig_4e_src: SIG_E,\n      // Information For Interlocking Routes\n      occupied_1: this.props.status.occupied_trk_1,\n      occupied_2: this.props.status.occupied_trk_2,\n      route_1: this.props.status.routed_1,\n      route_2: this.props.status.routed_2,\n      routes: this.props.status.routes\n    };\n  }\n\n  /**\n   * componentWillReceiveProps()\n   * @summary Function that updates the state of the component\n   * \n   * @description The data that is being changed is passed down from the CTC classes in the simulation backend\n   * \n   * @param nextProps, the new data to set the component state too\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sw_1: nextProps.status.sw_1,\n      sw_3: nextProps.status.sw_3,\n      sw_5: nextProps.status.sw_5,\n      occupied_1: nextProps.status.occupied_trk_1,\n      occupied_2: nextProps.status.occupied_trk_2,\n      route_1: nextProps.status.routed_1,\n      route_2: nextProps.status.routed_2,\n      routes: nextProps.status.routes\n    });\n  } // ---- END componentWillReceiveProps() ----\n\n  /**\n   * render()\n   * @summary standard React function that draws the interlocking to the screen\n   */\n\n\n  render() {\n    // Clear all the drawings from the interlocking so if a train clears the route is gone\n    this.reset_drawings(); // Set the switch images based off the state of each crossover\n\n    this.set_switch_images(); // Draw all the current routes in the interlocking\n\n    this.set_route_drawings(); // Returns the HTML to draw the interlocking and it's current state to the screen\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hx_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"HX\"), React.createElement(\"div\", {\n      className: \"hx_milepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"MP 5.4\"), React.createElement(\"div\", {\n      className: \"hx_1_west\",\n      style: {\n        background: this.state.tail_1_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hx_2_west\",\n      style: {\n        background: this.state.tail_2_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hx_SW_1\",\n      onClick: this.props.throw_sw_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_SW_3\",\n      onClick: this.props.throw_sw_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_SW_5\",\n      onClick: this.props.throw_sw_5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_5_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_1_east\",\n      style: {\n        background: this.state.tail_1_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hx_2_east\",\n      style: {\n        background: this.state.tail_2_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hx_croxton_1\",\n      style: {\n        background: this.state.tail_4_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hx_croxton_2\",\n      style: {\n        background: this.state.tail_3_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hx_sig_2w-3\",\n      onClick: this.props.click_sig_2w3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_sig_2w-2\",\n      onClick: this.props.click_sig_2w2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w2_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_sig_2w-1\",\n      onClick: this.props.click_sig_2w1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_sig_4w\",\n      onClick: this.props.click_sig_4w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_sig_2e\",\n      onClick: this.props.click_sig_2e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"hx_sig_4e\",\n      onClick: this.props.click_sig_4e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })));\n  } // ---- END render() ----\n\n  /**\n   * @summary Sets the drawing for the route through the interlocking\n   * \n   * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n   * will change depending on if the interlocking is occupied or not\n   */\n\n\n  set_route_drawings() {\n    let color_1 = Empty;\n    let color_2 = Empty; // Set Track colors depending on if they are routed or occupied\n\n    if (this.state.route_1) {\n      color_1 = Green;\n    }\n\n    if (this.state.route_2) {\n      color_2 = Green;\n    }\n\n    if (this.state.occupied_1) {\n      color_1 = Red;\n    }\n\n    if (this.state.occupied_2) {\n      color_2 = Red;\n    } // Loop Through All The Routes\n\n\n    for (let i = 0; i < this.state.routes.length; i++) {\n      // West and East normal on Track 1\n      if (this.state.routes[i] === \"W_1_1__|__1_pascack_hx\" || this.state.routes[i] === \"E_1_1__|__3_hx_laurel\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_1_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_3_src = SW_U_E_Occupied; // Crossovers that can change based on other tracks status\n          // Trk2 Lined\n\n          if (this.state.route_2) {\n            this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n          } // Trk2 Occupied\n          else if (this.state.occupied_2) {\n              this.state.sw_1_src = CX_225_Occupied_Both;\n            } // Nothing Trk2\n            else {\n                this.state.sw_1_src = CX_225_Occupied_Top;\n              } // Signals\n\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w3_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n        } // Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = SW_U_E_Lined; // Crossovers that can change based on other tracks status\n            // Trk2 Lined\n\n            if (this.state.route_2) {\n              this.state.sw_1_src = CX_225_Lined_Both;\n            } // Trk2 Occupied\n            else if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n              } // Nothing Trk2\n              else {\n                  this.state.sw_1_src = CX_225_Lined_Top;\n                } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_1_1__|__1_pascack_hx\") {\n              this.state.sig_2w1_src = SIG_W_Clear;\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2w3_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_2w1_src = SIG_W_Stop;\n                this.state.sig_2w2_src = SIG_W_Stop;\n                this.state.sig_2w3_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Clear;\n              }\n          }\n      } // West and East normal on Track 2\n      else if (this.state.routes[i] === \"W_2_2__|__2_pascack_hx\" || this.state.routes[i] === \"E_2_2__|__1_hx_laurel\") {\n          // Tail Tracks\n          this.state.tail_2_e = color_2;\n          this.state.tail_2_w = color_2; // The Route Is Occupied\n\n          if (this.state.occupied_2) {\n            // Switches\n            // Crossovers that can change base on track 1\n            // Trk1 Lined\n            if (this.state.route_1) {\n              this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n            } // Trk1 Occupied\n            else if (this.state.occupied_1) {\n                this.state.sw_1_src = CX_225_Occupied_Both;\n              } // Nothing Trk1\n              else {\n                  this.state.sw_1_src = CX_225_Occupied_Bottom;\n                } // Signals\n\n\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              // Crossovers that can change base on track 1\n              // Trk1 Lined\n              if (this.state.route_1) {\n                this.state.sw_1_src = CX_225_Lined_Both;\n              } // Trk1 Occupied\n              else if (this.state.occupied_1) {\n                  this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                } // Nothing Trk1\n                else {\n                    this.state.sw_1_src = CX_225_Lined_Bottom;\n                  } // Signals\n              // West Bound Signals\n\n\n              if (this.state.routes[i] === \"W_2_2__|__2_pascack_hx\") {\n                this.state.sig_4w_src = SIG_W_Clear;\n                this.state.sig_4e_src = SIG_E_Stop;\n              } // East Bound Signals\n              else {\n                  this.state.sig_4w_src = SIG_W_Stop;\n                  this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n        } else if (this.state.routes[i] === \"W_1_2__|__2_pascack_hx\") {\n          // Tail Tracks\n          this.state.tail_1_e = color_1;\n          this.state.tail_2_w = color_1; // The Route In Occupied\n\n          if (this.state.occupied_1) {\n            // Switches\n            this.state.sw_3_src = SW_U_E_Occupied;\n            this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_3_src = SW_U_E_Lined;\n              this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n              this.state.sig_2w1_src = SIG_W_Clear;\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2w3_src = SIG_W_Stop;\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n              this.state.sig_4e_src = SIG_E_Stop;\n            }\n        } else if (this.state.routes[i] === \"E_2_1__|__3_hx_laurel\") {\n          // Tail Tracks\n          this.state.tail_1_e = color_2;\n          this.state.tail_2_w = color_2; // The Route In Occupied\n\n          if (this.state.occupied_2) {\n            // Switches\n            this.state.sw_3_src = SW_U_E_Occupied;\n            this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_3_src = SW_U_E_Lined;\n              this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2w3_src = SIG_W_Stop;\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n              this.state.sig_4e_src = SIG_E_Clear;\n            }\n        } else if (this.state.routes[i] === \"W_3_2__|__2_pascack_hx\") {\n          // Tail Tracks\n          this.state.tail_3_e = color_1;\n          this.state.tail_2_w = color_1; // The Route Is Occupied\n\n          if (this.state.occupied_1) {\n            // Switches\n            this.state.sw_5_src = SW_U_E_Occupied;\n            this.state.sw_3_src = SW_U_E_R_Occupied;\n            this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_5_src = SW_U_E_Lined;\n              this.state.sw_3_src = SW_U_E_R_Lined;\n              this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n              this.state.sig_2w2_src = SIG_W_Clear;\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2w3_src = SIG_W_Stop;\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n              this.state.sig_4e_src = SIG_E_Stop;\n            }\n        } else if (this.state.routes[i] === \"E_2_3__|__3_hx_croxton\") {\n          // Tail Tracks\n          this.state.tail_3_e = color_2;\n          this.state.tail_2_w = color_2; // The Route Is Occupied\n\n          if (this.state.occupied_2) {\n            // Switches\n            this.state.sw_5_src = SW_U_E_Occupied;\n            this.state.sw_3_src = SW_U_E_R_Occupied;\n            this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_5_src = SW_U_E_Lined;\n              this.state.sw_3_src = SW_U_E_R_Lined;\n              this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2w3_src = SIG_W_Stop;\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n              this.state.sig_4e_src = SIG_E_Clear;\n            }\n        } else if (this.state.routes[i] === \"W_4_2__|__2_pascack_hx\") {\n          // Tail Tracks\n          this.state.tail_4_e = color_1;\n          this.state.tail_2_w = color_1; // The Route Is Occupied\n\n          if (this.state.occupied_1) {\n            // Switches\n            this.state.sw_5_src = SW_U_E_R_Occupied;\n            this.state.sw_3_src = SW_U_E_R_Occupied;\n            this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_5_src = SW_U_E_R_Lined;\n              this.state.sw_3_src = SW_U_E_R_Lined;\n              this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2w3_src = SIG_W_Clear;\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n              this.state.sig_4e_src = SIG_E_Stop;\n            }\n        } else if (this.state.routes[i] === \"E_2_4__|__4_hx_croxton\") {\n          // Tail Tracks\n          this.state.tail_4_e = color_2;\n          this.state.tail_2_w = color_2; // The Route Is Occupied\n\n          if (this.state.occupied_2) {\n            // Switches\n            this.state.sw_5_src = SW_U_E_R_Occupied;\n            this.state.sw_3_src = SW_U_E_R_Occupied;\n            this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_5_src = SW_U_E_R_Lined;\n              this.state.sw_3_src = SW_U_E_R_Lined;\n              this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2w3_src = SIG_W_Stop;\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n              this.state.sig_4e_src = SIG_E_Clear;\n            }\n        } else if (this.state.routes[i] === \"W_3_1__|__1_pascack_hx\" || this.state.routes[i] === \"E_1_3__|__3_hx_croxton\") {\n          // Tail Tracks\n          this.state.tail_3_e = color_1;\n          this.state.tail_1_w = color_1; // The Route Is Occupied\n\n          if (this.state.occupied_1) {\n            // Switches\n            this.state.sw_5_src = SW_U_E_Occupied;\n            this.state.sw_3_src = SW_U_E_R_Occupied; // Crossovers that can change based on track 2 state\n            // Trk2 Lined\n\n            if (this.state.route_2) {\n              this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n            } // Trk2 Occupied\n            else if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_225_Occupied_Both;\n              } // Nothing Trk2\n              else {\n                  this.state.sw_1_src = CX_225_Occupied_Top;\n                } // Signals\n\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_5_src = SW_U_E_Lined;\n              this.state.sw_3_src = SW_U_E_R_Lined; // Crossovers that can change based on track 2 state\n              // Trk2 Lined\n\n              if (this.state.route_2) {\n                this.state.sw_1_src = CX_225_Lined_Both;\n              } // Trk2 Occupied\n              else if (this.state.occupied_2) {\n                  this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                } // Nothing Trk2\n                else {\n                    this.state.sw_1_src = CX_225_Lined_Top;\n                  } // Signals\n              // West Bound Signals\n\n\n              if (this.state.routes[i] === \"W_3_1__|__1_pascack_hx\") {\n                this.state.sig_2w1_src = SIG_W_Stop;\n                this.state.sig_2w2_src = SIG_W_Clear;\n                this.state.sig_2w3_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Stop;\n              } // East Bound Signals\n              else {\n                  this.state.sig_2w1_src = SIG_W_Stop;\n                  this.state.sig_2w2_src = SIG_W_Stop;\n                  this.state.sig_2w3_src = SIG_W_Stop;\n                  this.state.sig_2e_src = SIG_E_Clear;\n                }\n            }\n        } else if (this.state.routes[i] === \"W_4_1__|__1_pascack_hx\" || this.state.routes[i] === \"E_1_4__|__4_hx_croxton\") {\n          // Tail Tracks\n          this.state.tail_4_e = color_1;\n          this.state.tail_1_w = color_1; // The Route Is Occupied\n\n          if (this.state.occupied_1) {\n            // Switches\n            this.state.sw_5_src = SW_U_E_R_Occupied;\n            this.state.sw_3_src = SW_U_E_R_Occupied; // Crossovers that can change based on track 2 state\n            // Trk2 Lined\n\n            if (this.state.route_2) {\n              this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n            } // Trk2 Occupied\n            else if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_225_Occupied_Both;\n              } // Nothing Trk2\n              else {\n                  this.state.sw_1_src = CX_225_Occupied_Top;\n                } // Signals\n\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w3_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Switches\n              this.state.sw_5_src = SW_U_E_R_Lined;\n              this.state.sw_3_src = SW_U_E_R_Lined; // Crossovers that can change based on track 2 state\n              // Trk2 Lined\n\n              if (this.state.route_2) {\n                this.state.sw_1_src = CX_225_Lined_Both;\n              } // Trk2 Occupied\n              else if (this.state.occupied_2) {\n                  this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                } // Nothing Trk2\n                else {\n                    this.state.sw_1_src = CX_225_Lined_Top;\n                  } // Signals\n              // West Bound Signals\n\n\n              if (this.state.routes[i] === \"W_4_1__|__1_pascack_hx\") {\n                this.state.sig_2w1_src = SIG_W_Stop;\n                this.state.sig_2w2_src = SIG_W_Stop;\n                this.state.sig_2w3_src = SIG_W_Clear;\n                this.state.sig_2e_src = SIG_E_Stop;\n              } // East Bound Signals\n              else {\n                  this.state.sig_2w1_src = SIG_W_Stop;\n                  this.state.sig_2w2_src = SIG_W_Stop;\n                  this.state.sig_2w3_src = SIG_W_Stop;\n                  this.state.sig_2e_src = SIG_E_Clear;\n                }\n            }\n        }\n    }\n  } // ---- END set_route_drawings() ----\n\n  /**\n   * set_switch_images()\n   * @summary Changes image sources for the switches, depending on switch status\n   * \n   * @description This function uses the data passed in through status from the CTC classes and \n   * shows if the switches are reversed or not on the screen, by changing the image\n   * source files, to the correct .png file respectivly\n   */\n\n\n  set_switch_images() {\n    // Set SW #1\n    // SW #1 Reversed\n    if (this.state.sw_1) {\n      this.state.sw_1_src = CX_225_R;\n    } // SW #1 Normal\n    else {\n        this.state.sw_1_src = CX_225;\n      } // Set SW #3\n    // SW #3 Reversed\n\n\n    if (this.state.sw_3) {\n      this.state.sw_3_src = SW_U_E_R;\n    } // SW #3 Normal\n    else {\n        this.state.sw_3_src = SW_U_E;\n      } // Set SW #5\n    // SW #5 Reversed\n\n\n    if (this.state.sw_5) {\n      this.state.sw_5_src = SW_U_E_R;\n    } // SW #5 Normal\n    else {\n        this.state.sw_5_src = SW_U_E;\n      }\n  } // ---- END set_switch_images() ----\n\n  /**\n   * @summary Function to reset the signal images and track colors\n   * \n   * @description This function is need, because if the player was to remove a route,\n   * or when the train clears the interlocking nothing will clear the route\n   * the is displaying on the screen, even if it's gone in the backend\n   */\n\n\n  reset_drawings() {\n    this.state.tail_1_w = Empty;\n    this.state.tail_2_w = Empty;\n    this.state.tail_1_e = Empty;\n    this.state.tail_2_e = Empty;\n    this.state.tail_3_e = Empty;\n    this.state.tail_4_e = Empty;\n    this.state.sig_2w1_src = SIG_W;\n    this.state.sig_2w2_src = SIG_W;\n    this.state.sig_2w3_src = SIG_W;\n    this.state.sig_4w_src = SIG_W;\n    this.state.sig_2e_src = SIG_E;\n    this.state.sig_4e_src = SIG_E;\n  } //---- END reset_drawings() ----\n\n\n} // Export the interlocking to be drawn on the screen\n\n\nexport default HX;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Bergen_County_Line/HX.jsx"],"names":["React","Component","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SW_U_E","SW_U_E_Lined","SW_U_E_Occupied","SW_U_E_R","SW_U_E_R_Lined","SW_U_E_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","HX","state","sw_1","props","status","sw_3","sw_5","sw_1_src","sw_3_src","sw_5_src","tail_1_w","tail_2_w","tail_1_e","tail_2_e","tail_3_e","tail_4_e","sig_2w1_src","sig_2w2_src","sig_2w3_src","sig_4w_src","sig_2e_src","sig_4e_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_1","route_2","routed_2","routes","componentWillReceiveProps","nextProps","setState","render","reset_drawings","set_switch_images","set_route_drawings","background","throw_sw_1","throw_sw_3","throw_sw_5","click_sig_2w3","click_sig_2w2","click_sig_2w1","click_sig_4w","click_sig_2e","click_sig_4e","color_1","color_2","i","length"],"mappings":"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","sourcesContent":["/**\n * @file HX.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for HX Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the HX Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Bergen_County_Line/hx.css';\n\n// Import Images \n// Switch Images\nimport CX_225 from '../../../../public/images/CX_225.png';\nimport CX_225_Lined_Top from '../../../../public/images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../../public/images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../../public/images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../../public/images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../../public/images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../../public/images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../../public/images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../../public/images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../../public/images/CX_225_R_Occupied.png';\n\nimport SW_U_E from '../../../../public/images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../../public/images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../../public/images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../../public/images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../../public/images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../../public/images/SW_U_E_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../../public/images/SIG_W.png';\nimport SIG_W_Clear from '../../../../public/images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../../public/images/SIG_W_Stop.png';\nimport SIG_E from '../../../../public/images/SIG_E.png';\nimport SIG_E_Clear from '../../../../public/images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../../public/images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n/**\n * The React JSX Component Class for the HX Interlocking\n * This class is a JSX React Component for the HX Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass HX extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * @description This object holds all the information for the interlocking that is required to display the routes \n     * correctly Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        sw_5: this.props.status.sw_5,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_225,\n        sw_3_src: SW_U_E,\n        sw_5_src: SW_U_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        tail_3_e: Empty,\n        tail_4_e: Empty,\n        // Image File for the signals - Will change depending on route\n        sig_2w1_src: SIG_W,\n        sig_2w2_src: SIG_W,\n        sig_2w3_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_1,\n        route_2: this.props.status.routed_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * @description The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            sw_5: nextProps.status.sw_5,\n\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_1,\n            route_2: nextProps.status.routed_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_images();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"hx_title\">HX</div>\n                <div className=\"hx_milepost\">MP 5.4</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"hx_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"hx_2_west\" style={{background: this.state.tail_2_w}}></div>\n                {/* Switches */}\n                <div className=\"hx_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"hx_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"hx_SW_5\" onClick={this.props.throw_sw_5}><img src={this.state.sw_5_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"hx_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"hx_2_east\" style={{background: this.state.tail_2_e}}></div>\n                <div className=\"hx_croxton_1\" style={{background: this.state.tail_4_e}}></div>\n                <div className=\"hx_croxton_2\" style={{background: this.state.tail_3_e}}></div>\n                {/* Signals */}\n                <div className=\"hx_sig_2w-3\" onClick={this.props.click_sig_2w3}><img src={this.state.sig_2w3_src}/></div>\n                <div className=\"hx_sig_2w-2\" onClick={this.props.click_sig_2w2}><img src={this.state.sig_2w2_src}/></div>\n                <div className=\"hx_sig_2w-1\" onClick={this.props.click_sig_2w1}><img src={this.state.sig_2w1_src}/></div>\n                <div className=\"hx_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n                <div className=\"hx_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"hx_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Set Track colors depending on if they are routed or occupied\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop Through All The Routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            // West and East normal on Track 1\n            if (this.state.routes[i] === \"W_1_1__|__1_pascack_hx\" || this.state.routes[i] === \"E_1_1__|__3_hx_laurel\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Occupied;\n\n                    // Crossovers that can change based on other tracks status\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Lined;\n\n                    // Crossovers that can change based on other tracks status\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_pascack_hx\") {\n                        this.state.sig_2w1_src = SIG_W_Clear;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            // West and East normal on Track 2\n            else if (this.state.routes[i] === \"W_2_2__|__2_pascack_hx\" || this.state.routes[i] === \"E_2_2__|__1_hx_laurel\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    // Crossovers that can change base on track 1\n                    // Trk1 Lined\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Trk1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk1\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Crossovers that can change base on track 1\n                    // Trk1 Lined\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Trk1\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_pascack_hx\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route In Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Clear;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__3_hx_laurel\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route In Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Clear;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_3__|__3_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_4_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_4__|__4_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_4_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_1__|__1_pascack_hx\"|| this.state.routes[i] === \"E_1_3__|__3_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_1__|__1_pascack_hx\") {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Clear;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_1__|__1_pascack_hx\"|| this.state.routes[i] === \"E_1_4__|__4_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_4_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_4_1__|__1_pascack_hx\") {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_images()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * @description This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_images() {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_225_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_225;\n        }\n\n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = SW_U_E_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = SW_U_E;\n        }\n\n        // Set SW #5\n        // SW #5 Reversed\n        if (this.state.sw_5) {\n            this.state.sw_5_src = SW_U_E_R;\n        }\n        // SW #5 Normal\n        else {\n            this.state.sw_5_src = SW_U_E;\n        }\n    }\n    // ---- END set_switch_images() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * @description This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n        this.state.tail_3_e = Empty;\n        this.state.tail_4_e = Empty;\n\n        this.state.sig_2w1_src = SIG_W;\n        this.state.sig_2w2_src = SIG_W;\n        this.state.sig_2w3_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_4e_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default HX;"]},"metadata":{},"sourceType":"module"}