{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file MainLine.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for the entire Pannel\n *\n * @description Extends the React Component Class and is the UI of the entrie Pannel, this component\n * contains all the other components, and holds the functions that allows each component to\n * change the back end class for each enterlocking\n */ // Import React Component\nimport React,{Component}from'react';// Import My Own Clock Class which takes care of trains running\nimport Clock from'../../scripts/Trains/clock.js';// To Control All The Trains\nimport MaineLine_CTC from'../../scripts/CTC/mainLine_ctc.js';// Import My Train Class \nimport Train from'../../scripts/Trains/train.js';// Import the Main Line Components\nimport MainLineTracks from'../Panel/Main_Line/MainLineTracks.jsx';import Hilburn from'../Panel/Main_Line/Hilburn.jsx';import SF from'../Panel/Main_Line/SF.jsx';import WC from'../Panel/Main_Line/WC.jsx';import RidgewoodJunction from'../Panel/Main_Line/RidgewoodJunction.jsx';import Suscon from'../Panel/Main_Line/Suscon.jsx';import Mill from'../Panel/Main_Line/Mill.jsx';import WestSecaucus from'../Panel/Main_Line/WestSecaucus.jsx';import Laurel from'../Panel/Main_Line/Laurel.jsx';// Import the Bergen County Line Components\nimport BergenTracks from'../Panel/Bergen_County_Line/BergenTracks.jsx';import BT from'../Panel/Bergen_County_Line/BT.jsx';import PascackJunction from'../Panel/Bergen_County_Line/PascackJct.jsx';import HX from'../Panel/Bergen_County_Line/HX.jsx';// Import the Southern Tier Line Components\nimport SouthernTierTracks from'../Panel/Southern_Tier_Line/SouthernTierTracks.jsx';import Sparrow from'../Panel/Southern_Tier_Line/Sparrow.jsx';import PA from'../Panel/Southern_Tier_Line/PA.jsx';import Port from'../Panel/Southern_Tier_Line/Port.jsx';import BC from'../Panel/Southern_Tier_Line/BC.jsx';import OV from'../Panel/Southern_Tier_Line/OV.jsx';import Howells from'../Panel/Southern_Tier_Line/Howells.jsx';import Hall from'../Panel/Southern_Tier_Line/Hall.jsx';import HudsonJunction from'../Panel/Southern_Tier_Line/HudsonJunction.jsx';import CentralValley from'../Panel/Southern_Tier_Line/CentralValley.jsx';import Harriman from'../Panel/Southern_Tier_Line/Harriman.jsx';import Sterling from'../Panel/Southern_Tier_Line/Sterling.jsx';// Create A new Clock for the Game\nvar clock=new Clock();// Create the CTC controler for the game, passing it the clock we created above\nvar ctc=new MaineLine_CTC(clock);// Initialize the clock\nclock.startClock();setTimeout(function(){ctc.add_train(new Train(\"[E] 49\",\"3_yardEast_port\",\"EAST\",10));ctc.add_train(new Train(\"3\",\"3_laurel_westEnd\",\"WEST\",10));ctc.add_train(new Train(\"1\",\"1_laurel_westEnd\",\"WEST\",10));ctc.add_train(new Train(\"2\",\"2_laurel_westEnd\",\"WEST\",10));ctc.add_train(new Train(\"4\",\"4_laurel_westEnd\",\"WEST\",10));ctc.add_train(new Train(\"50\",\"3_yardHilburn_sf\",\"EAST\",10));ctc.add_train(new Train(\"[E] SU100\",\"1_bingo_sparrow\",\"EAST\",10));ctc.occupy_blocks();},1500);/**\n * The React JSX Component Class for the entire Maine Line Dispatcher Panel This class is a JSX React Component for the Maine Line Dispatch Panel, \n * this will control all the other components that make up the pannel. This also controls the functions that allow each component to change their respected \n * back end functions.\n */var MainLine=/*#__PURE__*/function(_Component){_inherits(MainLine,_Component);/**\n     * constructor()\n     * @summary The Constructor for the MainLine JSX class.\n     * \n     * All this does is set that state for every thing getting the information fro the CTC controller, the state here\n     * is used to send to the child components so they can render the correct information\n     * \n     * @param props, Required as park of ReactJS, but is not used here\n     */function MainLine(props){var _this;_classCallCheck(this,MainLine);_this=_possibleConstructorReturn(this,_getPrototypeOf(MainLine).call(this,props));/**\n         * State\n         * @summary Object that holds the state or status information for the component\n         * \n         * This object holds all the information for everything on the pannel that is required to display the routes \n         * correctly\n         */_this.update_blocks=function(){// Update All The Routes\nctc.update_route_blocks();// Update All The Trains\nctc.occupy_blocks();// Set the Component State\n_this.setState({// Main Line Tracks & Symbols\nstatus_mainLine:ctc.get_mainLine_blocks_status(),symbols_mailLine:ctc.get_mainLine_symbols(),// Bergen County Tracks & Symbols\nstatus_bergenLine:ctc.get_bergen_blocks_status(),symbols_bergenLine:ctc.get_bergen_symbols(),// Southern Tier Tracks & Symbols\nstatus_tier:ctc.get_tier_block_status(),symbols_tier:ctc.get_tier_symbols()});};_this.update_trains=function(){// Allow trains to update their location if possible\nctc.update_trains();// Update the interlockings\nctc.update_interlockings();// Set The State of the Component\n_this.setState({// Main Line Tracks & Symbols\nstatus_mainLine:ctc.get_mainLine_blocks_status(),symbols_mailLine:ctc.get_mainLine_symbols(),// Bergen County Tracks & Symbols\nstatus_bergenLine:ctc.get_bergen_blocks_status(),symbols_bergenLine:ctc.get_bergen_symbols(),// Southern Tier Tracks & Symbols\nstatus_tier:ctc.get_tier_block_status(),symbols_tier:ctc.get_tier_symbols(),// Southern Tier Interlockings\nstatus_sparrow:ctc.get_sparrow().get_interlocking_status(),status_pa:ctc.get_pa().get_interlocking_status(),status_port:ctc.get_port().get_interlocking_status(),status_bc:ctc.get_bc().get_interlocking_status(),status_ov:ctc.get_ov().get_interlocking_status(),status_howells:ctc.get_howells().get_interlocking_status(),status_hall:ctc.get_hall().get_interlocking_status(),status_hudson:ctc.get_hudson().get_interlocking_status(),status_valley:ctc.get_valley().get_interlocking_status(),status_harriman:ctc.get_harriman().get_interlocking_status(),status_sterling:ctc.get_sterling().get_interlocking_status(),// Main Line Interlockings\nstatus_hilburn:ctc.get_hilburn().get_interlocking_status(),status_sf:ctc.get_sf().get_interlocking_status(),status_wc:ctc.get_wc().get_interlocking_status(),status_ridgewood:ctc.get_ridgewood().get_interlocking_status(),status_suscon:ctc.get_suscon().get_interlocking_status(),status_mill:ctc.get_mill().get_interlocking_status(),status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status(),status_laurel:ctc.get_laurel().get_interlocking_status(),// Bergen County Interlockings\nstatus_bt:ctc.get_bt().get_interlocking_status(),status_pascack:ctc.get_pascack().get_interlocking_status(),status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_click_sig_2w1=function(){// Get the backend function for corresponding signal\n// Passing reference the next blocks\nctc.get_hx().click_sig_2w1(_this.state.status_bergenLine.block_pascack_hx_1,_this.state.status_bergenLine.block_pascack_hx_2);// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_click_sig_2w2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hx().click_sig_2w2(_this.state.status_bergenLine.block_pascack_hx_1,_this.state.status_bergenLine.block_pascack_hx_2);// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_click_sig_2w3=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hx().click_sig_2w3(_this.state.status_bergenLine.block_pascack_hx_1,_this.state.status_bergenLine.block_pascack_hx_2);// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hx().click_sig_4w(_this.state.status_bergenLine.block_pascack_hx_2);// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hx().click_sig_2e(_this.state.status_bergenLine.block_hx_laurel_1,_this.state.status_bergenLine.block_hx_croxton_2,_this.state.status_bergenLine.block_hx_croxton_1);// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hx().click_sig_4e(_this.state.status_bergenLine.block_hx_laurel_1,_this.state.status_bergenLine.block_hx_laurel_2,_this.state.status_bergenLine.block_hx_croxton_2,_this.state.status_bergenLine.block_hx_croxton_1);// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_hx().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_hx().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.hx_throw_sw_5=function(){// Get the backend function for the corresponding switch\nctc.get_hx().throw_sw_5();// Set the state of the Interlocking\n_this.setState({status_hx:ctc.get_hx().get_interlocking_status()});};_this.pascack_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pascack().click_sig_2w(_this.state.status_bergenLine.block_bt_pascack_1,_this.state.status_bergenLine.block_bt_pascack_2);// Set the state of the Interlocking\n_this.setState({status_pascack:ctc.get_pascack().get_interlocking_status()});};_this.pascack_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pascack().click_sig_4w(_this.state.status_bergenLine.block_bt_pascack_1,_this.state.status_bergenLine.block_bt_pascack_2);// Set the state of the Interlocking\n_this.setState({status_pascack:ctc.get_pascack().get_interlocking_status()});};_this.pascack_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pascack().click_sig_2e(_this.state.status_bergenLine.block_pascack_hx_1,_this.state.status_bergenLine.block_pascack_hx_2);// Set the state of the Interlocking\n_this.setState({status_pascack:ctc.get_pascack().get_interlocking_status()});};_this.pascack_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pascack().click_sig_4e(_this.state.status_bergenLine.block_pascack_hx_1,_this.state.status_bergenLine.block_pascack_hx_2);// Set the state of the Interlocking\n_this.setState({status_pascack:ctc.get_pascack().get_interlocking_status()});};_this.pascack_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_pascack().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_pascack:ctc.get_pascack().get_interlocking_status()});};_this.pascack_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_pascack().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_pascack:ctc.get_pascack().get_interlocking_status()});};_this.bt_click_sig_2w1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bt().click_sig_2w1(_this.state.status_bergenLine.block_ridgewood_bt_1,_this.state.status_bergenLine.block_ridgewood_bt_2);// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.bt_click_sig_2w2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bt().click_sig_2w2(_this.state.status_bergenLine.block_ridgewood_bt_1,_this.state.status_bergenLine.block_ridgewood_bt_2);// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.bt_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bt().click_sig_4w(_this.state.status_bergenLine.block_ridgewood_bt_1,_this.state.status_bergenLine.block_ridgewood_bt_2);// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.bt_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bt().click_sig_2e(_this.state.status_bergenLine.block_bt_pascack_1,_this.state.status_bergenLine.block_bt_pascack_2,_this.state.status_bergenLine.block_bt_nysw);// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.bt_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bt().click_sig_4e(_this.state.status_bergenLine.block_bt_pascack_1,_this.state.status_bergenLine.block_bt_pascack_2,_this.state.status_bergenLine.block_bt_nysw);// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.bt_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_bt().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.bt_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_bt().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.bt_throw_sw_5=function(){// Get the backend function for the corresponding switch\nctc.get_bt().throw_sw_5();// Set the state of the Interlocking\n_this.setState({status_bt:ctc.get_bt().get_interlocking_status()});};_this.sparrow_click_sig_2w_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sparrow().click_sig_2w_1(_this.state.status_tier.block_bingo_sparrow);// Set the state of the Interlocking\n_this.setState({status_sparrow:ctc.get_sparrow().get_interlocking_status()});};_this.sparrow_click_sig_2w_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sparrow().click_sig_2w_2(_this.state.status_tier.block_bingo_sparrow);// Set the state of the Interlocking\n_this.setState({status_sparrow:ctc.get_sparrow().get_interlocking_status()});};_this.sparrow_click_sig_2w_3=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sparrow().click_sig_2w_3(_this.state.status_tier.block_bingo_sparrow);// Set the state of the Interlocking\n_this.setState({status_sparrow:ctc.get_sparrow().get_interlocking_status()});};_this.sparrow_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sparrow().click_sig_2e(_this.state.status_tier.block_sparrow_pa_1,_this.state.status_tier.block_sparrow_pa_2,_this.state.status_tier.block_sparrow_cripple);// Set the state of the Interlocking\n_this.setState({status_sparrow:ctc.get_sparrow().get_interlocking_status()});};_this.sparrow_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_sparrow().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_sparrow:ctc.get_sparrow().get_interlocking_status()});};_this.sparrow_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_sparrow().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_sparrow:ctc.get_sparrow().get_interlocking_status()});};_this.pa_click_sig_2w_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pa().click_sig_2w_1(_this.state.status_tier.block_sparrow_pa_1,_this.state.status_tier.block_sparrow_pa_2,_this.state.status_tier.block_buckleys_west);// Set the state of the Interlocking\n_this.setState({status_pa:ctc.get_pa().get_interlocking_status()});};_this.pa_click_sig_2w_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pa().click_sig_2w_2(_this.state.status_tier.block_sparrow_pa_1,_this.state.status_tier.block_sparrow_pa_2,_this.state.status_tier.block_buckleys_west);// Set the state of the Interlocking\n_this.setState({status_pa:ctc.get_pa().get_interlocking_status()});};_this.pa_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pa().click_sig_4w(_this.state.status_tier.block_sparrow_pa_2,_this.state.status_tier.block_buckleys_west);// Set the state of the Interlocking\n_this.setState({status_pa:ctc.get_pa().get_interlocking_status()});};_this.pa_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pa().click_sig_2e(_this.state.status_tier.block_pa_port_1,_this.state.status_tier.block_port_yard_west);// Set the state of the Interlocking\n_this.setState({status_pa:ctc.get_pa().get_interlocking_status()});};_this.pa_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_pa().click_sig_4e(_this.state.status_tier.block_pa_port_1,_this.state.status_tier.block_pa_bc_2,_this.state.status_tier.block_port_yard_west);// Set the state of the Interlocking\n_this.setState({status_pa:ctc.get_pa().get_interlocking_status()});};_this.pa_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_pa().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_pa:ctc.get_pa().get_interlocking_status()});};_this.pa_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_pa().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_pa:ctc.get_pa().get_interlocking_status()});};_this.port_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_port().click_sig_2w(_this.state.status_tier.block_pa_port_1,_this.state.status_tier.block_port_yard_east);// Set the state of the Interlocking\n_this.setState({status_port:ctc.get_port().get_interlocking_status()});};_this.port_click_sig_2e_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_port().click_sig_2e_1(_this.state.status_tier.block_port_bc_1);// Set the state of the Interlocking\n_this.setState({status_port:ctc.get_port().get_interlocking_status()});};_this.port_click_sig_2e_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_port().click_sig_2e_2(_this.state.status_tier.block_port_bc_1);// Set the state of the Interlocking\n_this.setState({status_port:ctc.get_port().get_interlocking_status()});};_this.port_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_port().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_port:ctc.get_port().get_interlocking_status()});};_this.bc_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bc().click_sig_2w(_this.state.status_tier.block_port_bc_1,_this.state.status_tier.block_pa_bc_2);// Set the state of the Interlocking\n_this.setState({status_bc:ctc.get_bc().get_interlocking_status()});};_this.bc_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bc().click_sig_2e(_this.state.status_tier.block_bc_ov_1);// Set the state of the Interlocking\n_this.setState({status_bc:ctc.get_bc().get_interlocking_status()});};_this.bc_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_bc().click_sig_4e(_this.state.status_tier.block_bc_ov_1);// Set the state of the Interlocking\n_this.setState({status_bc:ctc.get_bc().get_interlocking_status()});};_this.bc_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_bc().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_bc:ctc.get_bc().get_interlocking_status()});};_this.ov_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ov().click_sig_2w(_this.state.status_tier.block_bc_ov_1);// Set the state of the Interlocking\n_this.setState({status_ov:ctc.get_ov().get_interlocking_status()});};_this.ov_click_sig_2ws=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ov().click_sig_2ws(_this.state.status_tier.block_bc_ov_1);// Set the state of the Interlocking\n_this.setState({status_ov:ctc.get_ov().get_interlocking_status()});};_this.ov_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ov().click_sig_2e(_this.state.status_tier.block_ov_howells_1,_this.state.status_tier.block_ov_howells_2);// Set the state of the Interlocking\n_this.setState({status_ov:ctc.get_ov().get_interlocking_status()});};_this.ov_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_ov().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_ov:ctc.get_ov().get_interlocking_status()});};_this.howells_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_howells().click_sig_2w(_this.state.status_tier.block_ov_howells_1,_this.state.status_tier.block_ov_howells_2);// Set the state of the Interlocking\n_this.setState({status_howells:ctc.get_howells().get_interlocking_status()});};_this.howells_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_howells().click_sig_2e(_this.state.status_tier.block_howells_hall_1);// Set the state of the Interlocking\n_this.setState({status_howells:ctc.get_howells().get_interlocking_status()});};_this.howells_click_sig_2es=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_howells().click_sig_2es(_this.state.status_tier.block_howells_hall_1);// Set the state of the Interlocking\n_this.setState({status_howells:ctc.get_howells().get_interlocking_status()});};_this.howells_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_howells().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_howells:ctc.get_howells().get_interlocking_status()});};_this.hall_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hall().click_sig_2w(_this.state.status_tier.block_howells_hall_1);// Set the state of the Interlocking\n_this.setState({status_hall:ctc.get_hall().get_interlocking_status()});};_this.hall_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hall().click_sig_4w(_this.state.status_tier.block_howells_hall_1,_this.state.status_tier.block_hall_yard);// Set the state of the Interlocking\n_this.setState({status_hall:ctc.get_hall().get_interlocking_status()});};_this.hall_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hall().click_sig_2e(_this.state.status_tier.block_hall_hudson_1,_this.state.status_tier.block_hall_hudson_2);// Set the state of the Interlocking\n_this.setState({status_hall:ctc.get_hall().get_interlocking_status()});};_this.hall_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hall().click_sig_4e(_this.state.status_tier.block_hall_hudson_2);// Set the state of the Interlocking\n_this.setState({status_hall:ctc.get_hall().get_interlocking_status()});};_this.hall_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_hall().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_hall:ctc.get_hall().get_interlocking_status()});};_this.hudson_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hudson().click_sig_2w(_this.state.status_tier.block_hall_hudson_1,_this.state.status_tier.block_hall_hudson_2);// Set the state of the Interlocking\n_this.setState({status_hudson:ctc.get_hudson().get_interlocking_status()});};_this.hudson_click_sig_2ws=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hudson().click_sig_2ws(_this.state.status_tier.block_hall_hudson_1,_this.state.status_tier.block_hall_hudson_2);// Set the state of the Interlocking\n_this.setState({status_hudson:ctc.get_hudson().get_interlocking_status()});};_this.hudson_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hudson().click_sig_2e(_this.state.status_tier.block_hudson_valley_1,_this.state.status_tier.block_hudson_nysw);// Set the state of the Interlocking\n_this.setState({status_hudson:ctc.get_hudson().get_interlocking_status()});};_this.hudson_click_sig_2es=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hudson().click_sig_2es(_this.state.status_tier.block_hudson_valley_1,_this.state.status_tier.block_hudson_nysw);// Set the state of the Interlocking\n_this.setState({status_hudson:ctc.get_hudson().get_interlocking_status()});};_this.hudson_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_hudson().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_hudson:ctc.get_hudson().get_interlocking_status()});};_this.hudson_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_hudson().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_hudson:ctc.get_hudson().get_interlocking_status()});};_this.valley_click_sig_1w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_valley().click_sig_1w(_this.state.status_tier.block_hudson_valley_1);// Set the state of the Interlocking\n_this.setState({status_valley:ctc.get_valley().get_interlocking_status()});};_this.valley_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_valley().click_sig_2w(_this.state.status_tier.block_hudson_valley_1);// Set the state of the Interlocking\n_this.setState({status_valley:ctc.get_valley().get_interlocking_status()});};_this.valley_click_sig_1e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_valley().click_sig_1e(_this.state.status_tier.block_valley_harriman_1,_this.state.status_tier.block_valley_harriman_2);// Set the state of the Interlocking\n_this.setState({status_valley:ctc.get_valley().get_interlocking_status()});};_this.valley_throw_sw_21=function(){// Get the backend function for the corresponding switch\nctc.get_valley().throw_sw_21();// Set the state of the Interlocking\n_this.setState({status_valley:ctc.get_valley().get_interlocking_status()});};_this.harriman_click_sig_1w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_harriman().click_sig_1w(_this.state.status_tier.block_valley_harriman_1,_this.state.status_tier.block_valley_harriman_2,_this.state.status_tier.block_harriman_industrial);// Set the state of the Interlocking\n_this.setState({status_harriman:ctc.get_harriman().get_interlocking_status()});};_this.harriman_click_sig_1e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_harriman().click_sig_1e(_this.state.status_tier.block_harriman_sterling_1);// Set the state of the Interlocking\n_this.setState({status_harriman:ctc.get_harriman().get_interlocking_status()});};_this.harriman_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_harriman().click_sig_2e(_this.state.status_tier.block_harriman_sterling_1);// Set the state of the Interlocking\n_this.setState({status_harriman:ctc.get_harriman().get_interlocking_status()});};_this.harriman_click_sig_3e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_harriman().click_sig_3e(_this.state.status_tier.block_harriman_sterling_1);// Set the state of the Interlocking\n_this.setState({status_harriman:ctc.get_harriman().get_interlocking_status()});};_this.harriman_throw_sw_21=function(){// Get the backend function for the corresponding switch\nctc.get_harriman().throw_sw_21();// Set the state of the Interlocking\n_this.setState({status_harriman:ctc.get_harriman().get_interlocking_status()});};_this.harriman_throw_sw_32=function(){// Get the backend function for the corresponding switch\nctc.get_harriman().throw_sw_32();// Set the state of the Interlocking\n_this.setState({status_harriman:ctc.get_harriman().get_interlocking_status()});};_this.sterling_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sterling().click_sig_2w(_this.state.status_tier.block_harriman_sterling_1);// Set the state of the Interlocking\n_this.setState({status_sterling:ctc.get_sterling().get_interlocking_status()});};_this.sterling_click_sig_2ws=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sterling().click_sig_2ws(_this.state.status_tier.block_harriman_sterling_1);// Set the state of the Interlocking\n_this.setState({status_sterling:ctc.get_sterling().get_interlocking_status()});};_this.sterling_click_sig_1e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sterling().click_sig_1e(_this.state.status_tier.block_sterling_sf,_this.state.status_tier.block_sterling_hilburn);// Set the state of the Interlocking\n_this.setState({status_sterling:ctc.get_sterling().get_interlocking_status()});};_this.sterling_throw_sw_21=function(){// Get the backend function for the corresponding switch\nctc.get_sterling().throw_sw_21();// Set the state of the Interlocking\n_this.setState({status_sterling:ctc.get_sterling().get_interlocking_status()});};_this.hilburn_click_sig_2w_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hilburn().click_sig_2w_1(_this.state.status_mainLine.block_sterling_hilburn);// Set the state of the Interlocking\n_this.setState({status_hilburn:ctc.get_hilburn().get_interlocking_status()});};_this.hilburn_click_sig_2w_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hilburn().click_sig_2w_2(_this.state.status_mainLine.block_sterling_hilburn);// Set the state of the Interlocking\n_this.setState({status_hilburn:ctc.get_hilburn().get_interlocking_status()});};_this.hilburn_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_hilburn().click_sig_2e(_this.state.status_mainLine.block_hilburn_sf,_this.state.status_mainLine.block_hilburn_yard_west);// Set the state of the Interlocking\n_this.setState({status_hilburn:ctc.get_hilburn().get_interlocking_status()});};_this.hilburn_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_hilburn().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_hilburn:ctc.get_hilburn().get_interlocking_status()});};_this.sf_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sf().click_sig_2w(_this.state.status_mainLine.block_sterling_sf,_this.state.status_mainLine.block_hilburn_sf,_this.state.status_mainLine.block_hilburn_yard_east);// Set the state of the Interlocking\n_this.setState({status_sf:ctc.get_sf().get_interlocking_status()});};_this.sf_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sf().click_sig_4w(_this.state.status_mainLine.block_hilburn_sf,_this.state.status_mainLine.block_hilburn_yard_east);// Set the state of the Interlocking\n_this.setState({status_sf:ctc.get_sf().get_interlocking_status()});};_this.sf_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sf().click_sig_2e(_this.state.status_mainLine.block_sf_wc_1);// Set the state of the Interlocking\n_this.setState({status_sf:ctc.get_sf().get_interlocking_status()});};_this.sf_click_sig_4e_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sf().click_sig_4e_1(_this.state.status_mainLine.block_sf_wc_1,_this.state.status_mainLine.block_sf_wc_2);// Set the state of the Interlocking\n_this.setState({status_sf:ctc.get_sf().get_interlocking_status()});};_this.sf_click_sig_4e_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_sf().click_sig_4e_2(_this.state.status_mainLine.block_sf_wc_1,_this.state.status_mainLine.block_sf_wc_2);// Set the state of the Interlocking\n_this.setState({status_sf:ctc.get_sf().get_interlocking_status()});};_this.sf_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_sf().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_sf:ctc.get_sf().get_interlocking_status()});};_this.sf_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_sf().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_sf:ctc.get_sf().get_interlocking_status()});};_this.wc_click_sig_2w_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_wc().click_sig_2w_1(_this.state.status_mainLine.block_sf_wc_1,_this.state.status_mainLine.block_sf_wc_2,_this.state.status_mainLine.block_wc_yard);// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_click_sig_2w_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_wc().click_sig_2w_2(_this.state.status_mainLine.block_sf_wc_1,_this.state.status_mainLine.block_sf_wc_2,_this.state.status_mainLine.block_wc_yard);// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_wc().click_sig_4w(_this.state.status_mainLine.block_sf_wc_1,_this.state.status_mainLine.block_sf_wc_2,_this.state.status_mainLine.block_wc_yard);// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_click_sig_2e_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_wc().click_sig_2e_1(_this.state.status_mainLine.block_wc_ridgewood_1,_this.state.status_mainLine.block_wc_ridgewood_2,_this.state.status_mainLine.block_wc_ridgewood_3);// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_click_sig_2e_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_wc().click_sig_2e_2(_this.state.status_mainLine.block_wc_ridgewood_1,_this.state.status_mainLine.block_wc_ridgewood_2,_this.state.status_mainLine.block_wc_ridgewood_3);// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_wc().click_sig_4e(_this.state.status_mainLine.block_wc_ridgewood_1,_this.state.status_mainLine.block_wc_ridgewood_2,_this.state.status_mainLine.block_wc_ridgewood_3);// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_wc().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_wc().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_throw_sw_5=function(){// Get the backend function for the corresponding switch\nctc.get_wc().throw_sw_5();// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.wc_throw_sw_7=function(){// Get the backend function for the corresponding switch\nctc.get_wc().throw_sw_7();// Set the state of the Interlocking\n_this.setState({status_wc:ctc.get_wc().get_interlocking_status()});};_this.ridgewood_click_sig_2w_1=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ridgewood().click_sig_2w1(_this.state.status_mainLine.block_wc_ridgewood_1,_this.state.status_mainLine.block_wc_ridgewood_2,_this.state.status_mainLine.block_wc_ridgewood_3);// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_click_sig_2w_2=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ridgewood().click_sig_2w2(_this.state.status_mainLine.block_wc_ridgewood_1,_this.state.status_mainLine.block_wc_ridgewood_2,_this.state.status_mainLine.block_wc_ridgewood_3);// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ridgewood().click_sig_4w(_this.state.status_mainLine.block_wc_ridgewood_1,_this.state.status_mainLine.block_wc_ridgewood_2,_this.state.status_mainLine.block_wc_ridgewood_3);// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_click_sig_6w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ridgewood().click_sig_6w(_this.state.status_mainLine.block_wc_ridgewood_1,_this.state.status_mainLine.block_wc_ridgewood_2,_this.state.status_mainLine.block_wc_ridgewood_3);// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ridgewood().click_sig_2e(_this.state.status_mainLine.block_ridgewood_suscon_1,_this.state.status_mainLine.block_ridgewood_suscon_2,_this.state.status_mainLine.block_ridgewood_suscon_3,_this.state.status_mainLine.block_ridgewood_suscon_4);// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ridgewood().click_sig_4e(_this.state.status_mainLine.block_ridgewood_suscon_1,_this.state.status_mainLine.block_ridgewood_suscon_2,_this.state.status_mainLine.block_ridgewood_suscon_3,_this.state.status_mainLine.block_ridgewood_suscon_4);// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_click_sig_6e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_ridgewood().click_sig_6e(_this.state.status_mainLine.block_ridgewood_suscon_1,_this.state.status_mainLine.block_ridgewood_suscon_2,_this.state.status_mainLine.block_ridgewood_suscon_3,_this.state.status_mainLine.block_ridgewood_suscon_4);// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_ridgewood().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_ridgewood().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_throw_sw_5=function(){// Get the backend function for the corresponding switch\nctc.get_ridgewood().throw_sw_5();// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_throw_sw_7=function(){// Get the backend function for the corresponding switch\nctc.get_ridgewood().throw_sw_7();// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.ridgewood_throw_sw_9=function(){// Get the backend function for the corresponding switch\nctc.get_ridgewood().throw_sw_9();// Set the state of the Interlocking\n_this.setState({status_ridgewood:ctc.get_ridgewood().get_interlocking_status()});};_this.suscon_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_suscon().click_sig(\"2W\",_this.state.status_mainLine.block_ridgewood_suscon_1,_this.state.status_mainLine.block_ridgewood_suscon_2);// Set the state of the Interlocking\n_this.setState({status_suscon:ctc.get_suscon().get_interlocking_status()});};_this.suscon_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_suscon().click_sig(\"2E\",_this.state.status_mainLine.block_suscon_mill_1,_this.state.status_mainLine.block_suscon_mill_2);// Set the state of the Interlocking\n_this.setState({status_suscon:ctc.get_suscon().get_interlocking_status()});};_this.suscon_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_suscon().click_sig(\"4W\",_this.state.status_mainLine.block_ridgewood_suscon_1,_this.state.status_mainLine.block_ridgewood_suscon_2);// Set the state of the Interlocking\n_this.setState({status_suscon:ctc.get_suscon().get_interlocking_status()});};_this.suscon_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_suscon().click_sig(\"4E\",_this.state.status_mainLine.block_suscon_mill_1,_this.state.status_mainLine.block_suscon_mill_2);// Set the state of the Interlocking\n_this.setState({status_suscon:ctc.get_suscon().get_interlocking_status()});};_this.suscon_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_suscon().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_suscon:ctc.get_suscon().get_interlocking_status()});};_this.suscon_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_suscon().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_suscon:ctc.get_suscon().get_interlocking_status()});};_this.mill_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_mill().click_sig(\"2W\",_this.state.status_mainLine.block_suscon_mill_1,_this.state.status_mainLine.block_suscon_mill_2);// Set the state of the Interlocking\n_this.setState({status_mill:ctc.get_mill().get_interlocking_status()});};_this.mill_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_mill().click_sig(\"2E\",_this.state.status_mainLine.block_mill_westSecaucus_1,_this.state.status_mainLine.block_mill_westSecaucus_2);// Set the state of the Interlocking\n_this.setState({status_mill:ctc.get_mill().get_interlocking_status()});};_this.mill_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_mill().click_sig(\"4W\",_this.state.status_mainLine.block_suscon_mill_1,_this.state.status_mainLine.block_suscon_mill_2);// Set the state of the Interlocking\n_this.setState({status_mill:ctc.get_mill().get_interlocking_status()});};_this.mill_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_mill().click_sig(\"4E\",_this.state.status_mainLine.block_mill_westSecaucus_1,_this.state.status_mainLine.block_mill_westSecaucus_2);// Set the state of the Interlocking\n_this.setState({status_mill:ctc.get_mill().get_interlocking_status()});};_this.mill_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_mill().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_mill:ctc.get_mill().get_interlocking_status()});};_this.mill_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_mill().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_mill:ctc.get_mill().get_interlocking_status()});};_this.westSecaucus_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_westSecaucus().click_sig(\"2W\",_this.state.status_mainLine.block_mill_westSecaucus_1,_this.state.status_mainLine.block_mill_westSecaucus_2);// Set the state of the Interlocking\n_this.setState({status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status()});};_this.westSecaucus_click_sig_2e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_westSecaucus().click_sig(\"2E\",_this.state.status_mainLine.block_westSecaucus_laurel_1,_this.state.status_mainLine.block_westSecaucus_laurel_2);// Set the state of the Interlocking\n_this.setState({status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status()});};_this.westSecaucus_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_westSecaucus().click_sig(\"4W\",_this.state.status_mainLine.block_mill_westSecaucus_1,_this.state.status_mainLine.block_mill_westSecaucus_2);// Set the state of the Interlocking\n_this.setState({status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status()});};_this.westSecaucus_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_westSecaucus().click_sig(\"4E\",_this.state.status_mainLine.block_westSecaucus_laurel_1,_this.state.status_mainLine.block_westSecaucus_laurel_2);// Set the state of the Interlocking\n_this.setState({status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status()});};_this.westSecaucus_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_westSecaucus().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status()});};_this.westSecaucus_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_westSecaucus().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status()});};_this.laurel_click_sig_2w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_2w(_this.state.status_mainLine.block_hx_laurel_2,_this.state.status_mainLine.block_westSecaucus_laurel_1,_this.state.status_mainLine.block_hx_laurel_1);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_click_sig_4w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_4w(_this.state.status_mainLine.block_hx_laurel_2,_this.state.status_mainLine.block_westSecaucus_laurel_1,_this.state.status_mainLine.block_hx_laurel_1);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_click_sig_8w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_8w(_this.state.status_mainLine.block_hx_laurel_2,_this.state.status_mainLine.block_westSecaucus_laurel_1,_this.state.status_mainLine.block_hx_laurel_1,_this.state.status_mainLine.block_westSecaucus_laurel_2);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_click_sig_10w=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_10w(_this.state.status_mainLine.block_hx_laurel_2,_this.state.status_mainLine.block_westSecaucus_laurel_1,_this.state.status_mainLine.block_hx_laurel_1);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_click_sig_6e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_6e(_this.state.status_mainLine.block_westEnd_laurel_1,_this.state.status_mainLine.block_westEnd_laurel_2,_this.state.status_mainLine.block_westEnd_laurel_3,_this.state.status_mainLine.block_westEnd_laurel_4);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_click_sig_12e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_12e(_this.state.status_mainLine.block_westEnd_laurel_1,_this.state.status_mainLine.block_westEnd_laurel_2,_this.state.status_mainLine.block_westEnd_laurel_3,_this.state.status_mainLine.block_westEnd_laurel_4);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_click_sig_4e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_4e(_this.state.status_mainLine.block_westEnd_laurel_1,_this.state.status_mainLine.block_westEnd_laurel_2,_this.state.status_mainLine.block_westEnd_laurel_3,_this.state.status_mainLine.block_westEnd_laurel_4);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_click_sig_8e=function(){// Get the backend function for the corresponding signal\n// Passing reference the next blocks\nctc.get_laurel().click_sig_8e(_this.state.status_mainLine.block_westEnd_laurel_4);// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_throw_sw_1=function(){// Get the backend function for the corresponding switch\nctc.get_laurel().throw_sw_1();// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_throw_sw_3=function(){// Get the backend function for the corresponding switch\nctc.get_laurel().throw_sw_3();// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_throw_sw_7=function(){// Get the backend function for the corresponding switch\nctc.get_laurel().throw_sw_7();// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_throw_sw_11=function(){// Get the backend function for the corresponding switch\nctc.get_laurel().throw_sw_11();// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.laurel_throw_sw_13=function(){// Get the backend function for the corresponding switch\nctc.get_laurel().throw_sw_13();// Set the state of the Interlocking\n_this.setState({status_laurel:ctc.get_laurel().get_interlocking_status()});};_this.state={// Southern Tier Interlockings Status\nstatus_sparrow:ctc.get_sparrow().get_interlocking_status(),status_pa:ctc.get_pa().get_interlocking_status(),status_port:ctc.get_port().get_interlocking_status(),status_bc:ctc.get_bc().get_interlocking_status(),status_ov:ctc.get_ov().get_interlocking_status(),status_howells:ctc.get_howells().get_interlocking_status(),status_hall:ctc.get_hall().get_interlocking_status(),status_hudson:ctc.get_hudson().get_interlocking_status(),status_valley:ctc.get_valley().get_interlocking_status(),status_harriman:ctc.get_harriman().get_interlocking_status(),status_sterling:ctc.get_sterling().get_interlocking_status(),// Main Line Interlockings Status\nstatus_hilburn:ctc.get_hilburn().get_interlocking_status(),status_sf:ctc.get_sf().get_interlocking_status(),status_wc:ctc.get_wc().get_interlocking_status(),status_ridgewood:ctc.get_ridgewood().get_interlocking_status(),status_suscon:ctc.get_suscon().get_interlocking_status(),status_mill:ctc.get_mill().get_interlocking_status(),status_westSecaucus:ctc.get_westSecaucus().get_interlocking_status(),status_laurel:ctc.get_laurel().get_interlocking_status(),// Bergen County Interlocking Status\nstatus_bt:ctc.get_bt().get_interlocking_status(),status_pascack:ctc.get_pascack().get_interlocking_status(),status_hx:ctc.get_hx().get_interlocking_status(),// Main Line Tracks & Symbols\nstatus_mainLine:ctc.get_mainLine_blocks_status(),symbols_mailLine:ctc.get_mainLine_symbols(),// Bergen County Track & Symbols\nstatus_bergenLine:ctc.get_bergen_blocks_status(),symbols_bergenLine:ctc.get_bergen_symbols(),// Southern Tier Tracks & Symbols\nstatus_tier:ctc.get_tier_block_status(),symbols_tier:ctc.get_tier_symbols()};return _this;}/**\n     * update_blocks()\n     * @summary This function is called every 0.5 Seconds and updates all the tracks blocks\n     * \n     * @description When this function is called it call 2 functions in the CTC controler class.\n     * The first one will check find all the routes at each interlocking and set the correct\n     * next block to routed, so the route can be displayed on the pannel\n     * The second will get all the trains current locations and make those blocks as occupied,\n     * to show the correct location of each train on the pannel\n     */_createClass(MainLine,[{key:\"componentDidMount\",/**\n     * componentDidMount()\n     * @summary ReactJS function that allows you do set the intervals for when certin functions are called\n     * \n     * @description This function sets the intervals for each function that is called repeadely after a amount of time\n     * Will call the update_blocks() function every 0.5 Seconds\n     * Will call the update_trains() function every 2 Seconds\n     */value:function componentDidMount(){var _this2=this;// update_blocks() Interval [0.5 Seconds]\nthis.interval_update_blocks=setInterval(function(){return _this2.update_blocks();},500);// update_trains() Interval [2 Seconds]\nthis.interval_update_trains=setInterval(function(){return _this2.update_trains();},2000);}// ---- END componentDidMount()\n/**\n     * componentWillUnmount()\n     * @summary ReactJS function that removes the intervals, this is never called in this program\n     * \n     * @description This function deletes the intervals that are used to update the blocks & trains\n     * This is never called in this program\n     */},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.interval_update_blocks);clearInterval(this.interval_update_trains);}// ---- END componentWillUnmount() ----\n/**\n     * render()\n     * @summary standard React function that draws all the other interlockings and track components to the screen\n     * \n     * @description This will draw all the components to the screen to assemble the pannel, it also passes all the function\n     * and information to each components through their properties or (props)\n     */},{key:\"render\",value:function render(){// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(SouthernTierTracks,{blocks:this.state.status_tier,symbols:this.state.symbols_tier}),React.createElement(Sparrow,{status:this.state.status_sparrow,click_sig_2w_1:this.sparrow_click_sig_2w_1,click_sig_2w_2:this.sparrow_click_sig_2w_2,click_sig_2w_3:this.sparrow_click_sig_2w_3,click_sig_2e:this.sparrow_click_sig_2e,throw_sw_1:this.sparrow_throw_sw_1,throw_sw_3:this.sparrow_throw_sw_3}),React.createElement(PA,{status:this.state.status_pa,click_sig_2w_1:this.pa_click_sig_2w_1,click_sig_2w_2:this.pa_click_sig_2w_2,click_sig_4w:this.pa_click_sig_4w,click_sig_2e:this.pa_click_sig_2e,click_sig_4e:this.pa_click_sig_4e,throw_sw_1:this.pa_throw_sw_1,throw_sw_3:this.pa_throw_sw_3}),React.createElement(Port,{status:this.state.status_port,click_sig_2w:this.port_click_sig_2w,click_sig_2e_1:this.port_click_sig_2e_1,click_sig_2e_2:this.port_click_sig_2e_2,throw_sw_1:this.port_throw_sw_1}),React.createElement(BC,{status:this.state.status_bc,click_sig_2w:this.bc_click_sig_2w,click_sig_2e:this.bc_click_sig_2e,click_sig_4e:this.bc_click_sig_4e,throw_sw_1:this.bc_throw_sw_1}),React.createElement(OV,{status:this.state.status_ov,click_sig_2w:this.ov_click_sig_2w,click_sig_2ws:this.ov_click_sig_2ws,click_sig_2e:this.ov_click_sig_2e,throw_sw_1:this.ov_throw_sw_1}),React.createElement(Howells,{status:this.state.status_howells,click_sig_2w:this.howells_click_sig_2w,click_sig_2e:this.howells_click_sig_2e,click_sig_2es:this.howells_click_sig_2es,throw_sw_3:this.howells_throw_sw_3}),React.createElement(Hall,{status:this.state.status_hall,click_sig_2w:this.hall_click_sig_2w,click_sig_4w:this.hall_click_sig_4w,click_sig_2e:this.hall_click_sig_2e,click_sig_4e:this.hall_click_sig_4e,throw_sw_1:this.hall_throw_sw_1}),React.createElement(HudsonJunction,{status:this.state.status_hudson,click_sig_2w:this.hudson_click_sig_2w,click_sig_2ws:this.hudson_click_sig_2ws,click_sig_2e:this.hudson_click_sig_2e,click_sig_2es:this.hudson_click_sig_2es,throw_sw_1:this.hudson_throw_sw_1,throw_sw_3:this.hudson_throw_sw_3}),React.createElement(CentralValley,{status:this.state.status_valley,click_sig_1w:this.valley_click_sig_1w,click_sig_2w:this.valley_click_sig_2w,click_sig_1e:this.valley_click_sig_1e,throw_sw_21:this.valley_throw_sw_21}),React.createElement(Harriman,{status:this.state.status_harriman,click_sig_1w:this.harriman_click_sig_1w,click_sig_1e:this.harriman_click_sig_1e,click_sig_2e:this.harriman_click_sig_2e,click_sig_3e:this.harriman_click_sig_3e,throw_sw_21:this.harriman_throw_sw_21,throw_sw_32:this.harriman_throw_sw_32}),React.createElement(Sterling,{status:this.state.status_sterling,click_sig_2w:this.sterling_click_sig_2w,click_sig_2ws:this.sterling_click_sig_2ws,click_sig_1e:this.sterling_click_sig_1e,throw_sw_21:this.sterling_throw_sw_21}),React.createElement(BergenTracks,{blocks:this.state.status_bergenLine,symbols:this.state.symbols_bergenLine}),React.createElement(BT,{status:this.state.status_bt,click_sig_2w1:this.bt_click_sig_2w1,click_sig_2w2:this.bt_click_sig_2w2,click_sig_4w:this.bt_click_sig_4w,click_sig_2e:this.bt_click_sig_2e,click_sig_4e:this.bt_click_sig_4e,throw_sw_1:this.bt_throw_sw_1,throw_sw_3:this.bt_throw_sw_3,throw_sw_5:this.bt_throw_sw_5}),React.createElement(PascackJunction,{status:this.state.status_pascack,click_sig_2w:this.pascack_click_sig_2w,click_sig_4w:this.pascack_click_sig_4w,click_sig_2e:this.pascack_click_sig_2e,click_sig_4e:this.pascack_click_sig_4e,throw_sw_1:this.pascack_throw_sw_1,throw_sw_3:this.pascack_throw_sw_3}),React.createElement(HX,{status:this.state.status_hx,click_sig_2w1:this.hx_click_sig_2w1,click_sig_2w2:this.hx_click_sig_2w2,click_sig_2w3:this.hx_click_sig_2w3,click_sig_4w:this.hx_click_sig_4w,click_sig_2e:this.hx_click_sig_2e,click_sig_4e:this.hx_click_sig_4e,throw_sw_1:this.hx_throw_sw_1,throw_sw_3:this.hx_throw_sw_3,throw_sw_5:this.hx_throw_sw_5}),React.createElement(MainLineTracks,{blocks:this.state.status_mainLine,symbols:this.state.symbols_mailLine}),React.createElement(Hilburn,{status:this.state.status_hilburn,click_sig_2w_1:this.hilburn_click_sig_2w_1,click_sig_2w_2:this.hilburn_click_sig_2w_2,click_sig_2e:this.hilburn_click_sig_2e,click_sig_4e:this.hilburn_click_sig_4e,throw_sw_1:this.hilburn_throw_sw_1}),React.createElement(SF,{status:this.state.status_sf,click_sig_2w:this.sf_click_sig_2w,click_sig_4w:this.sf_click_sig_4w,click_sig_2e:this.sf_click_sig_2e,click_sig_4e_1:this.sf_click_sig_4e_1,click_sig_4e_2:this.sf_click_sig_4e_2,throw_sw_1:this.sf_throw_sw_1,throw_sw_3:this.sf_throw_sw_3}),React.createElement(WC,{status:this.state.status_wc,click_sig_2w_1:this.wc_click_sig_2w_1,click_sig_2w_2:this.wc_click_sig_2w_2,click_sig_4w:this.wc_click_sig_4w,click_sig_2e_1:this.wc_click_sig_2e_1,click_sig_2e_2:this.wc_click_sig_2e_2,click_sig_4e:this.wc_click_sig_4e,throw_sw_1:this.wc_throw_sw_1,throw_sw_3:this.wc_throw_sw_3,throw_sw_5:this.wc_throw_sw_5,throw_sw_7:this.wc_throw_sw_7}),React.createElement(RidgewoodJunction,{status:this.state.status_ridgewood,click_sig_2w_1:this.ridgewood_click_sig_2w_1,click_sig_2w_2:this.ridgewood_click_sig_2w_2,click_sig_4w:this.ridgewood_click_sig_4w,click_sig_6w:this.ridgewood_click_sig_6w,click_sig_2e:this.ridgewood_click_sig_2e,click_sig_4e:this.ridgewood_click_sig_4e,click_sig_6e:this.ridgewood_click_sig_6e,throw_sw_1:this.ridgewood_throw_sw_1,throw_sw_3:this.ridgewood_throw_sw_3,throw_sw_5:this.ridgewood_throw_sw_5,throw_sw_7:this.ridgewood_throw_sw_7,throw_sw_9:this.ridgewood_throw_sw_9}),React.createElement(Suscon,{status:this.state.status_suscon,click_sig_2w:this.suscon_click_sig_2w,click_sig_2e:this.suscon_click_sig_2e,click_sig_4w:this.suscon_click_sig_4w,click_sig_4e:this.suscon_click_sig_4e,throw_sw_1:this.suscon_throw_sw_1,throw_sw_3:this.suscon_throw_sw_3}),React.createElement(Mill,{status:this.state.status_mill,click_sig_2w:this.mill_click_sig_2w,click_sig_2e:this.mill_click_sig_2e,click_sig_4w:this.mill_click_sig_4w,click_sig_4e:this.mill_click_sig_4e,throw_sw_1:this.mill_throw_sw_1,throw_sw_3:this.mill_throw_sw_3}),React.createElement(WestSecaucus,{status:this.state.status_westSecaucus,click_sig_2w:this.westSecaucus_click_sig_2w,click_sig_2e:this.westSecaucus_click_sig_2e,click_sig_4w:this.westSecaucus_click_sig_4w,click_sig_4e:this.westSecaucus_click_sig_4e,throw_sw_1:this.westSecaucus_throw_sw_1,throw_sw_3:this.westSecaucus_throw_sw_3}),React.createElement(Laurel,{status:this.state.status_laurel,click_sig_2w:this.laurel_click_sig_2w,click_sig_4w:this.laurel_click_sig_4w,click_sig_8w:this.laurel_click_sig_8w,click_sig_10w:this.laurel_click_sig_10w,click_sig_6e:this.laurel_click_sig_6e,click_sig_12e:this.laurel_click_sig_12e,click_sig_4e:this.laurel_click_sig_4e,click_sig_8e:this.laurel_click_sig_8e,throw_sw_1:this.laurel_throw_sw_1,throw_sw_3:this.laurel_throw_sw_3,throw_sw_7:this.laurel_throw_sw_7,throw_sw_9:this.laurel_throw_sw_9,throw_sw_11:this.laurel_throw_sw_11,throw_sw_13:this.laurel_throw_sw_13}));}// ---- END render() ----\n// --------------------------------------------------------------------------------------------\n// All of the following function are the only way to get the event handers (below) and passed \n// into each component to access the fuctions in the CTC controler, it's a very cumbersum way \n// to accomplish this, but its the only way I was able to find. I would like to change this \n// one day in the future if I find a more streamlined way\n// --------------------------------------------------------------------------------------------\n/* Bergen County Line Event Handlers */ /* Functions for the HX Interlocking */ /**\n     * hx_click_sig_2w1()\n     * @summary The event handler for Signal #2w-1\n     */ // ---- END laurel_throw_sw_13() ----\n/* END Functions for Laurel Interlocking */}]);return MainLine;}(Component);// Export the panel to be drawn on the screen\nexport default MainLine;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/MainLine.jsx"],"names":["React","Component","Clock","MaineLine_CTC","Train","MainLineTracks","Hilburn","SF","WC","RidgewoodJunction","Suscon","Mill","WestSecaucus","Laurel","BergenTracks","BT","PascackJunction","HX","SouthernTierTracks","Sparrow","PA","Port","BC","OV","Howells","Hall","HudsonJunction","CentralValley","Harriman","Sterling","clock","ctc","startClock","setTimeout","add_train","occupy_blocks","MainLine","props","update_blocks","update_route_blocks","setState","status_mainLine","get_mainLine_blocks_status","symbols_mailLine","get_mainLine_symbols","status_bergenLine","get_bergen_blocks_status","symbols_bergenLine","get_bergen_symbols","status_tier","get_tier_block_status","symbols_tier","get_tier_symbols","update_trains","update_interlockings","status_sparrow","get_sparrow","get_interlocking_status","status_pa","get_pa","status_port","get_port","status_bc","get_bc","status_ov","get_ov","status_howells","get_howells","status_hall","get_hall","status_hudson","get_hudson","status_valley","get_valley","status_harriman","get_harriman","status_sterling","get_sterling","status_hilburn","get_hilburn","status_sf","get_sf","status_wc","get_wc","status_ridgewood","get_ridgewood","status_suscon","get_suscon","status_mill","get_mill","status_westSecaucus","get_westSecaucus","status_laurel","get_laurel","status_bt","get_bt","status_pascack","get_pascack","status_hx","get_hx","hx_click_sig_2w1","click_sig_2w1","state","block_pascack_hx_1","block_pascack_hx_2","hx_click_sig_2w2","click_sig_2w2","hx_click_sig_2w3","click_sig_2w3","hx_click_sig_4w","click_sig_4w","hx_click_sig_2e","click_sig_2e","block_hx_laurel_1","block_hx_croxton_2","block_hx_croxton_1","hx_click_sig_4e","click_sig_4e","block_hx_laurel_2","hx_throw_sw_1","throw_sw_1","hx_throw_sw_3","throw_sw_3","hx_throw_sw_5","throw_sw_5","pascack_click_sig_2w","click_sig_2w","block_bt_pascack_1","block_bt_pascack_2","pascack_click_sig_4w","pascack_click_sig_2e","pascack_click_sig_4e","pascack_throw_sw_1","pascack_throw_sw_3","bt_click_sig_2w1","block_ridgewood_bt_1","block_ridgewood_bt_2","bt_click_sig_2w2","bt_click_sig_4w","bt_click_sig_2e","block_bt_nysw","bt_click_sig_4e","bt_throw_sw_1","bt_throw_sw_3","bt_throw_sw_5","sparrow_click_sig_2w_1","click_sig_2w_1","block_bingo_sparrow","sparrow_click_sig_2w_2","click_sig_2w_2","sparrow_click_sig_2w_3","click_sig_2w_3","sparrow_click_sig_2e","block_sparrow_pa_1","block_sparrow_pa_2","block_sparrow_cripple","sparrow_throw_sw_1","sparrow_throw_sw_3","pa_click_sig_2w_1","block_buckleys_west","pa_click_sig_2w_2","pa_click_sig_4w","pa_click_sig_2e","block_pa_port_1","block_port_yard_west","pa_click_sig_4e","block_pa_bc_2","pa_throw_sw_1","pa_throw_sw_3","port_click_sig_2w","block_port_yard_east","port_click_sig_2e_1","click_sig_2e_1","block_port_bc_1","port_click_sig_2e_2","click_sig_2e_2","port_throw_sw_1","bc_click_sig_2w","bc_click_sig_2e","block_bc_ov_1","bc_click_sig_4e","bc_throw_sw_1","ov_click_sig_2w","ov_click_sig_2ws","click_sig_2ws","ov_click_sig_2e","block_ov_howells_1","block_ov_howells_2","ov_throw_sw_1","howells_click_sig_2w","howells_click_sig_2e","block_howells_hall_1","howells_click_sig_2es","click_sig_2es","howells_throw_sw_3","hall_click_sig_2w","hall_click_sig_4w","block_hall_yard","hall_click_sig_2e","block_hall_hudson_1","block_hall_hudson_2","hall_click_sig_4e","hall_throw_sw_1","hudson_click_sig_2w","hudson_click_sig_2ws","hudson_click_sig_2e","block_hudson_valley_1","block_hudson_nysw","hudson_click_sig_2es","hudson_throw_sw_1","hudson_throw_sw_3","valley_click_sig_1w","click_sig_1w","valley_click_sig_2w","valley_click_sig_1e","click_sig_1e","block_valley_harriman_1","block_valley_harriman_2","valley_throw_sw_21","throw_sw_21","harriman_click_sig_1w","block_harriman_industrial","harriman_click_sig_1e","block_harriman_sterling_1","harriman_click_sig_2e","harriman_click_sig_3e","click_sig_3e","harriman_throw_sw_21","harriman_throw_sw_32","throw_sw_32","sterling_click_sig_2w","sterling_click_sig_2ws","sterling_click_sig_1e","block_sterling_sf","block_sterling_hilburn","sterling_throw_sw_21","hilburn_click_sig_2w_1","hilburn_click_sig_2w_2","hilburn_click_sig_2e","block_hilburn_sf","block_hilburn_yard_west","hilburn_throw_sw_1","sf_click_sig_2w","block_hilburn_yard_east","sf_click_sig_4w","sf_click_sig_2e","block_sf_wc_1","sf_click_sig_4e_1","click_sig_4e_1","block_sf_wc_2","sf_click_sig_4e_2","click_sig_4e_2","sf_throw_sw_1","sf_throw_sw_3","wc_click_sig_2w_1","block_wc_yard","wc_click_sig_2w_2","wc_click_sig_4w","wc_click_sig_2e_1","block_wc_ridgewood_1","block_wc_ridgewood_2","block_wc_ridgewood_3","wc_click_sig_2e_2","wc_click_sig_4e","wc_throw_sw_1","wc_throw_sw_3","wc_throw_sw_5","wc_throw_sw_7","throw_sw_7","ridgewood_click_sig_2w_1","ridgewood_click_sig_2w_2","ridgewood_click_sig_4w","ridgewood_click_sig_6w","click_sig_6w","ridgewood_click_sig_2e","block_ridgewood_suscon_1","block_ridgewood_suscon_2","block_ridgewood_suscon_3","block_ridgewood_suscon_4","ridgewood_click_sig_4e","ridgewood_click_sig_6e","click_sig_6e","ridgewood_throw_sw_1","ridgewood_throw_sw_3","ridgewood_throw_sw_5","ridgewood_throw_sw_7","ridgewood_throw_sw_9","throw_sw_9","suscon_click_sig_2w","click_sig","suscon_click_sig_2e","block_suscon_mill_1","block_suscon_mill_2","suscon_click_sig_4w","suscon_click_sig_4e","suscon_throw_sw_1","suscon_throw_sw_3","mill_click_sig_2w","mill_click_sig_2e","block_mill_westSecaucus_1","block_mill_westSecaucus_2","mill_click_sig_4w","mill_click_sig_4e","mill_throw_sw_1","mill_throw_sw_3","westSecaucus_click_sig_2w","westSecaucus_click_sig_2e","block_westSecaucus_laurel_1","block_westSecaucus_laurel_2","westSecaucus_click_sig_4w","westSecaucus_click_sig_4e","westSecaucus_throw_sw_1","westSecaucus_throw_sw_3","laurel_click_sig_2w","laurel_click_sig_4w","laurel_click_sig_8w","click_sig_8w","laurel_click_sig_10w","click_sig_10w","laurel_click_sig_6e","block_westEnd_laurel_1","block_westEnd_laurel_2","block_westEnd_laurel_3","block_westEnd_laurel_4","laurel_click_sig_12e","click_sig_12e","laurel_click_sig_4e","laurel_click_sig_8e","click_sig_8e","laurel_throw_sw_1","laurel_throw_sw_3","laurel_throw_sw_7","laurel_throw_sw_11","throw_sw_11","laurel_throw_sw_13","throw_sw_13","interval_update_blocks","setInterval","interval_update_trains","clearInterval","hilburn_click_sig_4e","laurel_throw_sw_9"],"mappings":"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","sourcesContent":["/**\n * @file MainLine.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for the entire Pannel\n *\n * @description Extends the React Component Class and is the UI of the entrie Pannel, this component\n * contains all the other components, and holds the functions that allows each component to\n * change the back end class for each enterlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import My Own Clock Class which takes care of trains running\nimport Clock from '../../scripts/Trains/clock.js';\n// To Control All The Trains\nimport MaineLine_CTC from '../../scripts/CTC/mainLine_ctc.js';\n// Import My Train Class \nimport Train from '../../scripts/Trains/train.js';\n\n// Import the Main Line Components\nimport MainLineTracks from '../Panel/Main_Line/MainLineTracks.jsx';\nimport Hilburn from '../Panel/Main_Line/Hilburn.jsx';\nimport SF from '../Panel/Main_Line/SF.jsx';\nimport WC from '../Panel/Main_Line/WC.jsx';\nimport RidgewoodJunction from '../Panel/Main_Line/RidgewoodJunction.jsx';\nimport Suscon from '../Panel/Main_Line/Suscon.jsx';\nimport Mill from '../Panel/Main_Line/Mill.jsx';\nimport WestSecaucus from '../Panel/Main_Line/WestSecaucus.jsx';\nimport Laurel from '../Panel/Main_Line/Laurel.jsx';\n\n// Import the Bergen County Line Components\nimport BergenTracks from '../Panel/Bergen_County_Line/BergenTracks.jsx';\nimport BT from '../Panel/Bergen_County_Line/BT.jsx';\nimport PascackJunction from '../Panel/Bergen_County_Line/PascackJct.jsx';\nimport HX from '../Panel/Bergen_County_Line/HX.jsx';\n\n// Import the Southern Tier Line Components\nimport SouthernTierTracks from '../Panel/Southern_Tier_Line/SouthernTierTracks.jsx';\nimport Sparrow from '../Panel/Southern_Tier_Line/Sparrow.jsx';\nimport PA from '../Panel/Southern_Tier_Line/PA.jsx';\nimport Port from '../Panel/Southern_Tier_Line/Port.jsx';\nimport BC from '../Panel/Southern_Tier_Line/BC.jsx';\nimport OV from '../Panel/Southern_Tier_Line/OV.jsx';\nimport Howells from '../Panel/Southern_Tier_Line/Howells.jsx';\nimport Hall from '../Panel/Southern_Tier_Line/Hall.jsx';\nimport HudsonJunction from '../Panel/Southern_Tier_Line/HudsonJunction.jsx';\nimport CentralValley from '../Panel/Southern_Tier_Line/CentralValley.jsx';\nimport Harriman from '../Panel/Southern_Tier_Line/Harriman.jsx';\nimport Sterling from '../Panel/Southern_Tier_Line/Sterling.jsx';\n\n\n// Create A new Clock for the Game\nvar clock = new Clock();\n// Create the CTC controler for the game, passing it the clock we created above\nvar ctc = new MaineLine_CTC(clock);\n\n// Initialize the clock\nclock.startClock();\n\n\nsetTimeout(function(){ \n    ctc.add_train(new Train(\"[E] 49\", \"3_yardEast_port\", \"EAST\", 10));\n    ctc.add_train(new Train(\"3\", \"3_laurel_westEnd\", \"WEST\", 10));\n    ctc.add_train(new Train(\"1\", \"1_laurel_westEnd\", \"WEST\", 10));\n    ctc.add_train(new Train(\"2\", \"2_laurel_westEnd\", \"WEST\", 10));\n    ctc.add_train(new Train(\"4\", \"4_laurel_westEnd\", \"WEST\", 10));\n    ctc.add_train(new Train(\"50\", \"3_yardHilburn_sf\", \"EAST\", 10));\n    ctc.add_train(new Train(\"[E] SU100\", \"1_bingo_sparrow\", \"EAST\", 10));\n    ctc.occupy_blocks(); \n}, 1500);  \n\n\n/**\n * The React JSX Component Class for the entire Maine Line Dispatcher Panel This class is a JSX React Component for the Maine Line Dispatch Panel, \n * this will control all the other components that make up the pannel. This also controls the functions that allow each component to change their respected \n * back end functions.\n */\nclass MainLine extends Component {\n    \n    /**\n     * constructor()\n     * @summary The Constructor for the MainLine JSX class.\n     * \n     * All this does is set that state for every thing getting the information fro the CTC controller, the state here\n     * is used to send to the child components so they can render the correct information\n     * \n     * @param props, Required as park of ReactJS, but is not used here\n     */\n    constructor(props) {\n        super(props);\n        /**\n         * State\n         * @summary Object that holds the state or status information for the component\n         * \n         * This object holds all the information for everything on the pannel that is required to display the routes \n         * correctly\n         */\n        this.state = {\n            // Southern Tier Interlockings Status\n            status_sparrow: ctc.get_sparrow().get_interlocking_status(),\n            status_pa: ctc.get_pa().get_interlocking_status(),\n            status_port: ctc.get_port().get_interlocking_status(),  \n            status_bc: ctc.get_bc().get_interlocking_status(),\n            status_ov: ctc.get_ov().get_interlocking_status(),\n            status_howells: ctc.get_howells().get_interlocking_status(),\n            status_hall: ctc.get_hall().get_interlocking_status(),\n            status_hudson: ctc.get_hudson().get_interlocking_status(),\n            status_valley: ctc.get_valley().get_interlocking_status(),\n            status_harriman: ctc.get_harriman().get_interlocking_status(),\n            status_sterling: ctc.get_sterling().get_interlocking_status(),\n\n            // Main Line Interlockings Status\n            status_hilburn: ctc.get_hilburn().get_interlocking_status(),\n            status_sf: ctc.get_sf().get_interlocking_status(),\n            status_wc: ctc.get_wc().get_interlocking_status(),\n            status_ridgewood: ctc.get_ridgewood().get_interlocking_status(),\n            status_suscon: ctc.get_suscon().get_interlocking_status(),\n            status_mill: ctc.get_mill().get_interlocking_status(),\n            status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status(),\n            status_laurel: ctc.get_laurel().get_interlocking_status(),\n\n            // Bergen County Interlocking Status\n            status_bt: ctc.get_bt().get_interlocking_status(),\n            status_pascack: ctc.get_pascack().get_interlocking_status(),\n            status_hx: ctc.get_hx().get_interlocking_status(),\n\n            // Main Line Tracks & Symbols\n            status_mainLine: ctc.get_mainLine_blocks_status(),\n            symbols_mailLine: ctc.get_mainLine_symbols(),\n            // Bergen County Track & Symbols\n            status_bergenLine: ctc.get_bergen_blocks_status(),\n            symbols_bergenLine: ctc.get_bergen_symbols(),\n            // Southern Tier Tracks & Symbols\n            status_tier: ctc.get_tier_block_status(),\n            symbols_tier: ctc.get_tier_symbols()\n        };\n    }\n\n    /**\n     * update_blocks()\n     * @summary This function is called every 0.5 Seconds and updates all the tracks blocks\n     * \n     * @description When this function is called it call 2 functions in the CTC controler class.\n     * The first one will check find all the routes at each interlocking and set the correct\n     * next block to routed, so the route can be displayed on the pannel\n     * The second will get all the trains current locations and make those blocks as occupied,\n     * to show the correct location of each train on the pannel\n     */\n    update_blocks = () => {\n        // Update All The Routes\n        ctc.update_route_blocks();\n        // Update All The Trains\n        ctc.occupy_blocks();\n        // Set the Component State\n        this.setState({\n            // Main Line Tracks & Symbols\n            status_mainLine: ctc.get_mainLine_blocks_status(),\n            symbols_mailLine: ctc.get_mainLine_symbols(),\n            // Bergen County Tracks & Symbols\n            status_bergenLine: ctc.get_bergen_blocks_status(),\n            symbols_bergenLine: ctc.get_bergen_symbols(),\n            // Southern Tier Tracks & Symbols\n            status_tier: ctc.get_tier_block_status(),\n            symbols_tier: ctc.get_tier_symbols()\n        });\n    }\n    // ---- END update_blocks() ----\n\n    /**\n     * update_trains()\n     * @summary This function is called every 2 Seconds and updates all the Trains locations\n     * \n     * @description When this function is called it will call 2 functions in the CTC controler\n     * The first function updates the trains allowing them to move to the next location if the\n     * correct time has be spend in their current block\n     * The second function updates the interlockings showing if they are occupied or cleared if the\n     * correct time has passed\n     */\n    update_trains = () => {\n        // Allow trains to update their location if possible\n        ctc.update_trains();\n        // Update the interlockings\n        ctc.update_interlockings();\n        // Set The State of the Component\n        this.setState({\n            // Main Line Tracks & Symbols\n            status_mainLine: ctc.get_mainLine_blocks_status(),\n            symbols_mailLine: ctc.get_mainLine_symbols(),\n            // Bergen County Tracks & Symbols\n            status_bergenLine: ctc.get_bergen_blocks_status(),\n            symbols_bergenLine: ctc.get_bergen_symbols(),\n            // Southern Tier Tracks & Symbols\n            status_tier: ctc.get_tier_block_status(),\n            symbols_tier: ctc.get_tier_symbols(),\n        \n            // Southern Tier Interlockings\n            status_sparrow: ctc.get_sparrow().get_interlocking_status(),\n            status_pa: ctc.get_pa().get_interlocking_status(),\n            status_port: ctc.get_port().get_interlocking_status(),  \n            status_bc: ctc.get_bc().get_interlocking_status(),\n            status_ov: ctc.get_ov().get_interlocking_status(),\n            status_howells: ctc.get_howells().get_interlocking_status(),\n            status_hall: ctc.get_hall().get_interlocking_status(),\n            status_hudson: ctc.get_hudson().get_interlocking_status(),\n            status_valley: ctc.get_valley().get_interlocking_status(),\n            status_harriman: ctc.get_harriman().get_interlocking_status(),\n            status_sterling: ctc.get_sterling().get_interlocking_status(),\n\n            // Main Line Interlockings\n            status_hilburn: ctc.get_hilburn().get_interlocking_status(),\n            status_sf: ctc.get_sf().get_interlocking_status(),\n            status_wc: ctc.get_wc().get_interlocking_status(),\n            status_ridgewood: ctc.get_ridgewood().get_interlocking_status(),\n            status_suscon: ctc.get_suscon().get_interlocking_status(),\n            status_mill: ctc.get_mill().get_interlocking_status(),\n            status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status(),\n            status_laurel: ctc.get_laurel().get_interlocking_status(),\n\n            // Bergen County Interlockings\n            status_bt: ctc.get_bt().get_interlocking_status(),\n            status_pascack: ctc.get_pascack().get_interlocking_status(),\n            status_hx: ctc.get_hx().get_interlocking_status(),\n        });\n    }\n\n    /**\n     * componentDidMount()\n     * @summary ReactJS function that allows you do set the intervals for when certin functions are called\n     * \n     * @description This function sets the intervals for each function that is called repeadely after a amount of time\n     * Will call the update_blocks() function every 0.5 Seconds\n     * Will call the update_trains() function every 2 Seconds\n     */\n    componentDidMount() {\n        // update_blocks() Interval [0.5 Seconds]\n        this.interval_update_blocks = setInterval(() => this.update_blocks(), 500);\n        // update_trains() Interval [2 Seconds]\n        this.interval_update_trains = setInterval(() => this.update_trains(), 2000);\n    }\n    // ---- END componentDidMount()\n\n    /**\n     * componentWillUnmount()\n     * @summary ReactJS function that removes the intervals, this is never called in this program\n     * \n     * @description This function deletes the intervals that are used to update the blocks & trains\n     * This is never called in this program\n     */\n    componentWillUnmount() {\n        clearInterval(this.interval_update_blocks);\n        clearInterval(this.interval_update_trains);\n    }\n    // ---- END componentWillUnmount() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws all the other interlockings and track components to the screen\n     * \n     * @description This will draw all the components to the screen to assemble the pannel, it also passes all the function\n     * and information to each components through their properties or (props)\n     */\n    render() { \n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* SOUTHERN TIER SECTION */}\n                {/* Tracks */}\n                <SouthernTierTracks \n                    blocks={this.state.status_tier}\n                    symbols={this.state.symbols_tier}\n                />\n                {/* Interlockings */}\n                <Sparrow \n                    status={this.state.status_sparrow}\n                    click_sig_2w_1={this.sparrow_click_sig_2w_1}\n                    click_sig_2w_2={this.sparrow_click_sig_2w_2}\n                    click_sig_2w_3={this.sparrow_click_sig_2w_3}\n                    click_sig_2e={this.sparrow_click_sig_2e}\n                    throw_sw_1={this.sparrow_throw_sw_1}\n                    throw_sw_3={this.sparrow_throw_sw_3}\n                />\n                <PA \n                    status={this.state.status_pa}\n                    click_sig_2w_1={this.pa_click_sig_2w_1}\n                    click_sig_2w_2={this.pa_click_sig_2w_2}\n                    click_sig_4w={this.pa_click_sig_4w}\n                    click_sig_2e={this.pa_click_sig_2e}\n                    click_sig_4e={this.pa_click_sig_4e}\n                    throw_sw_1={this.pa_throw_sw_1}\n                    throw_sw_3={this.pa_throw_sw_3}\n                />\n                <Port \n                    status={this.state.status_port}\n                    click_sig_2w={this.port_click_sig_2w}\n                    click_sig_2e_1={this.port_click_sig_2e_1}\n                    click_sig_2e_2={this.port_click_sig_2e_2}\n                    throw_sw_1={this.port_throw_sw_1}\n                />\n                <BC \n                    status={this.state.status_bc}\n                    click_sig_2w={this.bc_click_sig_2w}\n                    click_sig_2e={this.bc_click_sig_2e}\n                    click_sig_4e={this.bc_click_sig_4e}\n                    throw_sw_1={this.bc_throw_sw_1}\n                />\n                <OV \n                    status={this.state.status_ov}\n                    click_sig_2w={this.ov_click_sig_2w}\n                    click_sig_2ws={this.ov_click_sig_2ws}\n                    click_sig_2e={this.ov_click_sig_2e}\n                    throw_sw_1={this.ov_throw_sw_1}\n                />\n                <Howells \n                    status={this.state.status_howells}\n                    click_sig_2w={this.howells_click_sig_2w}\n                    click_sig_2e={this.howells_click_sig_2e}\n                    click_sig_2es={this.howells_click_sig_2es}\n                    throw_sw_3={this.howells_throw_sw_3}\n                />\n                <Hall \n                    status={this.state.status_hall}\n                    click_sig_2w={this.hall_click_sig_2w}\n                    click_sig_4w={this.hall_click_sig_4w}\n                    click_sig_2e={this.hall_click_sig_2e}\n                    click_sig_4e={this.hall_click_sig_4e}\n                    throw_sw_1={this.hall_throw_sw_1}\n                />\n                <HudsonJunction \n                    status={this.state.status_hudson}\n                    click_sig_2w={this.hudson_click_sig_2w}\n                    click_sig_2ws={this.hudson_click_sig_2ws}\n                    click_sig_2e={this.hudson_click_sig_2e}\n                    click_sig_2es={this.hudson_click_sig_2es}\n                    throw_sw_1={this.hudson_throw_sw_1}\n                    throw_sw_3={this.hudson_throw_sw_3}\n                />\n                <CentralValley \n                    status={this.state.status_valley}\n                    click_sig_1w={this.valley_click_sig_1w}\n                    click_sig_2w={this.valley_click_sig_2w}\n                    click_sig_1e={this.valley_click_sig_1e}\n                    throw_sw_21={this.valley_throw_sw_21}\n                />\n                <Harriman \n                    status={this.state.status_harriman}\n                    click_sig_1w={this.harriman_click_sig_1w}\n                    click_sig_1e={this.harriman_click_sig_1e}\n                    click_sig_2e={this.harriman_click_sig_2e}\n                    click_sig_3e={this.harriman_click_sig_3e}\n                    throw_sw_21={this.harriman_throw_sw_21}\n                    throw_sw_32={this.harriman_throw_sw_32}\n                />\n                <Sterling \n                    status={this.state.status_sterling}\n                    click_sig_2w={this.sterling_click_sig_2w}\n                    click_sig_2ws={this.sterling_click_sig_2ws}\n                    click_sig_1e={this.sterling_click_sig_1e}\n                    throw_sw_21={this.sterling_throw_sw_21}\n                />\n\n\n                {/* BERGEN COUNTY LINE SECTION */}\n                {/* Tracks */}\n                <BergenTracks \n                    blocks={this.state.status_bergenLine}\n                    symbols={this.state.symbols_bergenLine}\n                />\n                {/* Interlockings */}\n                <BT \n                    status={this.state.status_bt}\n                    click_sig_2w1={this.bt_click_sig_2w1}\n                    click_sig_2w2={this.bt_click_sig_2w2}\n                    click_sig_4w={this.bt_click_sig_4w}\n                    click_sig_2e={this.bt_click_sig_2e}\n                    click_sig_4e={this.bt_click_sig_4e}\n                    throw_sw_1={this.bt_throw_sw_1}\n                    throw_sw_3={this.bt_throw_sw_3}\n                    throw_sw_5={this.bt_throw_sw_5}\n                />\n                <PascackJunction \n                    status={this.state.status_pascack}\n                    click_sig_2w={this.pascack_click_sig_2w}\n                    click_sig_4w={this.pascack_click_sig_4w}\n                    click_sig_2e={this.pascack_click_sig_2e}\n                    click_sig_4e={this.pascack_click_sig_4e}\n                    throw_sw_1={this.pascack_throw_sw_1}\n                    throw_sw_3={this.pascack_throw_sw_3}\n                />\n                <HX \n                    status={this.state.status_hx}\n                    click_sig_2w1={this.hx_click_sig_2w1}\n                    click_sig_2w2={this.hx_click_sig_2w2}\n                    click_sig_2w3={this.hx_click_sig_2w3}\n                    click_sig_4w={this.hx_click_sig_4w}\n                    click_sig_2e={this.hx_click_sig_2e}\n                    click_sig_4e={this.hx_click_sig_4e}\n                    throw_sw_1={this.hx_throw_sw_1}\n                    throw_sw_3={this.hx_throw_sw_3}\n                    throw_sw_5={this.hx_throw_sw_5}\n                />\n\n\n                {/* MAIN LINE SECTION */}\n                {/* Tracks */}\n                <MainLineTracks \n                    blocks={this.state.status_mainLine}\n                    symbols={this.state.symbols_mailLine}\n                />\n                {/* Interlockings */}\n                <Hilburn \n                    status={this.state.status_hilburn}\n                    click_sig_2w_1={this.hilburn_click_sig_2w_1}\n                    click_sig_2w_2={this.hilburn_click_sig_2w_2}\n                    click_sig_2e={this.hilburn_click_sig_2e}\n                    click_sig_4e={this.hilburn_click_sig_4e}\n                    throw_sw_1={this.hilburn_throw_sw_1}\n                />\n                <SF \n                    status={this.state.status_sf}\n                    click_sig_2w={this.sf_click_sig_2w}\n                    click_sig_4w={this.sf_click_sig_4w}\n                    click_sig_2e={this.sf_click_sig_2e}\n                    click_sig_4e_1={this.sf_click_sig_4e_1}\n                    click_sig_4e_2={this.sf_click_sig_4e_2}\n                    throw_sw_1={this.sf_throw_sw_1}\n                    throw_sw_3={this.sf_throw_sw_3}\n                />\n                <WC \n                    status={this.state.status_wc}\n                    click_sig_2w_1={this.wc_click_sig_2w_1}\n                    click_sig_2w_2={this.wc_click_sig_2w_2}\n                    click_sig_4w={this.wc_click_sig_4w}\n                    click_sig_2e_1={this.wc_click_sig_2e_1}\n                    click_sig_2e_2={this.wc_click_sig_2e_2}\n                    click_sig_4e={this.wc_click_sig_4e}\n                    throw_sw_1={this.wc_throw_sw_1}\n                    throw_sw_3={this.wc_throw_sw_3}\n                    throw_sw_5={this.wc_throw_sw_5}\n                    throw_sw_7={this.wc_throw_sw_7}\n                />\n                <RidgewoodJunction \n                    status={this.state.status_ridgewood}\n                    click_sig_2w_1={this.ridgewood_click_sig_2w_1}\n                    click_sig_2w_2={this.ridgewood_click_sig_2w_2}\n                    click_sig_4w={this.ridgewood_click_sig_4w}\n                    click_sig_6w={this.ridgewood_click_sig_6w}\n                    click_sig_2e={this.ridgewood_click_sig_2e}\n                    click_sig_4e={this.ridgewood_click_sig_4e}\n                    click_sig_6e={this.ridgewood_click_sig_6e}\n                    throw_sw_1={this.ridgewood_throw_sw_1}\n                    throw_sw_3={this.ridgewood_throw_sw_3}\n                    throw_sw_5={this.ridgewood_throw_sw_5}\n                    throw_sw_7={this.ridgewood_throw_sw_7}\n                    throw_sw_9={this.ridgewood_throw_sw_9}\n                />\n                <Suscon \n                    status={this.state.status_suscon} \n                    click_sig_2w={this.suscon_click_sig_2w}\n                    click_sig_2e={this.suscon_click_sig_2e}\n                    click_sig_4w={this.suscon_click_sig_4w}\n                    click_sig_4e={this.suscon_click_sig_4e}\n                    throw_sw_1={this.suscon_throw_sw_1} \n                    throw_sw_3={this.suscon_throw_sw_3}\n                />\n                <Mill \n                    status={this.state.status_mill}\n                    click_sig_2w={this.mill_click_sig_2w}\n                    click_sig_2e={this.mill_click_sig_2e}\n                    click_sig_4w={this.mill_click_sig_4w}\n                    click_sig_4e={this.mill_click_sig_4e}\n                    throw_sw_1={this.mill_throw_sw_1}\n                    throw_sw_3={this.mill_throw_sw_3}\n                />\n                <WestSecaucus \n                    status={this.state.status_westSecaucus}\n                    click_sig_2w={this.westSecaucus_click_sig_2w}\n                    click_sig_2e={this.westSecaucus_click_sig_2e}\n                    click_sig_4w={this.westSecaucus_click_sig_4w}\n                    click_sig_4e={this.westSecaucus_click_sig_4e}\n                    throw_sw_1={this.westSecaucus_throw_sw_1}\n                    throw_sw_3={this.westSecaucus_throw_sw_3}\n                />\n                <Laurel \n                    status={this.state.status_laurel}\n                    click_sig_2w={this.laurel_click_sig_2w}\n                    click_sig_4w={this.laurel_click_sig_4w}\n                    click_sig_8w={this.laurel_click_sig_8w}\n                    click_sig_10w={this.laurel_click_sig_10w}\n                    click_sig_6e={this.laurel_click_sig_6e}\n                    click_sig_12e={this.laurel_click_sig_12e}\n                    click_sig_4e={this.laurel_click_sig_4e}\n                    click_sig_8e={this.laurel_click_sig_8e}\n                    throw_sw_1={this.laurel_throw_sw_1}\n                    throw_sw_3={this.laurel_throw_sw_3}\n                    throw_sw_7={this.laurel_throw_sw_7}\n                    throw_sw_9={this.laurel_throw_sw_9}\n                    throw_sw_11={this.laurel_throw_sw_11}\n                    throw_sw_13={this.laurel_throw_sw_13}\n                />\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    // --------------------------------------------------------------------------------------------\n    // All of the following function are the only way to get the event handers (below) and passed \n    // into each component to access the fuctions in the CTC controler, it's a very cumbersum way \n    // to accomplish this, but its the only way I was able to find. I would like to change this \n    // one day in the future if I find a more streamlined way\n    // --------------------------------------------------------------------------------------------\n\n    /* Bergen County Line Event Handlers */\n    /* Functions for the HX Interlocking */\n    /**\n     * hx_click_sig_2w1()\n     * @summary The event handler for Signal #2w-1\n     */\n    hx_click_sig_2w1 = () => {\n        // Get the backend function for corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hx().click_sig_2w1(\n            this.state.status_bergenLine.block_pascack_hx_1,\n            this.state.status_bergenLine.block_pascack_hx_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_click_sig_2w1() ----\n\n    /**\n     * hx_click_sig_2w2()\n     * @summary The event handler for the Signal #2w2\n     */\n    hx_click_sig_2w2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hx().click_sig_2w2(\n            this.state.status_bergenLine.block_pascack_hx_1,\n            this.state.status_bergenLine.block_pascack_hx_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_click_sig_2w2() ----\n\n    /**\n     * hx_click_sig_2w3()\n     * @summary The event handler for the Signal #2w3\n     */\n    hx_click_sig_2w3 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hx().click_sig_2w3(\n            this.state.status_bergenLine.block_pascack_hx_1,\n            this.state.status_bergenLine.block_pascack_hx_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_click_sig_2w3() ----\n\n    /**\n     * hx_click_sig_4w()\n     * @summary The event handler for the Signal #4w\n     */\n    hx_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hx().click_sig_4w(\n            this.state.status_bergenLine.block_pascack_hx_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_click_sig_4w() ----\n\n    /**\n     * hx_click_sig_2e()\n     * @summary The event handler for the Signal 2e\n     */\n    hx_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hx().click_sig_2e(\n            this.state.status_bergenLine.block_hx_laurel_1,\n            this.state.status_bergenLine.block_hx_croxton_2,\n            this.state.status_bergenLine.block_hx_croxton_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_click_sig_2e() ----\n\n    /**\n     * hx_click_sig_4e()\n     * @summary The event handler for the Signal 4e\n     */\n    hx_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hx().click_sig_4e(\n            this.state.status_bergenLine.block_hx_laurel_1,\n            this.state.status_bergenLine.block_hx_laurel_2,\n            this.state.status_bergenLine.block_hx_croxton_2,\n            this.state.status_bergenLine.block_hx_croxton_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_click_sig_4e() ----\n\n    /**\n     * hx_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    hx_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_hx().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_throw_sw_1() ----\n\n    /**\n     * hx_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    hx_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_hx().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_throw_sw_3() ----\n\n    /**\n     * hx_throw_sw_5()\n     * @summary The event handler for switch #5\n     */\n    hx_throw_sw_5 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_hx().throw_sw_5();\n        // Set the state of the Interlocking\n        this.setState({status_hx: ctc.get_hx().get_interlocking_status()});\n    }\n    // ---- END hx_throw_sw_5() ----\n    /* END Functions for the HX Interlocking */\n\n\n    /* Functions for the Pascack Junction Interlocking */\n    /**\n     * pascack_click_sig_2w()\n     * @summary Event handler for the signal #2w\n     */\n    pascack_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pascack().click_sig_2w(\n            this.state.status_bergenLine.block_bt_pascack_1,\n            this.state.status_bergenLine.block_bt_pascack_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pascack: ctc.get_pascack().get_interlocking_status()});\n    }\n    // ---- END pascack_click_sig_2w() ----\n\n    /**\n     * pascack_click_sig_4w()\n     * @summary Event handler for the signal #4w\n     */\n    pascack_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pascack().click_sig_4w(\n            this.state.status_bergenLine.block_bt_pascack_1,\n            this.state.status_bergenLine.block_bt_pascack_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pascack: ctc.get_pascack().get_interlocking_status()});\n    }\n    // ---- END pascack_click_sig_4w() ----\n\n    /**\n     * pascack_click_sig_2e()\n     * @summary Event handler for the signal #2e\n     */\n    pascack_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pascack().click_sig_2e(\n            this.state.status_bergenLine.block_pascack_hx_1,\n            this.state.status_bergenLine.block_pascack_hx_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pascack: ctc.get_pascack().get_interlocking_status()});\n    }\n    // ---- END pascack_click_sig_2e() ----\n\n    /**\n     * pascack_click_sig_4e()\n     * @summary Event handler for the signal #4e\n     */\n    pascack_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pascack().click_sig_4e(\n            this.state.status_bergenLine.block_pascack_hx_1,\n            this.state.status_bergenLine.block_pascack_hx_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pascack: ctc.get_pascack().get_interlocking_status()});\n    }\n    // ---- END pascack_click_sig_4e() ----\n\n    /**\n     * pascack_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    pascack_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_pascack().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_pascack: ctc.get_pascack().get_interlocking_status()});\n    }\n    // ---- END pascack_throw_sw_1() ----\n\n    /**\n     * pascack_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    pascack_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_pascack().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_pascack: ctc.get_pascack().get_interlocking_status()});\n    }\n    // ---- END pascack_throw_sw_1() ----\n    /* END Functions for the Pascack Junction Interlocking */\n\n\n    /* Functions for the BT Interlocking */\n    /**\n     * bt_click_sig_2w1()\n     * @summary Event handler for the signal #2w1\n     */\n    bt_click_sig_2w1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bt().click_sig_2w1(\n            this.state.status_bergenLine.block_ridgewood_bt_1,\n            this.state.status_bergenLine.block_ridgewood_bt_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_click_sig_2w1() ----\n\n    /**\n     * bt_click_sig_2w2()\n     * @summary Event handler for the signal #2w2\n     */\n    bt_click_sig_2w2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bt().click_sig_2w2(\n            this.state.status_bergenLine.block_ridgewood_bt_1,\n            this.state.status_bergenLine.block_ridgewood_bt_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_click_sig_2w1() ----\n\n    /**\n     * bt_click_sig_4w()\n     * @summary Event handler for the signal #4\n     */\n    bt_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bt().click_sig_4w(\n            this.state.status_bergenLine.block_ridgewood_bt_1,\n            this.state.status_bergenLine.block_ridgewood_bt_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_click_sig_2w1() ----\n\n    /**\n     * bt_click_sig_2e()\n     * @summary Event handler for the signal #2e\n     */\n    bt_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bt().click_sig_2e(\n            this.state.status_bergenLine.block_bt_pascack_1,\n            this.state.status_bergenLine.block_bt_pascack_2,\n            this.state.status_bergenLine.block_bt_nysw\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_click_sig_2w1() ----\n\n    /**\n     * bt_click_sig_4e()\n     * @summary Event handler for the signal #4e\n     */\n    bt_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bt().click_sig_4e(\n            this.state.status_bergenLine.block_bt_pascack_1,\n            this.state.status_bergenLine.block_bt_pascack_2,\n            this.state.status_bergenLine.block_bt_nysw\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_click_sig_2w1() ----\n\n    /**\n     * bt_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    bt_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_bt().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_throw_sw_1() ----\n\n    /**\n     * bt_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    bt_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_bt().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_throw_sw_3() ----\n\n    /**\n     * bt_throw_sw_5()\n     * @summary The event handler for switch #5\n     */\n    bt_throw_sw_5 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_bt().throw_sw_5();\n        // Set the state of the Interlocking\n        this.setState({status_bt: ctc.get_bt().get_interlocking_status()});\n    }\n    // ---- END bt_throw_sw_5() ----\n    /* END Functions for the BT Interlocking */\n    /* END Bergen County Line Event Handlers */\n\n\n\n\n    /* Southern Tier Event Handlers */\n    /* Functions for CP Sparrow */\n    /**\n     * sparrow_click_sig_2w_1()\n     * @summary The event handler for Signal #2w_1\n     */\n    sparrow_click_sig_2w_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sparrow().click_sig_2w_1(\n            this.state.status_tier.block_bingo_sparrow\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sparrow: ctc.get_sparrow().get_interlocking_status()});\n    }\n    // ---- END sparrow_click_sig_2w_1() ----\n\n    /**\n     * sparrow_click_sig_2w_2()\n     * @summary The event handler for Signal #2w_2\n     */\n    sparrow_click_sig_2w_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sparrow().click_sig_2w_2(\n            this.state.status_tier.block_bingo_sparrow\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sparrow: ctc.get_sparrow().get_interlocking_status()});\n    }\n    // ---- END sparrow_click_sig_2w_2() ----\n\n    /**\n     * sparrow_click_sig_2w_3()\n     * @summary The event handler for Signal #2w_3\n     */\n    sparrow_click_sig_2w_3 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sparrow().click_sig_2w_3(\n            this.state.status_tier.block_bingo_sparrow\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sparrow: ctc.get_sparrow().get_interlocking_status()});\n    }\n    // ---- END sparrow_click_sig_2w_3() ----\n\n    /**\n     * sparrow_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    sparrow_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sparrow().click_sig_2e(\n            this.state.status_tier.block_sparrow_pa_1,\n            this.state.status_tier.block_sparrow_pa_2,\n            this.state.status_tier.block_sparrow_cripple\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sparrow: ctc.get_sparrow().get_interlocking_status()});\n    }\n    // ---- END sparrow_click_sig_2e() ----\n\n    /**\n     * sparrow_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    sparrow_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_sparrow().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_sparrow: ctc.get_sparrow().get_interlocking_status()});\n    }\n    // ---- END sparrow_throw_sw_1() ----\n\n    /**\n     * sparrow_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    sparrow_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_sparrow().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_sparrow: ctc.get_sparrow().get_interlocking_status()});\n    }\n    // ---- END sparrow_throw_sw_3() ----\n    /* END Functions for CP Sparrow */\n\n\n    /* Functions for CP PA */\n    /**\n     * pa_click_sig_2w_1()\n     * @summary The event handler for Signal #2w_1\n     */\n    pa_click_sig_2w_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pa().click_sig_2w_1(\n            this.state.status_tier.block_sparrow_pa_1,\n            this.state.status_tier.block_sparrow_pa_2,\n            this.state.status_tier.block_buckleys_west\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pa: ctc.get_pa().get_interlocking_status()});\n    }\n    // ---- END pa_click_sig_2w_1() ----\n\n    /**\n     * pa_click_sig_2w_2()\n     * @summary The event handler for Signal #2w_2\n     */\n    pa_click_sig_2w_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pa().click_sig_2w_2(\n            this.state.status_tier.block_sparrow_pa_1,\n            this.state.status_tier.block_sparrow_pa_2,\n            this.state.status_tier.block_buckleys_west\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pa: ctc.get_pa().get_interlocking_status()});\n    }\n    // ---- END pa_click_sig_2w_2() ----\n\n    /**\n     * pa_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    pa_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pa().click_sig_4w(\n            this.state.status_tier.block_sparrow_pa_2,\n            this.state.status_tier.block_buckleys_west\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pa: ctc.get_pa().get_interlocking_status()});\n    }\n    // ---- END pa_click_sig_4w() ----\n\n    /**\n     * pa_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    pa_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pa().click_sig_2e(\n            this.state.status_tier.block_pa_port_1,\n            this.state.status_tier.block_port_yard_west\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pa: ctc.get_pa().get_interlocking_status()});\n    }\n    // ---- END pa_click_sig_2e() ----\n\n    /**\n     * pa_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    pa_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_pa().click_sig_4e(\n            this.state.status_tier.block_pa_port_1,\n            this.state.status_tier.block_pa_bc_2,\n            this.state.status_tier.block_port_yard_west\n        );\n        // Set the state of the Interlocking\n        this.setState({status_pa: ctc.get_pa().get_interlocking_status()});\n    }\n    // ---- END pa_click_sig_4e() ----\n\n    /**\n     * pa_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    pa_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_pa().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_pa: ctc.get_pa().get_interlocking_status()});\n    }\n    // ---- END pa_throw_sw_1() ----\n\n    /**\n     * pa_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    pa_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_pa().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_pa: ctc.get_pa().get_interlocking_status()});\n    }\n    // ---- END pa_throw_sw_3() ----\n    /* END Functions for CP PA */\n\n\n    /* Functions for CP Port */\n    /**\n     * pa_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    port_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_port().click_sig_2w(\n            this.state.status_tier.block_pa_port_1,\n            this.state.status_tier.block_port_yard_east\n        );\n        // Set the state of the Interlocking\n        this.setState({status_port: ctc.get_port().get_interlocking_status()});\n    }\n    // ---- END port_click_sig_2w() ----\n\n    /**\n     * pa_click_sig_2e_1()\n     * @summary The event handler for Signal #2e_1\n     */\n    port_click_sig_2e_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_port().click_sig_2e_1(\n            this.state.status_tier.block_port_bc_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_port: ctc.get_port().get_interlocking_status()});\n    }\n    // ---- END port_click_sig_2e_1() ----\n\n    /**\n     * pa_click_sig_2e_2()\n     * @summary The event handler for Signal #2e_2\n     */\n    port_click_sig_2e_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_port().click_sig_2e_2(\n            this.state.status_tier.block_port_bc_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_port: ctc.get_port().get_interlocking_status()});\n    }\n    // ---- END port_click_sig_2e_2() ----\n\n    /**\n     * port_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    port_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_port().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_port: ctc.get_port().get_interlocking_status()});\n    }\n    // ---- END port_throw_sw_1() ----\n    /* END Functions for CP Port */\n\n\n    /* Functions for CP BC */\n    /**\n     * bc_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    bc_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bc().click_sig_2w(\n            this.state.status_tier.block_port_bc_1,\n            this.state.status_tier.block_pa_bc_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bc: ctc.get_bc().get_interlocking_status()});\n    }\n    // ---- END port_click_sig_2w() ----\n\n    /**\n     * bc_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    bc_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bc().click_sig_2e(\n            this.state.status_tier.block_bc_ov_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bc: ctc.get_bc().get_interlocking_status()});\n    }\n    // ---- END port_click_sig_2e() ----\n\n    /**\n     * bc_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    bc_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_bc().click_sig_4e(\n            this.state.status_tier.block_bc_ov_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_bc: ctc.get_bc().get_interlocking_status()});\n    }\n    // ---- END port_click_sig_4e() ----\n\n    /**\n     * bc_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    bc_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_bc().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_bc: ctc.get_bc().get_interlocking_status()});\n    }\n    // ---- END bc_throw_sw_1() ----\n    /* END Functions for CP BC */\n\n\n    /* Functions for CP OV */\n    /**\n     * ov_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    ov_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ov().click_sig_2w(\n            this.state.status_tier.block_bc_ov_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ov: ctc.get_ov().get_interlocking_status()});\n    }\n    // ---- END ov_click_sig_2w() ----\n\n    /**\n     * ov_click_sig_2ws()\n     * @summary The event handler for Signal #2ws\n     */\n    ov_click_sig_2ws = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ov().click_sig_2ws(\n            this.state.status_tier.block_bc_ov_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ov: ctc.get_ov().get_interlocking_status()});\n    }\n    // ---- END ov_click_sig_2ws() ----\n\n    /**\n     * ov_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    ov_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ov().click_sig_2e(\n            this.state.status_tier.block_ov_howells_1,\n            this.state.status_tier.block_ov_howells_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ov: ctc.get_ov().get_interlocking_status()});\n    }\n    // ---- END ov_click_sig_2e() ----\n\n    /**\n     * ov_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    ov_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_ov().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_ov: ctc.get_ov().get_interlocking_status()});\n    }\n    // ---- END ov_throw_sw_1() ----\n    /* END Functions for CP OV */\n\n\n    /* Functions for CP Howells */\n    /**\n     * howells_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    howells_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_howells().click_sig_2w(\n            this.state.status_tier.block_ov_howells_1,\n            this.state.status_tier.block_ov_howells_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_howells: ctc.get_howells().get_interlocking_status()});\n    }\n    // ---- END howells_click_sig_2w() ----\n\n    /**\n     * howells_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    howells_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_howells().click_sig_2e(\n            this.state.status_tier.block_howells_hall_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_howells: ctc.get_howells().get_interlocking_status()});\n    }\n    // ---- END howells_click_sig_2e() ----\n\n    /**\n     * howells_click_sig_2es()\n     * @summary The event handler for Signal #2es\n     */\n    howells_click_sig_2es = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_howells().click_sig_2es(\n            this.state.status_tier.block_howells_hall_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_howells: ctc.get_howells().get_interlocking_status()});\n    }\n    // ---- END howells_click_sig_2es() ----\n\n    /**\n     * howells_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    howells_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_howells().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_howells: ctc.get_howells().get_interlocking_status()});\n    }\n    // ---- END howells_throw_sw_3() ----\n    /* END Functions for CP Howells */\n\n\n    /* Functions for CP Hall */\n    /**\n     * hall_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    hall_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hall().click_sig_2w(\n            this.state.status_tier.block_howells_hall_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hall: ctc.get_hall().get_interlocking_status()});\n    }\n    // ---- END hall_click_sig_2w() ----\n\n    /**\n     * hall_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    hall_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hall().click_sig_4w(\n            this.state.status_tier.block_howells_hall_1,\n            this.state.status_tier.block_hall_yard\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hall: ctc.get_hall().get_interlocking_status()});\n    }\n    // ---- END hall_click_sig_4w() ----\n\n    /**\n     * hall_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    hall_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hall().click_sig_2e(\n            this.state.status_tier.block_hall_hudson_1,\n            this.state.status_tier.block_hall_hudson_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hall: ctc.get_hall().get_interlocking_status()});\n    }\n    // ---- END hall_click_sig_2e() ----\n\n    /**\n     * hall_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    hall_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hall().click_sig_4e(\n            this.state.status_tier.block_hall_hudson_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hall: ctc.get_hall().get_interlocking_status()});\n    }\n    // ---- END hall_click_sig_4e() ----\n\n    /**\n     * hall_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    hall_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_hall().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_hall: ctc.get_hall().get_interlocking_status()});\n    }\n    // ---- END hall_throw_sw_1() ----\n    /* END Functions for CP Hall */\n\n\n    /* Functions for CP Hudson Junction */\n    /**\n     * hudson_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    hudson_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hudson().click_sig_2w(\n            this.state.status_tier.block_hall_hudson_1,\n            this.state.status_tier.block_hall_hudson_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hudson: ctc.get_hudson().get_interlocking_status()});\n    }\n    // ---- END hudson_click_sig_2w() ----\n\n    /**\n     * hudson_click_sig_2ws()\n     * @summary The event handler for Signal #2ws\n     */\n    hudson_click_sig_2ws = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hudson().click_sig_2ws(\n            this.state.status_tier.block_hall_hudson_1,\n            this.state.status_tier.block_hall_hudson_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hudson: ctc.get_hudson().get_interlocking_status()});\n    }\n    // ---- END hudson_click_sig_2ws() ----\n\n    /**\n     * hudson_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    hudson_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hudson().click_sig_2e(\n            this.state.status_tier.block_hudson_valley_1,\n            this.state.status_tier.block_hudson_nysw\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hudson: ctc.get_hudson().get_interlocking_status()});\n    }\n    // ---- END hudson_click_sig_2e() ----\n\n    /**\n     * hudson_click_sig_2es()\n     * @summary The event handler for Signal #2es\n     */\n    hudson_click_sig_2es = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hudson().click_sig_2es(\n            this.state.status_tier.block_hudson_valley_1,\n            this.state.status_tier.block_hudson_nysw\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hudson: ctc.get_hudson().get_interlocking_status()});\n    }\n    // ---- END hudson_click_sig_2es() ----\n\n    /**\n     * hudson_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    hudson_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_hudson().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_hudson: ctc.get_hudson().get_interlocking_status()});\n    }\n    // ---- END hudson_throw_sw_1() ----\n\n    /**\n     * hudson_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    hudson_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_hudson().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_hudson: ctc.get_hudson().get_interlocking_status()});\n    }\n    // ---- END hudson_throw_sw_3() ----\n    /* END Functions for CP Hudson Junction */\n\n\n    /* Functions for CP Central Valley */\n    /**\n     * valley_click_sig_1w()\n     * @summary The event handler for Signal #1w\n     */\n    valley_click_sig_1w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_valley().click_sig_1w(\n            this.state.status_tier.block_hudson_valley_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_valley: ctc.get_valley().get_interlocking_status()});\n    }\n    // ---- END valley_click_sig_1w() ----\n\n    /**\n     * valley_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    valley_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_valley().click_sig_2w(\n            this.state.status_tier.block_hudson_valley_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_valley: ctc.get_valley().get_interlocking_status()});\n    }\n    // ---- END valley_click_sig_2w() ----\n\n    /**\n     * valley_click_sig_1e()\n     * @summary The event handler for Signal #1e\n     */\n    valley_click_sig_1e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_valley().click_sig_1e(\n            this.state.status_tier.block_valley_harriman_1,\n            this.state.status_tier.block_valley_harriman_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_valley: ctc.get_valley().get_interlocking_status()});\n    }\n    // ---- END valley_click_sig_1e() ----\n\n    /**\n     * valley_throw_sw_21()\n     * @summary The event handler for switch #21\n     */\n    valley_throw_sw_21 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_valley().throw_sw_21();\n        // Set the state of the Interlocking\n        this.setState({status_valley: ctc.get_valley().get_interlocking_status()});\n    }\n    // ---- END valley_throw_sw_21() ----\n    /* END Functions for CP Central Valley */\n\n\n    /* Functions for CP Harriman */\n    /**\n     * harriman_click_sig_1w()\n     * @summary The event handler for Signal #1w\n     */\n    harriman_click_sig_1w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_harriman().click_sig_1w(\n            this.state.status_tier.block_valley_harriman_1,\n            this.state.status_tier.block_valley_harriman_2,\n            this.state.status_tier.block_harriman_industrial\n        );\n        // Set the state of the Interlocking\n        this.setState({status_harriman: ctc.get_harriman().get_interlocking_status()});\n    }\n    // ---- END harriman_click_sig_1w() ----\n\n    /**\n     * harriman_click_sig_1e()\n     * @summary The event handler for Signal #1e\n     */\n    harriman_click_sig_1e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_harriman().click_sig_1e(\n            this.state.status_tier.block_harriman_sterling_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_harriman: ctc.get_harriman().get_interlocking_status()});\n    }\n    // ---- END harriman_click_sig_1e() ----\n\n    /**\n     * harriman_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    harriman_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_harriman().click_sig_2e(\n            this.state.status_tier.block_harriman_sterling_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_harriman: ctc.get_harriman().get_interlocking_status()});\n    }\n    // ---- END harriman_click_sig_2e() ----\n\n    /**\n     * harriman_click_sig_3e()\n     * @summary The event handler for Signal #3e\n     */\n    harriman_click_sig_3e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_harriman().click_sig_3e(\n            this.state.status_tier.block_harriman_sterling_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_harriman: ctc.get_harriman().get_interlocking_status()});\n    }\n    // ---- END harriman_click_sig_3e() ----\n\n    /**\n     * harriman_throw_sw_21()\n     * @summary The event handler for switch #21\n     */\n    harriman_throw_sw_21 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_harriman().throw_sw_21();\n        // Set the state of the Interlocking\n        this.setState({status_harriman: ctc.get_harriman().get_interlocking_status()});\n    }\n    // ---- END harriman_throw_sw_21() ----\n\n    /**\n     * harriman_throw_sw_32()\n     * @summary The event handler for switch #32\n     */\n    harriman_throw_sw_32 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_harriman().throw_sw_32();\n        // Set the state of the Interlocking\n        this.setState({status_harriman: ctc.get_harriman().get_interlocking_status()});\n    }\n    // ---- END harriman_throw_sw_32() ----\n    /* END Functions for CP Harriman */\n\n\n    /* Functions for CP Sterling */\n    /**\n     * sterling_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    sterling_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sterling().click_sig_2w(\n            this.state.status_tier.block_harriman_sterling_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sterling: ctc.get_sterling().get_interlocking_status()});\n    }\n    // ---- END sterling_click_sig_2w() ----\n\n    /**\n     * sterling_click_sig_2ws()\n     * @summary The event handler for Signal #2ws\n     */\n    sterling_click_sig_2ws = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sterling().click_sig_2ws(\n            this.state.status_tier.block_harriman_sterling_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sterling: ctc.get_sterling().get_interlocking_status()});\n    }\n    // ---- END sterling_click_sig_2ws() ----\n\n    /**\n     * sterling_click_sig_1e()\n     * @summary The event handler for Signal #1e\n     */\n    sterling_click_sig_1e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sterling().click_sig_1e(\n            this.state.status_tier.block_sterling_sf,\n            this.state.status_tier.block_sterling_hilburn\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sterling: ctc.get_sterling().get_interlocking_status()});\n    }\n    // ---- END sterling_click_sig_1e() ----\n\n    /**\n     * sterling_throw_sw_21()\n     * @summary The event handler for switch #21\n     */\n    sterling_throw_sw_21 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_sterling().throw_sw_21();\n        // Set the state of the Interlocking\n        this.setState({status_sterling: ctc.get_sterling().get_interlocking_status()});\n    }\n    // ---- END sterling_throw_sw_21() ----\n    /* END Functions for CP Sterling */\n    /* END Southern Tier Event Handlers */\n\n\n\n    \n    /* Main Line Event Handlers */\n    /* Functions for Hilburn Interlocking */\n    /**\n     * hilburn_click_sig_2w_1()\n     * @summary The event handler for Signal #2w_1\n     */\n    hilburn_click_sig_2w_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hilburn().click_sig_2w_1(\n            this.state.status_mainLine.block_sterling_hilburn\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hilburn: ctc.get_hilburn().get_interlocking_status()});\n    }\n    // ---- END hilburn_click_sig_2w_1() ----\n\n    /**\n     * hilburn_click_sig_2w_2()\n     * @summary The event handler for Signal #2w_2\n     */\n    hilburn_click_sig_2w_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hilburn().click_sig_2w_2(\n            this.state.status_mainLine.block_sterling_hilburn\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hilburn: ctc.get_hilburn().get_interlocking_status()});\n    }\n    // ---- END hilburn_click_sig_2w_2() ----\n\n    /**\n     * hilburn_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    hilburn_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_hilburn().click_sig_2e(\n            this.state.status_mainLine.block_hilburn_sf,\n            this.state.status_mainLine.block_hilburn_yard_west\n        );\n        // Set the state of the Interlocking\n        this.setState({status_hilburn: ctc.get_hilburn().get_interlocking_status()});\n    }\n    // ---- END hilburn_click_sig_2e() ----\n\n    /**\n     * hilburn_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    hilburn_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_hilburn().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_hilburn: ctc.get_hilburn().get_interlocking_status()});\n    }\n    // ---- END hilburn_throw_sw_1() ----\n    /* END Functions for Hilburn Interlocking */\n\n\n    /* Functions for SF Interlocking */\n    /**\n     * sf_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    sf_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sf().click_sig_2w(\n            this.state.status_mainLine.block_sterling_sf,\n            this.state.status_mainLine.block_hilburn_sf,\n            this.state.status_mainLine.block_hilburn_yard_east\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sf: ctc.get_sf().get_interlocking_status()});\n    }\n    // ---- END sf_click_sig_2w() ----\n\n    /**\n     * sf_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    sf_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sf().click_sig_4w(\n            this.state.status_mainLine.block_hilburn_sf,\n            this.state.status_mainLine.block_hilburn_yard_east\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sf: ctc.get_sf().get_interlocking_status()});\n    }\n    // ---- END sf_click_sig_4w() ----\n\n    /**\n     * sf_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    sf_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sf().click_sig_2e(\n            this.state.status_mainLine.block_sf_wc_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sf: ctc.get_sf().get_interlocking_status()});\n    }\n    // ---- END sf_click_sig_2e() ----\n\n    /**\n     * sf_click_sig_4e_1()\n     * @summary The event handler for Signal #4e_1\n     */\n    sf_click_sig_4e_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sf().click_sig_4e_1(\n            this.state.status_mainLine.block_sf_wc_1,\n            this.state.status_mainLine.block_sf_wc_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sf: ctc.get_sf().get_interlocking_status()});\n    }\n    // ---- END sf_click_sig_4e_1() ----\n\n    /**\n     * sf_click_sig_4e_2()\n     * @summary The event handler for Signal #4e_2\n     */\n    sf_click_sig_4e_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_sf().click_sig_4e_2(\n            this.state.status_mainLine.block_sf_wc_1,\n            this.state.status_mainLine.block_sf_wc_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_sf: ctc.get_sf().get_interlocking_status()});\n    }\n    // ---- END sf_click_sig_4e_2() ----\n\n    /**\n     * sf_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    sf_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_sf().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_sf: ctc.get_sf().get_interlocking_status()});\n    }\n    // ---- END sf_throw_sw_1() ----\n\n    /**\n     * sf_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    sf_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_sf().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_sf: ctc.get_sf().get_interlocking_status()});\n    }\n    // ---- END sf_throw_sw_3() ----\n    /* END Functions for SF Interlocking */\n\n\n    /* Functions for WC Interlocking */\n    /**\n     * wc_click_sig_2w_1()\n     * @summary The event handler for Signal #2w_1\n     */\n    wc_click_sig_2w_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_wc().click_sig_2w_1(\n            this.state.status_mainLine.block_sf_wc_1,\n            this.state.status_mainLine.block_sf_wc_2,\n            this.state.status_mainLine.block_wc_yard\n        );\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_click_sig_2w_1() ----\n\n    /**\n     * wc_click_sig_2w_2()\n     * @summary The event handler for Signal #2w_2\n     */\n    wc_click_sig_2w_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_wc().click_sig_2w_2(\n            this.state.status_mainLine.block_sf_wc_1,\n            this.state.status_mainLine.block_sf_wc_2,\n            this.state.status_mainLine.block_wc_yard\n        );\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_click_sig_2w_2() ----\n\n    /**\n     * wc_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    wc_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_wc().click_sig_4w(\n            this.state.status_mainLine.block_sf_wc_1,\n            this.state.status_mainLine.block_sf_wc_2,\n            this.state.status_mainLine.block_wc_yard\n        )\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_click_sig_4w() ----\n\n    /**\n     * wc_click_sig_2e_1()\n     * @summary The event handler for Signal #2e_1\n     */\n    wc_click_sig_2e_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_wc().click_sig_2e_1(\n            this.state.status_mainLine.block_wc_ridgewood_1,\n            this.state.status_mainLine.block_wc_ridgewood_2,\n            this.state.status_mainLine.block_wc_ridgewood_3\n        );\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_click_sig_2e_1() ----\n\n    /**\n     * wc_click_sig_2e_2()\n     * @summary The event handler for Signal #2e_2\n     */\n    wc_click_sig_2e_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_wc().click_sig_2e_2(\n            this.state.status_mainLine.block_wc_ridgewood_1,\n            this.state.status_mainLine.block_wc_ridgewood_2,\n            this.state.status_mainLine.block_wc_ridgewood_3\n        );\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_click_sig_2e_2() ----\n\n    /**\n     * wc_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    wc_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_wc().click_sig_4e(\n            this.state.status_mainLine.block_wc_ridgewood_1,\n            this.state.status_mainLine.block_wc_ridgewood_2,\n            this.state.status_mainLine.block_wc_ridgewood_3\n        );\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_click_sig_4e() ----\n\n    /**\n     * wc_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    wc_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_wc().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_throw_sw_1() ----\n\n    /**\n     * wc_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    wc_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_wc().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_throw_sw_3() ----\n\n    /**\n     * wc_throw_sw_5()\n     * @summary The event handler for switch #5\n     */\n    wc_throw_sw_5 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_wc().throw_sw_5();\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_throw_sw_5() ----\n\n    /**\n     * wc_throw_sw_7()\n     * @summary The event handler for switch #7\n     */\n    wc_throw_sw_7 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_wc().throw_sw_7();\n        // Set the state of the Interlocking\n        this.setState({status_wc: ctc.get_wc().get_interlocking_status()});\n    }\n    // ---- END wc_throw_sw_7() ----\n    /* END Functions for WC Interlocking */\n\n\n    /* Functions for Ridgewood Junction Interlocking */\n    /**\n     * ridgewood_click_sig_2w_1()\n     * @summary The event handler for Signal #2w_1\n     */\n    ridgewood_click_sig_2w_1 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ridgewood().click_sig_2w1(\n            this.state.status_mainLine.block_wc_ridgewood_1,\n            this.state.status_mainLine.block_wc_ridgewood_2,\n            this.state.status_mainLine.block_wc_ridgewood_3,\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_click_sig_2w_1() ----\n\n    /**\n     * ridgewood_click_sig_2w_2()\n     * @summary The event handler for Signal #2w_2\n     */\n    ridgewood_click_sig_2w_2 = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ridgewood().click_sig_2w2(\n            this.state.status_mainLine.block_wc_ridgewood_1,\n            this.state.status_mainLine.block_wc_ridgewood_2,\n            this.state.status_mainLine.block_wc_ridgewood_3,\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_click_sig_2w_2() ----\n\n    /**\n     * ridgewood_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    ridgewood_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ridgewood().click_sig_4w(\n            this.state.status_mainLine.block_wc_ridgewood_1,\n            this.state.status_mainLine.block_wc_ridgewood_2,\n            this.state.status_mainLine.block_wc_ridgewood_3,\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_click_sig_4w() ----\n\n    /**\n     * ridgewood_click_sig_6w()\n     * @summary The event handler for Signal #6w\n     */\n    ridgewood_click_sig_6w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ridgewood().click_sig_6w(\n            this.state.status_mainLine.block_wc_ridgewood_1,\n            this.state.status_mainLine.block_wc_ridgewood_2,\n            this.state.status_mainLine.block_wc_ridgewood_3,\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_click_sig_6w() ----\n\n    /**\n     * ridgewood_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    ridgewood_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ridgewood().click_sig_2e(\n            this.state.status_mainLine.block_ridgewood_suscon_1,\n            this.state.status_mainLine.block_ridgewood_suscon_2,\n            this.state.status_mainLine.block_ridgewood_suscon_3,\n            this.state.status_mainLine.block_ridgewood_suscon_4\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_click_sig_2e() ----\n\n    /**\n     * ridgewood_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    ridgewood_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ridgewood().click_sig_4e(\n            this.state.status_mainLine.block_ridgewood_suscon_1,\n            this.state.status_mainLine.block_ridgewood_suscon_2,\n            this.state.status_mainLine.block_ridgewood_suscon_3,\n            this.state.status_mainLine.block_ridgewood_suscon_4\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_click_sig_4e() ----\n\n    /**\n     * ridgewood_click_sig_6e()\n     * @summary The event handler for Signal #6e\n     */\n    ridgewood_click_sig_6e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_ridgewood().click_sig_6e(\n            this.state.status_mainLine.block_ridgewood_suscon_1,\n            this.state.status_mainLine.block_ridgewood_suscon_2,\n            this.state.status_mainLine.block_ridgewood_suscon_3,\n            this.state.status_mainLine.block_ridgewood_suscon_4\n        );\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_click_sig_6e() ----\n\n    /**\n     * ridgewood_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    ridgewood_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_ridgewood().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_throw_sw_1() ----\n\n    /**\n     * ridgewood_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    ridgewood_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_ridgewood().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_throw_sw_3() ----\n\n    /**\n     * ridgewood_throw_sw_5()\n     * @summary The event handler for switch #5\n     */\n    ridgewood_throw_sw_5 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_ridgewood().throw_sw_5();\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_throw_sw_5() ----\n\n    /**\n     * ridgewood_throw_sw_7()\n     * @summary The event handler for switch #7\n     */\n    ridgewood_throw_sw_7 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_ridgewood().throw_sw_7();\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_throw_sw_7() ----\n\n    /**\n     * ridgewood_throw_sw_9()\n     * @summary The event handler for switch #9\n     */\n    ridgewood_throw_sw_9 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_ridgewood().throw_sw_9();\n        // Set the state of the Interlocking\n        this.setState({status_ridgewood: ctc.get_ridgewood().get_interlocking_status()});\n    }\n    // ---- END ridgewood_throw_sw_9() ----\n    /* END Functions for Ridgewood Junction Interlocking */\n\n\n    /* Functions for Suscon Interlocking */\n    /**\n     * suscon_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    suscon_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_suscon().click_sig(\n            \"2W\", \n            this.state.status_mainLine.block_ridgewood_suscon_1,\n            this.state.status_mainLine.block_ridgewood_suscon_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_suscon: ctc.get_suscon().get_interlocking_status()});\n    }\n    // ---- END suscon_click_sig_2w() ----\n\n    /**\n     * suscon_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    suscon_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_suscon().click_sig(\n            \"2E\",\n            this.state.status_mainLine.block_suscon_mill_1,\n            this.state.status_mainLine.block_suscon_mill_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_suscon: ctc.get_suscon().get_interlocking_status()});\n    }\n    // ---- END suscon_click_sig_2e() ----\n\n    /**\n     * suscon_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    suscon_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_suscon().click_sig(\n            \"4W\",\n            this.state.status_mainLine.block_ridgewood_suscon_1,\n            this.state.status_mainLine.block_ridgewood_suscon_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_suscon: ctc.get_suscon().get_interlocking_status()});\n    }\n    // ---- END suscon_click_sig_4w() ----\n\n    /**\n     * suscon_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    suscon_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_suscon().click_sig(\n            \"4E\",\n            this.state.status_mainLine.block_suscon_mill_1,\n            this.state.status_mainLine.block_suscon_mill_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_suscon: ctc.get_suscon().get_interlocking_status()});\n    }\n    // ---- END suscon_click_sig_4e() ----\n\n    /**\n     * suscon_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    suscon_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_suscon().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_suscon: ctc.get_suscon().get_interlocking_status()});\n    }\n    // ---- END suscon_throw_sw_1() ----\n\n    /**\n     * suscon_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    suscon_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_suscon().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_suscon: ctc.get_suscon().get_interlocking_status()});\n    }\n    // ---- END suscon_throw_sw_3() ----\n    /* END Functions for Suscon Interlocking */\n\n\n    /* Functions for Mill Interlocking */\n    /**\n     * mill_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    mill_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_mill().click_sig(\n            \"2W\", \n            this.state.status_mainLine.block_suscon_mill_1,\n            this.state.status_mainLine.block_suscon_mill_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_mill: ctc.get_mill().get_interlocking_status()});\n    }\n    // ---- END mill_click_sig_2w() ----\n\n    /**\n     * mill_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    mill_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_mill().click_sig(\n            \"2E\", \n            this.state.status_mainLine.block_mill_westSecaucus_1,\n            this.state.status_mainLine.block_mill_westSecaucus_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_mill: ctc.get_mill().get_interlocking_status()});\n    }\n    // ---- END mill_click_sig_2e() ----\n\n    /**\n     * mill_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    mill_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_mill().click_sig(\n            \"4W\", \n            this.state.status_mainLine.block_suscon_mill_1,\n            this.state.status_mainLine.block_suscon_mill_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_mill: ctc.get_mill().get_interlocking_status()});\n    }\n    // ---- END mill_click_sig_4w() ----\n\n    /**\n     * mill_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    mill_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_mill().click_sig(\n            \"4E\", \n            this.state.status_mainLine.block_mill_westSecaucus_1,\n            this.state.status_mainLine.block_mill_westSecaucus_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_mill: ctc.get_mill().get_interlocking_status()});\n    }\n    // ---- END mill_click_sig_4e() ----\n\n    /**\n     * mill_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    mill_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_mill().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_mill: ctc.get_mill().get_interlocking_status()});\n    }\n    // ---- END mill_throw_sw_1() ----\n\n    /**\n     * mill_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    mill_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_mill().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_mill: ctc.get_mill().get_interlocking_status()});\n    }\n    // ---- END mill_throw_sw_3() ----\n    /* END Functions for Mill Interlocking */\n\n\n    /* Functions for West Secaucus Interlocking */\n    /**\n     * westSecaucus_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    westSecaucus_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_westSecaucus().click_sig(\n            \"2W\", \n            this.state.status_mainLine.block_mill_westSecaucus_1,\n            this.state.status_mainLine.block_mill_westSecaucus_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status()});\n    }\n    // ---- END westSecaucus_click_sig_2w() ----\n\n    /**\n     * westSecaucus_click_sig_2e()\n     * @summary The event handler for Signal #2e\n     */\n    westSecaucus_click_sig_2e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_westSecaucus().click_sig(\n            \"2E\", \n            this.state.status_mainLine.block_westSecaucus_laurel_1,\n            this.state.status_mainLine.block_westSecaucus_laurel_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status()});\n    }\n    // ---- END westSecaucus_click_sig_2e() ----\n\n    /**\n     * westSecaucus_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    westSecaucus_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_westSecaucus().click_sig(\n            \"4W\", \n            this.state.status_mainLine.block_mill_westSecaucus_1,\n            this.state.status_mainLine.block_mill_westSecaucus_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status()});\n    }\n    // ---- END westSecaucus_click_sig_4w() ----\n\n    /**\n     * westSecaucus_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    westSecaucus_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_westSecaucus().click_sig(\n            \"4E\", \n            this.state.status_mainLine.block_westSecaucus_laurel_1,\n            this.state.status_mainLine.block_westSecaucus_laurel_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status()});\n    }\n    // ---- END westSecaucus_click_sig_4e() ----\n\n    /**\n     * westSecaucus_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    westSecaucus_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_westSecaucus().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status()});\n    }\n    // ---- END westSecaucus_throw_sw_1() ----\n\n    /**\n     * westSecaucus_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    westSecaucus_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_westSecaucus().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_westSecaucus: ctc.get_westSecaucus().get_interlocking_status()});\n    }\n    // ---- END westSecaucus_throw_sw_3() ----\n    /* END Functions for West Secaucus Interlocking */\n\n\n    /* Functions for Laurel Interlocking */\n    /**\n     * laurel_click_sig_2w()\n     * @summary The event handler for Signal #2w\n     */\n    laurel_click_sig_2w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_2w(\n            this.state.status_mainLine.block_hx_laurel_2,\n            this.state.status_mainLine.block_westSecaucus_laurel_1,\n            this.state.status_mainLine.block_hx_laurel_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_2w() ----\n\n    /**\n     * laurel_click_sig_4w()\n     * @summary The event handler for Signal #4w\n     */\n    laurel_click_sig_4w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_4w(\n            this.state.status_mainLine.block_hx_laurel_2,\n            this.state.status_mainLine.block_westSecaucus_laurel_1,\n            this.state.status_mainLine.block_hx_laurel_1\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_4w() ----\n\n    /**\n     * laurel_click_sig_8w()\n     * @summary The event handler for Signal #8w\n     */\n    laurel_click_sig_8w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_8w(\n            this.state.status_mainLine.block_hx_laurel_2,\n            this.state.status_mainLine.block_westSecaucus_laurel_1,\n            this.state.status_mainLine.block_hx_laurel_1,\n            this.state.status_mainLine.block_westSecaucus_laurel_2\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_8w() ----\n\n    /**\n     * laurel_click_sig_10w()\n     * @summary The event handler for Signal #10w\n     */\n    laurel_click_sig_10w = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_10w(\n            this.state.status_mainLine.block_hx_laurel_2,\n            this.state.status_mainLine.block_westSecaucus_laurel_1,\n            this.state.status_mainLine.block_hx_laurel_1,\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_10w() ----\n\n    /**\n     * laurel_click_sig_6e()\n     * @summary The event handler for Signal #6e\n     */\n    laurel_click_sig_6e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_6e(\n            this.state.status_mainLine.block_westEnd_laurel_1,\n            this.state.status_mainLine.block_westEnd_laurel_2,\n            this.state.status_mainLine.block_westEnd_laurel_3,\n            this.state.status_mainLine.block_westEnd_laurel_4\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_6e() ----\n\n    /**\n     * laurel_click_sig_12e()\n     * @summary The event handler for Signal #12e\n     */\n    laurel_click_sig_12e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_12e(\n            this.state.status_mainLine.block_westEnd_laurel_1,\n            this.state.status_mainLine.block_westEnd_laurel_2,\n            this.state.status_mainLine.block_westEnd_laurel_3,\n            this.state.status_mainLine.block_westEnd_laurel_4\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_12e() ----\n\n    /**\n     * laurel_click_sig_4e()\n     * @summary The event handler for Signal #4e\n     */\n    laurel_click_sig_4e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_4e(\n            this.state.status_mainLine.block_westEnd_laurel_1,\n            this.state.status_mainLine.block_westEnd_laurel_2,\n            this.state.status_mainLine.block_westEnd_laurel_3,\n            this.state.status_mainLine.block_westEnd_laurel_4\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_4e() ----\n\n    /**\n     * laurel_click_sig_8e()\n     * @summary The event handler for Signal #8e\n     */\n    laurel_click_sig_8e = () => {\n        // Get the backend function for the corresponding signal\n        // Passing reference the next blocks\n        ctc.get_laurel().click_sig_8e(\n            this.state.status_mainLine.block_westEnd_laurel_4\n        );\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_click_sig_8e() ----\n\n    /**\n     * laurel_throw_sw_1()\n     * @summary The event handler for switch #1\n     */\n    laurel_throw_sw_1 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_laurel().throw_sw_1();\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_throw_sw_1() ----\n\n    /**\n     * laurel_throw_sw_3()\n     * @summary The event handler for switch #3\n     */\n    laurel_throw_sw_3 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_laurel().throw_sw_3();\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_throw_sw_3() ----\n\n    /**\n     * laurel_throw_sw_7()\n     * @summary The event handler for switch #7\n     */\n    laurel_throw_sw_7 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_laurel().throw_sw_7();\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_throw_sw_7() ----\n\n    /**\n     * laurel_throw_sw_11()\n     * @summary The event handler for switch #11\n     */\n    laurel_throw_sw_11 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_laurel().throw_sw_11();\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_throw_sw_11() ----\n\n    /**\n     * laurel_throw_sw_13()\n     * @summary The event handler for switch #13\n     */\n    laurel_throw_sw_13 = () => {\n        // Get the backend function for the corresponding switch\n        ctc.get_laurel().throw_sw_13();\n        // Set the state of the Interlocking\n        this.setState({status_laurel: ctc.get_laurel().get_interlocking_status()});\n    }\n    // ---- END laurel_throw_sw_13() ----\n    /* END Functions for Laurel Interlocking */\n}\n\n// Export the panel to be drawn on the screen\nexport default MainLine;"]},"metadata":{},"sourceType":"module"}