{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/Laurel.jsx\";\n\n/**\n * @file Laurel.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Laurel Interlocking\n *\n * Extends the React Component Class and is the UI part of the Laurel Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n// Import React Component\nimport React, { Component } from 'react'; // Import CSS Style Sheet\n\nimport '../../../css/Main_Line/laurel.css'; // Import Images\n// Switch Images\n// Images for a 135 Crossover\n\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png'; // Images for a 225 Crossover\n\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png'; // Signal Images\n\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png'; // Color Constants For Drawing Routes\n\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n/**\n * The React JSX Component Class for the Laurel Interlocking\n * \n * This class is a JSX React Component for the Laurel Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\n\nclass Laurel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Switch Status\n      sw_1: this.props.status.sw_1,\n      sw_3: this.props.status.sw_3,\n      sw_7: this.props.status.sw_7,\n      sw_9: this.props.status.sw_9,\n      sw_11: this.props.status.sw_11,\n      sw_13: this.props.status.sw_13,\n      // Image File for the switch - Will change depending on route\n      sw_1_src: CX_135,\n      sw_3_src: CX_135,\n      sw_7_src: CX_225,\n      sw_11_src: CX_225,\n      sw_13_src: CX_135,\n      // Image File for the signals - Will change depending on route\n      sig_2w_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_8w_src: SIG_W,\n      sig_10w_src: SIG_W,\n      sig_4e_src: SIG_E,\n      sig_6e_src: SIG_E,\n      sig_8e_src: SIG_E,\n      sig_12e_src: SIG_E,\n      // Colors for tail tracks - Will change depending on route\n      tail_3_e: Empty,\n      tail_1_e: Empty,\n      tail_2_e: Empty,\n      tail_4_e: Empty,\n      tail_3_center: Empty,\n      tail_3_w: Empty,\n      tail_1_w: Empty,\n      tail_2_w: Empty,\n      tail_4_w: Empty,\n      // Information For Interlocking Routes\n      routes: this.props.status.routes,\n      routed_1: this.props.status.routed_1,\n      routed_2: this.props.status.routed_2,\n      routed_3: this.props.status.routed_3,\n      routed_4: this.props.status.routed_4,\n      occupied_1: this.props.status.occupied_1,\n      occupied_2: this.props.status.occupied_2,\n      occupied_3: this.props.status.occupied_3,\n      occupied_4: this.props.status.occupied_4\n    };\n\n    this.set_switch_img = () => {\n      // Set the state of SW #1\n      // SW #1 Reversed\n      if (this.state.sw_1) {\n        this.state.sw_1_src = CX_135_R;\n      } // SW #1 Normal\n      else {\n          this.state.sw_1_src = CX_135;\n        } // Set the state of SW #3\n      // SW #3 Reversed\n\n\n      if (this.state.sw_3) {\n        this.state.sw_3_src = CX_135_R;\n      } // SW #3 Normal\n      else {\n          this.state.sw_3_src = CX_135;\n        } // Set the state of SW #7\n      // SW #7 Reversed\n\n\n      if (this.state.sw_7) {\n        this.state.sw_7_src = CX_225_R;\n      } // SW #7 Normal\n      else {\n          this.state.sw_7_src = CX_225;\n        } // Set the state of SW #9\n      // SW #9 Reversed\n\n\n      if (this.state.sw_9) {\n        this.state.sw_9_src = CX_135_R;\n      } // SW #9 Normal\n      else {\n          this.state.sw_9_src = CX_135;\n        } // Set the state of SW #11\n      // SW #11 Reversed\n\n\n      if (this.state.sw_11) {\n        this.state.sw_11_src = CX_225_R;\n      } // SW #11 Normal\n      else {\n          this.state.sw_11_src = CX_225;\n        } // Set the state of SW #13\n      // SW #13 Reversed\n\n\n      if (this.state.sw_13) {\n        this.state.sw_13_src = CX_135_R;\n      } // SW #13 Normal\n      else {\n          this.state.sw_13_src = CX_135;\n        }\n    };\n  }\n\n  /**\n   * componentWillReceiveProps()\n   * @summary Function that updates the state of the component\n   * \n   * The data that is being changed is passed down from the CTC classes in the simulation backend\n   * \n   * @param nextProps, the new data to set the component state too\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sw_1: nextProps.status.sw_1,\n      sw_3: nextProps.status.sw_3,\n      sw_7: nextProps.status.sw_7,\n      sw_11: nextProps.status.sw_11,\n      sw_13: nextProps.status.sw_13,\n      routed_1: nextProps.status.routed_1,\n      routed_2: nextProps.status.routed_2,\n      routed_3: nextProps.status.routed_3,\n      routed_4: nextProps.status.routed_4,\n      occupied_1: nextProps.status.occupied_1,\n      occupied_2: nextProps.status.occupied_2,\n      occupied_3: nextProps.status.occupied_3,\n      occupied_4: nextProps.status.occupied_4,\n      routes: nextProps.status.routes\n    });\n  } // ---- END componentWillReceiveProps() ----\n\n  /**\n   * render()\n   * @summary standard React function that draws the interlocking to the screen\n   */\n\n\n  render() {\n    // Clear all the drawings from the interlocking so if a train clears the route is gone\n    this.reset_drawings(); // Set the switch images based off the state of each crossover\n\n    this.set_switch_img(); // Draw all the current routes in the interlocking\n\n    this.set_route_drawings(); // Returns the HTML to draw the interlocking and it's current state to the screen\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"laurel_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"LAUREL\"), React.createElement(\"div\", {\n      className: \"laurel_milepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"MP 4.3\"), React.createElement(\"div\", {\n      className: \"b_laurel_3_west\",\n      style: {\n        background: this.state.tail_3_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"b_laurel_2_west\",\n      style: {\n        background: this.state.tail_1_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_laurel_2_west\",\n      style: {\n        background: this.state.tail_2_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_laurel_4_west\",\n      style: {\n        background: this.state.tail_4_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"laurel_SW_1\",\n      onClick: this.props.throw_sw_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_SW_3\",\n      onClick: this.props.throw_sw_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_SW_7\",\n      onClick: this.props.throw_sw_7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_7_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_SW_11\",\n      onClick: this.props.throw_sw_11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_11_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_SW_13\",\n      onClick: this.props.throw_sw_13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_13_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"m_laurel_3_center\",\n      style: {\n        background: this.state.tail_3_center\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_laurel_3_east\",\n      style: {\n        background: this.state.tail_3_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_laurel_1_east\",\n      style: {\n        background: this.state.tail_1_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_laurel_2_east\",\n      style: {\n        background: this.state.tail_2_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_laurel_4_east\",\n      style: {\n        background: this.state.tail_4_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"laurel_sig_10w\",\n      onClick: this.props.click_sig_10w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_10w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_sig_2w\",\n      onClick: this.props.click_sig_2w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_sig_4w\",\n      onClick: this.props.click_sig_4w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_sig_8w\",\n      onClick: this.props.click_sig_8w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_8w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_sig_4e\",\n      onClick: this.props.click_sig_4e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_sig_6e\",\n      onClick: this.props.click_sig_6e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_6e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_sig_8e\",\n      onClick: this.props.click_sig_8e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_8e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"laurel_sig_12e\",\n      onClick: this.props.click_sig_12e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_12e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })));\n  } // ---- END render() ----\n\n  /**\n   * set_route_drawings()\n   * @summary Sets the drawing for the route through the interlocking\n   * \n   * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n   * will change depending on if the interlocking is occupied or not.\n   * \n   * There are a lot of possible drawings for this interlocking, which is why the function is so long, I'm not sure if there\n   * is a quicker or faster way to accomplish what this function does\n   */\n\n\n  set_route_drawings() {\n    let color_1 = Empty;\n    let color_2 = Empty;\n    let color_3 = Empty;\n    let color_4 = Empty; // Set Track Colors \n    // If each track has a route\n\n    if (this.state.routed_1) {\n      color_1 = Green;\n    }\n\n    if (this.state.routed_2) {\n      color_2 = Green;\n    }\n\n    if (this.state.routed_3) {\n      color_3 = Green;\n    }\n\n    if (this.state.routed_4) {\n      color_4 = Green;\n    } // If each track is occupied\n\n\n    if (this.state.occupied_1) {\n      color_1 = Red;\n    }\n\n    if (this.state.occupied_2) {\n      color_2 = Red;\n    }\n\n    if (this.state.occupied_3) {\n      color_3 = Red;\n    }\n\n    if (this.state.occupied_4) {\n      color_4 = Red;\n    } // Loop Through All The Routes\n\n\n    for (let i = 0; i < this.state.routes.length; i++) {\n      if (this.state.routes[i] === \"W_1_1__|__2_hx_laurel\" || this.state.routes[i] === \"E_1_1__|__1_laurel_westEnd\") {\n        // Setting Tail Track Color\n        this.state.tail_1_e = color_1;\n        this.state.tail_1_w = color_1;\n\n        if (this.state.occupied_1) {\n          // Switches\n          // Crossovers that could change based off of Track #2\n          if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n            // Track 2 Routed\n            if (this.state.routed_2) {\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n            } // Track 2 Occupied\n            else if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Occupied_Both;\n                this.state.sw_7_src = CX_225_Occupied_Both;\n              }\n          } // Nothing On Track 2\n          else {\n              this.state.sw_1_src = CX_135_Occupied_Top;\n              this.state.sw_7_src = CX_225_Occupied_Top;\n            } // Crossovers that could changed based off of Track #3\n\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track 3 Routed\n            if (this.state.routed_3) {\n              this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_11_src = CX_225_Lined_Top_Occupied_Bottom;\n            } // Track 3 Occupied\n            else if (this.state.occupied_3) {\n                this.state.sw_3_src = CX_135_Occupied_Both;\n                this.state.sw_11_src = CX_225_Occupied_Both;\n              }\n          } // Nothing on Track 3\n          else {\n              this.state.sw_3_src = CX_135_Occupied_Bottom;\n              this.state.sw_11_src = CX_225_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          // Crossovers that could change based off of Track #2\n          if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\") || this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n            // Track 2 Routed\n            if (this.state.routed_2) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_7_src = CX_225_Lined_Both;\n            } // Track 2 Occupied\n            else if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n              }\n          } else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n            // Track 2 Routed\n            if (this.state.routed_4) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_7_src = CX_225_Lined_Both;\n            } // Track 2 Occupied\n            else if (this.state.occupied_4) {\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing On Track 2\n          else {\n              this.state.sw_1_src = CX_135_Lined_Top;\n              this.state.sw_7_src = CX_225_Lined_Top;\n            } // Crossovers that could changed based off of Track #3\n\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track 3 Routed\n            if (this.state.routed_3) {\n              this.state.sw_3_src = CX_135_Lined_Both;\n              this.state.sw_11_src = CX_225_Lined_Both;\n            } // Track 3 Occupied\n            else if (this.state.occupied_3) {\n                this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                this.state.sw_11_src = CX_225_Occupied_Top_Lined_Bottom;\n              }\n          } // Nothing on Track 3\n          else {\n              this.state.sw_3_src = CX_135_Lined_Bottom;\n              this.state.sw_11_src = CX_225_Lined_Bottom;\n            } // Signals\n          // West Bound Signals\n\n\n          if (this.state.routes[i] === \"W_1_1__|__2_hx_laurel\") {\n            this.state.sig_2w_src = SIG_W_Clear;\n            this.state.sig_12e_src = SIG_E_Stop;\n          } // East Bound Signals\n          else {\n              this.state.sig_2w_src = SIG_W_Stop;\n              this.state.sig_12e_src = SIG_E_Clear;\n            }\n        }\n      } else if (this.state.routes[i] === \"W_3_3__|__3_hx_laurel\" || this.state.routes[i] === \"E_3_3__|__3_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_3;\n        this.state.tail_3_center = color_3;\n        this.state.tail_3_w = color_3; // If The Route Is Occupied\n\n        if (this.state.occupied_3) {\n          // Switches\n          this.state.sw_11_src = CX_225_Occupied_Top; // Crossovers that could change based of the status of other Track #1\n\n          if (this.state.routes.includes(\"W_4_1__|__2_hx_laurel\")) {\n            // Track #1 Is Occupied\n            if (this.state.occupied_4) {\n              this.state.sw_3_src = CX_135_Occupied_Both;\n            } // Track #1 Is Routed\n            else if (this.state.routed_4) {\n                this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n              }\n          } else if (this.state.routes.includes(\"E_1_4__|__4_laurel_westEnd\")) {\n            // Track #1 Is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_3_src = CX_135_Occupied_Both;\n            } // Track #1 Is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n              }\n          } else {\n            this.state.sw_3_src = CX_135_Occupied_Top;\n          } // Signals\n\n\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_11_src = CX_225_Lined_Top; // Crossovers that could change based of the status of other Track #1\n\n            if (this.state.routes.includes(\"W_4_1__|__2_hx_laurel\")) {\n              // Track #1 Is Occupied\n              if (this.state.occupied_4) {\n                this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n              } // Track #1 Is Routed\n              else if (this.state.routed_4) {\n                  this.state.sw_3_src = CX_135_Lined_Both;\n                }\n            } else if (this.state.routes.includes(\"E_1_4__|__4_laurel_westEnd\")) {\n              // Track #1 Is Occupied\n              if (this.state.occupied_1) {\n                this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n              } // Track #1 Is Routed\n              else if (this.state.routed_1) {\n                  this.state.sw_3_src = CX_135_Lined_Both;\n                }\n            } else {\n              this.state.sw_3_src = CX_135_Lined_Top;\n            } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_3_3__|__3_hx_laurel\") {\n              this.state.sig_10w_src = SIG_W_Clear;\n              this.state.sig_6e_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_10w_src = SIG_W_Stop;\n                this.state.sig_6e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_2_2__|__2_westSecaucus_laurel\" || this.state.routes[i] === \"E_2_2__|__2_laurel_westEnd\") {\n        // Set Tail Track Color\n        this.state.tail_2_e = color_2;\n        this.state.tail_2_w = color_2; // If The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          // Crossovers that could change based off of Tack #1\n          if (this.state.routes.includes(\"W_1_1__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n            // Track 1 Routed\n            if (this.state.routed_1) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n            } // Track 1 Occupied\n            else if (this.state.occupied_1) {\n                this.state.sw_1_src = CX_135_Occupied_Both;\n                this.state.sw_7_src = CX_225_Occupied_Both;\n              }\n          } else if (this.state.routes.includes(\"W_3_1__|__1_hx_laurel\")) {\n            if (this.state.routed_3) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n            } else if (this.state.occupied_3) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            }\n          } else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n            if (this.state.routed_1) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n            } else if (this.state.occupied_1) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            }\n          } else if (this.state.routes.includes(\"W_1_3__|__3_hx_laurel\")) {\n            if (this.state.routed_1) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n            } else if (this.state.occupied_1) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            }\n          } else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n            if (this.state.routed_3) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n            } else if (this.state.occupied_3) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            }\n          } // Nothing Track 1\n          else {\n              this.state.sw_1_src = CX_135_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Occupied_Bottom;\n            } // Crossovers that could change based off of Track #4\n\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track 4 Routed\n            if (this.state.routed_4) {\n              this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track 4 Occupied\n            else if (this.state.occupied_4) {\n                this.state.sw_13_src = CX_135_Occupied_Both;\n              }\n          } // Nothing on Track 3\n          else {\n              this.state.sw_13_src = CX_135_Occupied_Top;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          // Crossovers that could change based off of Tack #1\n          if (this.state.routes.includes(\"W_1_1__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n            // Track 1 Routed\n            if (this.state.routed_1) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_7_src = CX_225_Lined_Both;\n            } // Track 1 Occupied\n            else if (this.state.occupied_1) {\n                this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              }\n          } else if (this.state.routes.includes(\"W_3_1__|__1_hx_laurel\")) {\n            if (this.state.routed_3) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_7_src = CX_225_Lined_Both;\n            } else if (this.state.occupied_3) {\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n            }\n          } else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n            if (this.state.routed_1) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_7_src = CX_225_Lined_Both;\n            } else if (this.state.occupied_1) {\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n            }\n          } else if (this.state.routes.includes(\"W_1_3__|__3_hx_laurel\")) {\n            if (this.state.routed_1) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n            } else if (this.state.occupied_1) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            }\n          } else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n            if (this.state.routed_1) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n            } else if (this.state.occupied_1) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            }\n          } // Nothing Track 1\n          else {\n              this.state.sw_1_src = CX_135_Lined_Bottom;\n              this.state.sw_7_src = CX_225_Lined_Bottom;\n            } // Crossovers that could changed based off of Track #4\n\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track 4 Routed\n            if (this.state.routed_4) {\n              this.state.sw_13_src = CX_135_Lined_Both;\n            } // Track 4 Occupied\n            else if (this.state.occupied_4) {\n                this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing on Track 3\n          else {\n              this.state.sw_13_src = CX_135_Lined_Top;\n            } // Signals\n          // West Bound Signals\n\n\n          if (this.state.routes[i] === \"W_2_2__|__2_westSecaucus_laurel\") {\n            this.state.sig_4w_src = SIG_W_Clear;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // East Bound Signals\n          else {\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_4e_src = SIG_E_Clear;\n            }\n        }\n      } else if (this.state.routes[i] === \"W_4_4__|__4_westSecaucus_laurel\" || this.state.routes[i] === \"E_4_4__|__4_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_4_e = color_4;\n        this.state.tail_4_w = color_4; // If The Route Is Occupied\n\n        if (this.state.occupied_4) {\n          // Switches\n          // Crossovers that could change based on the status of Track #4\n          if (this.state.routes.includes(\"E_3_2__|__2_laurel_westEnd\")) {\n            // Track #4 Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_13_src = CX_135_Occupied_Both;\n            } // Track #4 Routed\n            else if (this.state.routed_3) {\n                this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track #4\n          else {\n              this.state.sw_13_src = CX_135_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n        } // The Route is NOT Occupied\n        else {\n            // Switches\n            // Crossovers that could change based on the status of Track #4\n            if (this.state.routes.includes(\"E_3_2__|__2_laurel_westEnd\")) {\n              // Track #4 Occupied\n              if (this.state.occupied_3) {\n                this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n              } // Track #4 Routed\n              else if (this.state.routed_3) {\n                  this.state.sw_13_src = CX_135_Lined_Both;\n                }\n            } // Nothing Track #4\n            else {\n                this.state.sw_13_src = CX_135_Lined_Bottom;\n              } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_4_4__|__4_westSecaucus_laurel\") {\n              this.state.sig_8w_src = SIG_W_Clear;\n              this.state.sig_8e_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_8w_src = SIG_W_Stop;\n                this.state.sig_8e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_3_1__|__1_hx_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_3;\n        this.state.tail_1_w = color_3; // The Route Is Occupied\n\n        if (this.state.occupied_3) {\n          // Switches\n          this.state.sw_3_src = CX_135_Occupied_Bottom;\n          this.state.sw_11_src = CX_225_R_Occupied;\n\n          if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n            if (this.state.occupied_4) {\n              this.state.sw_1_src = CX_135_Occupied_Bottom;\n              this.state.sw_7_src = CX_225_Occupied_Bottom;\n            } else if (this.state.routed_4) {\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n            }\n          } else {\n            this.state.sw_1_src = CX_135_Occupied_Top;\n            this.state.sw_7_src = CX_225_Occupied_Top;\n          } // Signals\n\n\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = CX_135_Lined_Bottom;\n            this.state.sw_11_src = CX_225_R_Lined; // Crossovers that could change based on other tracks\n\n            if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n              // Other track is Occupied\n              if (this.state.occupied_4) {\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n              } // Other track is Routed\n              else if (this.state.routed_4) {\n                  this.state.sw_1_src = CX_135_Lined_Both;\n                  this.state.sw_7_src = CX_225_Lined_Both;\n                }\n            } else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n              // Other track is Occupied\n              if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n              } // Other track is Routed\n              else if (this.state.routed_2) {\n                  this.state.sw_1_src = CX_135_Lined_Both;\n                  this.state.sw_7_src = CX_225_Lined_Both;\n                }\n            } else {\n              this.state.sw_1_src = CX_135_Lined_Top;\n              this.state.sw_7_src = CX_225_Lined_Top;\n            } // Signals\n\n\n            this.state.sig_10w_src = SIG_W_Clear;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_1_3__|__3_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_1;\n        this.state.tail_1_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_3_src = CX_135_Occupied_Bottom;\n          this.state.sw_11_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Top;\n          this.state.sw_7_src = CX_225_Occupied_Top; // Signals\n\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = CX_135_Lined_Bottom;\n            this.state.sw_11_src = CX_225_R_Lined;\n            this.state.sw_1_src = CX_135_Lined_Top;\n            this.state.sw_7_src = CX_225_Lined_Top; // Signals\n\n            this.state.sig_10w_src = SIG_W_Stop;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Clear;\n          }\n      } else if (this.state.routes[i] === \"W_3_2__|__2_westSecaucus_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_3;\n        this.state.tail_2_w = color_3; // The Route Is Occupied\n\n        if (this.state.occupied_3) {\n          // Switches\n          this.state.sw_11_src = CX_225_R_Occupied;\n          this.state.sw_7_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Signals\n\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_11_src = CX_225_R_Lined;\n            this.state.sw_7_src = CX_225_R_Lined;\n            this.state.sw_1_src = CX_135_Lined_Bottom; // Signals\n\n            this.state.sig_10w_src = SIG_W_Clear;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_2_3__|__3_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_11_src = CX_225_R_Occupied;\n          this.state.sw_7_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Signals\n\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_11_src = CX_225_R_Lined;\n            this.state.sw_7_src = CX_225_R_Lined;\n            this.state.sw_1_src = CX_135_Lined_Bottom; // Signals\n\n            this.state.sig_10w_src = SIG_W_Stop;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Clear;\n          }\n      } else if (this.state.routes[i] === \"W_1_2__|__2_westSecaucus_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_1_e = color_1;\n        this.state.tail_2_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_7_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Switches\n\n          this.state.sw_7_src = CX_225_R_Lined;\n          this.state.sw_1_src = CX_135_Lined_Bottom; // Crossovers that could change based of Track #3 Status\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Occupied Track 3\n            if (this.state.occupied_3) {\n              this.state.sw_11_src = CX_225_Occupied_Both;\n            } // Lined Track 3\n            else if (this.state.routed_3) {\n                this.state.sw_11_src = CX_225_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track 3\n          else {\n              this.state.sw_11_src = CX_225_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_7_src = CX_225_R_Lined;\n          this.state.sw_1_src = CX_135_Lined_Bottom; // Crossovers that could change based of Track #3 Status\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Occupied Track 3\n            if (this.state.occupied_3) {\n              this.state.sw_11_src = CX_225_Occupied_Top_Lined_Bottom;\n            } // Lined Track 3\n            else if (this.state.routed_3) {\n                this.state.sw_11_src = CX_225_Lined_Both;\n              }\n          } // Nothing Track 3\n          else {\n              this.state.sw_11_src = CX_225_Lined_Bottom;\n            } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Clear;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"E_2_1__|__1_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_1_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_7_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Switches\n\n          this.state.sw_7_src = CX_225_R_Lined;\n          this.state.sw_1_src = CX_135_Lined_Bottom; // Crossovers that could change based of Track #3 Status\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Occupied Track 3\n            if (this.state.occupied_3) {\n              this.state.sw_11_src = CX_225_Occupied_Both;\n            } // Lined Track 3\n            else if (this.state.routed_3) {\n                this.state.sw_11_src = CX_225_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track 3\n          else {\n              this.state.sw_11_src = CX_225_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_7_src = CX_225_R_Lined;\n          this.state.sw_1_src = CX_135_Lined_Bottom; // Crossovers that could change based of Track #3 Status\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Occupied Track 3\n            if (this.state.occupied_3) {\n              this.state.sw_11_src = CX_225_Occupied_Top_Lined_Bottom;\n            } // Lined Track 3\n            else if (this.state.routed_3) {\n                this.state.sw_11_src = CX_225_Lined_Both;\n              }\n          } // Nothing Track 3\n          else {\n              this.state.sw_11_src = CX_225_Lined_Bottom;\n            } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Clear;\n        }\n      } else if (this.state.routes[i] === \"W_1_3__|__3_hx_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_1_e = color_1;\n        this.state.tail_3_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_11_src = CX_225_Occupied_Bottom;\n          this.state.sw_3_src = CX_135_R_Occupied; // Crossovers that could change based off of Track #3 status\n\n          if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n            // Other Track Is Occupied\n            if (this.state.occupied_2) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            } // Other Track Routed\n            else if (this.state.routed_2) {\n                this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              }\n          } // Another Possible Route\n          else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n              // Other Track Is Occupied\n              if (this.state.occupied_4) {\n                this.state.sw_1_src = CX_135_Occupied_Both;\n                this.state.sw_7_src = CX_225_Occupied_Both;\n              } // Other Track Routed\n              else if (this.state.routed_4) {\n                  this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                  this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                }\n            } else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n              // Other Track Is Occupied\n              if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Occupied_Both;\n                this.state.sw_7_src = CX_225_Occupied_Both;\n              } // Other Track Routed\n              else if (this.state.routed_2) {\n                  this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                  this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                }\n            } // Nothing On The Other Track\n            else {\n                this.state.sw_1_src = CX_135_Occupied_Top;\n                this.state.sw_7_src = CX_225_Occupied_Top;\n              } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_11_src = CX_225_Lined_Bottom;\n            this.state.sw_3_src = CX_135_R_Lined; // Crossovers that could change based off of Track #3 status\n\n            if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n              // Other Track Is Occupied\n              if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n              } // Other Track Routed\n              else if (this.state.routed_2) {\n                  this.state.sw_1_src = CX_135_Lined_Both;\n                  this.state.sw_7_src = CX_225_Lined_Both;\n                }\n            } // Another Possible Route\n            else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                // Other Track Is Occupied\n                if (this.state.occupied_4) {\n                  this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                  this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                } // Other Track Routed\n                else if (this.state.routed_4) {\n                    this.state.sw_1_src = CX_135_Lined_Both;\n                    this.state.sw_7_src = CX_225_Lined_Both;\n                  }\n              } else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                // Other Track Is Occupied\n                if (this.state.occupied_2) {\n                  this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                  this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                } // Other Track Routed\n                else if (this.state.routed_2) {\n                    this.state.sw_1_src = CX_135_Lined_Both;\n                    this.state.sw_7_src = CX_225_Lined_Both;\n                  }\n              } // Nothing On The Other Track\n              else {\n                  this.state.sw_1_src = CX_135_Lined_Top;\n                  this.state.sw_7_src = CX_225_Lined_Top;\n                } // Signals\n\n\n            this.state.sig_2w_src = SIG_W_Clear;\n            this.state.sig_10w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_3_1__|__1_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_1_e = color_3;\n        this.state.tail_3_w = color_3; // The Route Is Occupied\n\n        if (this.state.occupied_3) {\n          // Switches\n          this.state.sw_11_src = CX_225_Occupied_Bottom;\n          this.state.sw_3_src = CX_135_R_Occupied; // Crossovers that could change based off of Track #3 status\n\n          if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n            // Other Track Is Occupied\n            if (this.state.occupied_2) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_7_src = CX_225_Occupied_Both;\n            } // Other Track Routed\n            else if (this.state.routed_2) {\n                this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              }\n          } // Another Possible Route\n          else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n              // Other Track Is Occupied\n              if (this.state.occupied_4) {\n                this.state.sw_1_src = CX_135_Occupied_Both;\n                this.state.sw_7_src = CX_225_Occupied_Both;\n              } // Other Track Routed\n              else if (this.state.routed_4) {\n                  this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                  this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                }\n            } else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n              // Other Track Is Occupied\n              if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Occupied_Both;\n                this.state.sw_7_src = CX_225_Occupied_Both;\n              } // Other Track Routed\n              else if (this.state.routed_2) {\n                  this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                  this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                }\n            } // Nothing On The Other Track\n            else {\n                this.state.sw_1_src = CX_135_Occupied_Top;\n                this.state.sw_7_src = CX_225_Occupied_Top;\n              } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_11_src = CX_225_Lined_Bottom;\n            this.state.sw_3_src = CX_135_R_Lined; // Crossovers that could change based off of Track #3 status\n\n            if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n              // Other Track Is Occupied\n              if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n              } // Other Track Routed\n              else if (this.state.routed_2) {\n                  this.state.sw_1_src = CX_135_Lined_Both;\n                  this.state.sw_7_src = CX_225_Lined_Both;\n                }\n            } // Another Possible Route\n            else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                // Other Track Is Occupied\n                if (this.state.occupied_4) {\n                  this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                  this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                } // Other Track Routed\n                else if (this.state.routed_4) {\n                    this.state.sw_1_src = CX_135_Lined_Both;\n                    this.state.sw_7_src = CX_225_Lined_Both;\n                  }\n              } else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                // Other Track Is Occupied\n                if (this.state.occupied_2) {\n                  this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                  this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                } // Other Track Routed\n                else if (this.state.routed_2) {\n                    this.state.sw_1_src = CX_135_Lined_Both;\n                    this.state.sw_7_src = CX_225_Lined_Both;\n                  }\n              } // Nothing On The Other Track\n              else {\n                  this.state.sw_1_src = CX_135_Lined_Top;\n                  this.state.sw_7_src = CX_225_Lined_Top;\n                } // Signals\n\n\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_10w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Clear;\n            this.state.sig_12e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"W_2_1__|__2_hx_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_2;\n        this.state.tail_1_w = color_2;\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_1_src = CX_135_R_Occupied;\n          this.state.sw_7_src = CX_225_Occupied_Bottom; // Crossovers that could change based on the status of Track #3\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track #3 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_3_src = CX_135_Occupied_Both;\n            } // Track #3 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track #3\n          else {\n              this.state.sw_3_src = CX_135_Occupied_Bottom;\n            } // Crossovers that could change based on the status of Track #4\n\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track #4 is Occupied\n            if (this.state.occupied_4) {\n              this.state.sw_13_src = CX_135_Occupied_Both;\n            } // Track #4 is Routed\n            else if (this.state.routed_4) {\n                this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n              }\n          } // Nothing Track #4\n          else {\n              this.state.sw_13_src = CX_135_Occupied_Top;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_1_src = CX_135_R_Lined;\n          this.state.sw_7_src = CX_225_Lined_Bottom; // Crossovers that could change based on the status of Track #3\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track #3 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #3 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_3_src = CX_135_Lined_Both;\n              }\n          } // Nothing Track #3\n          else {\n              this.state.sw_3_src = CX_135_Lined_Bottom;\n            } // Crossovers that could change based on the status of Track #4\n\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track #4 is Occupied\n            if (this.state.occupied_4) {\n              this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n            } // Track #4 is Routed\n            else if (this.state.routed_4) {\n                this.state.sw_13_src = CX_135_Lined_Both;\n              }\n          } // Nothing Track #4\n          else {\n              this.state.sw_13_src = CX_135_Lined_Top;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Clear;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"E_1_2__|__2_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_1;\n        this.state.tail_1_w = color_1;\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_1_src = CX_135_R_Occupied;\n          this.state.sw_7_src = CX_225_Occupied_Bottom; // Crossovers that could change based on the status of Track #3\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track #3 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_3_src = CX_135_Occupied_Both;\n            } // Track #3 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track #3\n          else {\n              this.state.sw_3_src = CX_135_Occupied_Bottom;\n            } // Crossovers that could change based on the status of Track #4\n\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track #4 is Occupied\n            if (this.state.occupied_4) {\n              this.state.sw_13_src = CX_135_Occupied_Both;\n            } // Track #4 is Routed\n            else if (this.state.routed_4) {\n                this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n              }\n          } // Nothing Track #4\n          else {\n              this.state.sw_13_src = CX_135_Occupied_Top;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_1_src = CX_135_R_Lined;\n          this.state.sw_7_src = CX_225_Lined_Bottom; // Crossovers that could change based on the status of Track #3\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track #3 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #3 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_3_src = CX_135_Lined_Both;\n              }\n          } // Nothing Track #3\n          else {\n              this.state.sw_3_src = CX_135_Lined_Bottom;\n            } // Crossovers that could change based on the status of Track #4\n\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track #4 is Occupied\n            if (this.state.occupied_4) {\n              this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n            } // Track #4 is Routed\n            else if (this.state.routed_4) {\n                this.state.sw_13_src = CX_135_Lined_Both;\n              }\n          } // Nothing Track #4\n          else {\n              this.state.sw_13_src = CX_135_Lined_Top;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_12e_src = SIG_E_Clear;\n          this.state.sig_4e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"W_2_3__|__3_hx_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_2;\n        this.state.tail_3_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_7_src = CX_225_Occupied_Bottom;\n          this.state.sw_1_src = CX_135_R_Occupied;\n          this.state.sw_3_src = CX_135_R_Occupied; // Crossovers taht could changed based on the status of Track #4\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track #4 is Occupied\n            if (this.state.occupied_4) {\n              this.state.sw_13_src = CX_135_Occupied_Both;\n            } // Track #4 is Routed\n            else if (this.state.routed_4) {\n                this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n              }\n          } // Nothing Track #4\n          else {\n              this.state.sw_13_src = CX_135_Occupied_Top;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = CX_225_Lined_Bottom;\n            this.state.sw_1_src = CX_135_R_Lined;\n            this.state.sw_3_src = CX_135_R_Lined; // Crossovers taht could changed based on the status of Track #4\n\n            if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n              // Track #4 is Occupied\n              if (this.state.occupied_4) {\n                this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n              } // Track #4 is Routed\n              else if (this.state.routed_4) {\n                  this.state.sw_13_src = CX_135_Lined_Both;\n                }\n            } // Nothing Track #4\n            else {\n                this.state.sw_13_src = CX_135_Lined_Top;\n              } // Signals\n\n\n            this.state.sig_4w_src = SIG_W_Clear;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_10w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_3_2__|__2_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_3;\n        this.state.tail_3_w = color_3; // The Route Is Occupied\n\n        if (this.state.occupied_3) {\n          // Switches\n          this.state.sw_7_src = CX_225_Occupied_Bottom;\n          this.state.sw_1_src = CX_135_R_Occupied;\n          this.state.sw_3_src = CX_135_R_Occupied; // Crossovers taht could changed based on the status of Track #4\n\n          if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n            // Track #4 is Occupied\n            if (this.state.occupied_4) {\n              this.state.sw_13_src = CX_135_Occupied_Both;\n            } // Track #4 is Routed\n            else if (this.state.routed_4) {\n                this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n              }\n          } // Nothing Track #4\n          else {\n              this.state.sw_13_src = CX_135_Occupied_Top;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = CX_225_Lined_Bottom;\n            this.state.sw_1_src = CX_135_R_Lined;\n            this.state.sw_3_src = CX_135_R_Lined; // Crossovers taht could changed based on the status of Track #4\n\n            if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n              // Track #4 is Occupied\n              if (this.state.occupied_4) {\n                this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n              } // Track #4 is Routed\n              else if (this.state.routed_4) {\n                  this.state.sw_13_src = CX_135_Lined_Both;\n                }\n            } // Nothing Track #4\n            else {\n                this.state.sw_13_src = CX_135_Lined_Top;\n              } // Signals\n\n\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_10w_src = SIG_W_Stop;\n            this.state.sig_6e_src = SIG_E_Clear;\n            this.state.sig_12e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"W_4_2__|__2_westSecaucus_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_4_e = color_4;\n        this.state.tail_2_w = color_4;\n\n        if (this.state.occupied_4) {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Occupied; // Crossovers that could change based on the status of Track #1\n\n          if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Both;\n              this.state.sw_1_src = CX_135_Occupied_Both;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_7_src = CX_225_Occupied_Both;\n              this.state.sw_1_src = CX_135_Occupied_Both;\n            } // Track #1 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Both;\n              this.state.sw_1_src = CX_135_Occupied_Both;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track #1\n          else {\n              this.state.sw_7_src = CX_225_Occupied_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Lined; // Crossovers that could change based on the status of Track #1\n\n          if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Both;\n                this.state.sw_1_src = CX_135_Lined_Both;\n              }\n          } else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #1 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_7_src = CX_225_Lined_Both;\n                this.state.sw_1_src = CX_135_Lined_Both;\n              }\n          } else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Both;\n                this.state.sw_1_src = CX_135_Lined_Both;\n              }\n          } // Nothing Track #1\n          else {\n              this.state.sw_7_src = CX_225_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Lined_Bottom;\n            } // Signals\n\n\n          this.state.sig_8w_src = SIG_W_Clear;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"E_2_4__|__4_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_4_e = color_2;\n        this.state.tail_2_w = color_2;\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Occupied; // Crossovers that could change based on the status of Track #1\n\n          if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Both;\n              this.state.sw_1_src = CX_135_Occupied_Both;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_7_src = CX_225_Occupied_Both;\n              this.state.sw_1_src = CX_135_Occupied_Both;\n            } // Track #1 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Both;\n              this.state.sw_1_src = CX_135_Occupied_Both;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track #1\n          else {\n              this.state.sw_7_src = CX_225_Occupied_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Lined; // Crossovers that could change based on the status of Track #1\n\n          if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Both;\n                this.state.sw_1_src = CX_135_Lined_Both;\n              }\n          } else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #1 is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_7_src = CX_225_Lined_Both;\n                this.state.sw_1_src = CX_135_Lined_Both;\n              }\n          } else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n            // Track #1 is Occupied\n            if (this.state.occupied_1) {\n              this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            } // Track #1 is Routed\n            else if (this.state.routed_1) {\n                this.state.sw_7_src = CX_225_Lined_Both;\n                this.state.sw_1_src = CX_135_Lined_Both;\n              }\n          } // Nothing Track #1\n          else {\n              this.state.sw_7_src = CX_225_Lined_Bottom;\n              this.state.sw_1_src = CX_135_Lined_Bottom;\n            } // Signals\n\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Clear;\n          this.state.sig_8e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"W_4_1__|__2_hx_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_4_e = color_4;\n        this.state.tail_1_w = color_4; // The Route Is Occupied\n\n        if (this.state.occupied_4) {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Occupied;\n          this.state.sw_7_src = CX_225_Occupied_Bottom;\n          this.state.sw_1_src = CX_135_R_Occupied; // Crossovers that could change based on the state of Track #3\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track #3 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_3_src = CX_135_Occupied_Both;\n            } // Track #3 Is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track #3\n          else {\n              this.state.sw_3_src = CX_135_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_13_src = CX_135_R_Lined;\n            this.state.sw_7_src = CX_225_Lined_Bottom;\n            this.state.sw_1_src = CX_135_R_Lined; // Crossovers that could change based on the state of Track #3\n\n            if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n              // Track #3 is Occupied\n              if (this.state.occupied_3) {\n                this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n              } // Track #3 Is Routed\n              else if (this.state.routed_3) {\n                  this.state.sw_3_src = CX_135_Lined_Both;\n                }\n            } // Nothing Track #3\n            else {\n                this.state.sw_3_src = CX_135_Lined_Bottom;\n              } // Signals\n\n\n            this.state.sig_8w_src = SIG_W_Clear;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_8e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_1_4__|__4_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_4_e = color_1;\n        this.state.tail_1_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Occupied;\n          this.state.sw_7_src = CX_225_Occupied_Bottom;\n          this.state.sw_1_src = CX_135_R_Occupied; // Crossovers that could change based on the state of Track #3\n\n          if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n            // Track #3 is Occupied\n            if (this.state.occupied_3) {\n              this.state.sw_3_src = CX_135_Occupied_Both;\n            } // Track #3 Is Routed\n            else if (this.state.routed_3) {\n                this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n              }\n          } // Nothing Track #3\n          else {\n              this.state.sw_3_src = CX_135_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_13_src = CX_135_R_Lined;\n            this.state.sw_7_src = CX_225_Lined_Bottom;\n            this.state.sw_1_src = CX_135_R_Lined; // Crossovers that could change based on the state of Track #3\n\n            if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n              // Track #3 is Occupied\n              if (this.state.occupied_3) {\n                this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n              } // Track #3 Is Routed\n              else if (this.state.routed_3) {\n                  this.state.sw_3_src = CX_135_Lined_Both;\n                }\n            } // Nothing Track #3\n            else {\n                this.state.sw_3_src = CX_135_Lined_Bottom;\n              } // Signals\n\n\n            this.state.sig_8w_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_8e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n            this.state.sig_12e_src = SIG_E_Clear;\n          }\n      } else if (this.state.routes[i] === \"W_4_3__|__3_hx_laurel\") {\n        // Set Tail Track Colors\n        this.state.tail_4_e = color_4;\n        this.state.tail_3_w = color_4;\n\n        if (this.state.occupied_4) {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Occupied;\n          this.state.sw_7_src = CX_225_Occupied_Bottom;\n          this.state.sw_3_src = CX_135_R_Occupied;\n          this.state.sw_1_src = CX_135_R_Occupied; // Signals\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Lined;\n          this.state.sw_7_src = CX_225_Lined_Bottom;\n          this.state.sw_3_src = CX_135_R_Lined;\n          this.state.sw_1_src = CX_135_R_Lined; // Signals\n\n          this.state.sig_8w_src = SIG_W_Clear;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"E_3_4__|__4_laurel_westEnd\") {\n        // Set Tail Track Colors\n        this.state.tail_4_e = color_3;\n        this.state.tail_3_w = color_3;\n\n        if (this.state.occupied_3) {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Occupied;\n          this.state.sw_7_src = CX_225_Occupied_Bottom;\n          this.state.sw_3_src = CX_135_R_Occupied;\n          this.state.sw_1_src = CX_135_R_Occupied; // Signals\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_6e_src = SIG_E_Stop;\n          this.state.sig_12e_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_13_src = CX_135_R_Lined;\n          this.state.sw_7_src = CX_225_Lined_Bottom;\n          this.state.sw_3_src = CX_135_R_Lined;\n          this.state.sw_1_src = CX_135_R_Lined; // Signals\n\n          this.state.sig_8w_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_10w_src = SIG_W_Stop;\n          this.state.sig_8e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n          this.state.sig_6e_src = SIG_E_Clear;\n          this.state.sig_12e_src = SIG_E_Stop;\n        }\n      }\n    }\n  } // ---- END set_route_drawings() ----\n\n  /**\n   * set_switch_img()\n   * @summary Changes image sources for the switches, depending on switch status\n   * \n   * This function uses the data passed in through status from the CTC classes and \n   * shows if the switches are reversed or not on the screen, by changing the image\n   * source files, to the correct .png file respectivly\n   */\n\n\n  // ---- END set_switch_image() ----\n\n  /**\n   * reset_drawings()\n   * @summary Function to reset the signal images and track colors\n   * \n   * This function is need, because if the player was to remove a route,\n   * or when the train clears the interlocking nothing will clear the route\n   * the is displaying on the screen, even if it's gone in the backend\n   */\n  reset_drawings() {\n    this.state.sig_2w_src = SIG_W;\n    this.state.sig_4w_src = SIG_W;\n    this.state.sig_8w_src = SIG_W;\n    this.state.sig_10w_src = SIG_W;\n    this.state.sig_4e_src = SIG_E;\n    this.state.sig_6e_src = SIG_E;\n    this.state.sig_8e_src = SIG_E;\n    this.state.sig_12e_src = SIG_E;\n    this.state.tail_3_e = Empty;\n    this.state.tail_1_e = Empty;\n    this.state.tail_2_e = Empty;\n    this.state.tail_4_e = Empty;\n    this.state.tail_3_center = Empty;\n    this.state.tail_3_w = Empty;\n    this.state.tail_1_w = Empty;\n    this.state.tail_2_w = Empty;\n    this.state.tail_4_w = Empty;\n  } //---- END reset_drawings() ----\n\n\n} // Export the interlocking to be drawn on the screen\n\n\nexport default Laurel;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/Laurel.jsx"],"names":["React","Component","CX_135","CX_135_Lined_Top","CX_135_Lined_Bottom","CX_135_Lined_Both","CX_135_R","CX_135_R_Lined","CX_135_Lined_Top_Occupied_Bottom","CX_135_Occupied_Top_Lined_Bottom","CX_135_Occupied_Top","CX_135_Occupied_Bottom","CX_135_Occupied_Both","CX_135_R_Occupied","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","Laurel","state","sw_1","props","status","sw_3","sw_7","sw_9","sw_11","sw_13","sw_1_src","sw_3_src","sw_7_src","sw_11_src","sw_13_src","sig_2w_src","sig_4w_src","sig_8w_src","sig_10w_src","sig_4e_src","sig_6e_src","sig_8e_src","sig_12e_src","tail_3_e","tail_1_e","tail_2_e","tail_4_e","tail_3_center","tail_3_w","tail_1_w","tail_2_w","tail_4_w","routes","routed_1","routed_2","routed_3","routed_4","occupied_1","occupied_2","occupied_3","occupied_4","set_switch_img","sw_9_src","componentWillReceiveProps","nextProps","setState","render","reset_drawings","set_route_drawings","background","throw_sw_1","throw_sw_3","throw_sw_7","throw_sw_11","throw_sw_13","click_sig_10w","click_sig_2w","click_sig_4w","click_sig_8w","click_sig_4e","click_sig_6e","click_sig_8e","click_sig_12e","color_1","color_2","color_3","color_4","i","length","includes"],"mappings":"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","sourcesContent":["/**\n * @file Laurel.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Laurel Interlocking\n *\n * Extends the React Component Class and is the UI part of the Laurel Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS Style Sheet\nimport '../../../css/Main_Line/laurel.css';\n\n// Import Images\n// Switch Images\n// Images for a 135 Crossover\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png';\n\n// Images for a 225 Crossover\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the Laurel Interlocking\n * \n * This class is a JSX React Component for the Laurel Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass Laurel extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        sw_7: this.props.status.sw_7,\n        sw_9: this.props.status.sw_9,\n        sw_11: this.props.status.sw_11,\n        sw_13: this.props.status.sw_13,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_135,\n        sw_3_src: CX_135,\n        sw_7_src: CX_225,\n        sw_11_src: CX_225,\n        sw_13_src: CX_135,\n        // Image File for the signals - Will change depending on route\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_8w_src: SIG_W,\n        sig_10w_src: SIG_W,\n        sig_4e_src: SIG_E,\n        sig_6e_src: SIG_E,\n        sig_8e_src: SIG_E,\n        sig_12e_src: SIG_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_3_e: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        tail_4_e: Empty,\n        tail_3_center: Empty,\n        tail_3_w: Empty,\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_4_w: Empty,\n        // Information For Interlocking Routes\n        routes: this.props.status.routes,\n        routed_1: this.props.status.routed_1,\n        routed_2: this.props.status.routed_2,\n        routed_3: this.props.status.routed_3,\n        routed_4: this.props.status.routed_4,\n        occupied_1: this.props.status.occupied_1,\n        occupied_2: this.props.status.occupied_2,\n        occupied_3: this.props.status.occupied_3,\n        occupied_4: this.props.status.occupied_4,\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            sw_7: nextProps.status.sw_7,\n            sw_11: nextProps.status.sw_11,\n            sw_13: nextProps.status.sw_13,\n\n            routed_1: nextProps.status.routed_1,\n            routed_2: nextProps.status.routed_2,\n            routed_3: nextProps.status.routed_3,\n            routed_4: nextProps.status.routed_4,\n            occupied_1: nextProps.status.occupied_1,\n            occupied_2: nextProps.status.occupied_2,\n            occupied_3: nextProps.status.occupied_3,\n            occupied_4: nextProps.status.occupied_4,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"laurel_title\">LAUREL</div>\n                <div className=\"laurel_milepost\">MP 4.3</div>\n\n                {/* West Side Tail Tracks */}\n                <div className=\"b_laurel_3_west\" style={{background: this.state.tail_3_w}}></div>\n                <div className=\"b_laurel_2_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"m_laurel_2_west\" style={{background: this.state.tail_2_w}}></div>\n                <div className=\"m_laurel_4_west\" style={{background: this.state.tail_4_w}}></div>\n\n                {/* Switches */}\n                <div className=\"laurel_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"laurel_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"laurel_SW_7\" onClick={this.props.throw_sw_7}><img src={this.state.sw_7_src}/></div>\n                <div className=\"laurel_SW_11\" onClick={this.props.throw_sw_11}><img src={this.state.sw_11_src}/></div>\n                <div className=\"laurel_SW_13\" onClick={this.props.throw_sw_13}><img src={this.state.sw_13_src}/></div>\n\n                {/* Center Tail Tracks */}\n                <div className=\"m_laurel_3_center\" style={{background: this.state.tail_3_center}}></div>\n\n                {/* East Side Tail Tracks */}\n                <div className=\"m_laurel_3_east\" style={{background: this.state.tail_3_e}}></div>\n                <div className=\"m_laurel_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"m_laurel_2_east\" style={{background: this.state.tail_2_e}}></div>\n                <div className=\"m_laurel_4_east\" style={{background: this.state.tail_4_e}}></div>\n\n\n                {/* Signals */}\n                {/* West Signals */}\n                <div className=\"laurel_sig_10w\" onClick={this.props.click_sig_10w}><img src={this.state.sig_10w_src}/></div>\n                <div className=\"laurel_sig_2w\" onClick={this.props.click_sig_2w}><img src={this.state.sig_2w_src}/></div>\n                <div className=\"laurel_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n                <div className=\"laurel_sig_8w\" onClick={this.props.click_sig_8w}><img src={this.state.sig_8w_src}/></div>\n                {/* East Signals */}\n                <div className=\"laurel_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n                <div className=\"laurel_sig_6e\" onClick={this.props.click_sig_6e}><img src={this.state.sig_6e_src}/></div>\n                <div className=\"laurel_sig_8e\" onClick={this.props.click_sig_8e}><img src={this.state.sig_8e_src}/></div>\n                <div className=\"laurel_sig_12e\" onClick={this.props.click_sig_12e}><img src={this.state.sig_12e_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * set_route_drawings()\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not.\n     * \n     * There are a lot of possible drawings for this interlocking, which is why the function is so long, I'm not sure if there\n     * is a quicker or faster way to accomplish what this function does\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n        let color_3 = Empty;\n        let color_4 = Empty;\n\n        // Set Track Colors \n        // If each track has a route\n        if (this.state.routed_1) {\n            color_1 = Green;\n        }\n        if (this.state.routed_2) {\n            color_2 = Green;\n        }\n        if (this.state.routed_3) {\n            color_3 = Green;\n        }\n        if (this.state.routed_4) {\n            color_4 = Green;\n        }\n        // If each track is occupied\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n        if (this.state.occupied_3) {\n            color_3 = Red;\n        }\n        if (this.state.occupied_4) {\n            color_4 = Red;\n        }\n\n        // Loop Through All The Routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__2_hx_laurel\" || this.state.routes[i] === \"E_1_1__|__1_laurel_westEnd\") {\n                // Setting Tail Track Color\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                if (this.state.occupied_1) {\n                    // Switches\n                    // Crossovers that could change based off of Track #2\n                    if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n                        // Track 2 Routed\n                        if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track 2 Occupied\n                        else if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    // Nothing On Track 2\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Top;\n                        this.state.sw_7_src = CX_225_Occupied_Top;\n                    }\n                    // Crossovers that could changed based off of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track 3 Routed\n                        if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_11_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track 3 Occupied\n                        else if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Both;\n                            this.state.sw_11_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    // Nothing on Track 3\n                    else {\n                        this.state.sw_3_src = CX_135_Occupied_Bottom;\n                        this.state.sw_11_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    // Crossovers that could change based off of Track #2\n                    if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\") || this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                        // Track 2 Routed\n                        if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                        // Track 2 Occupied\n                        else if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                        // Track 2 Routed\n                        if (this.state.routed_4) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                        // Track 2 Occupied\n                        else if (this.state.occupied_4) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing On Track 2\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Top;\n                        this.state.sw_7_src = CX_225_Lined_Top;\n                    }\n                    // Crossovers that could changed based off of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track 3 Routed\n                        if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Both;\n                            this.state.sw_11_src = CX_225_Lined_Both;\n                        }\n                        // Track 3 Occupied\n                        else if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_11_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing on Track 3\n                    else {\n                        this.state.sw_3_src = CX_135_Lined_Bottom;\n                        this.state.sw_11_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__2_hx_laurel\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_12e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_12e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_3__|__3_hx_laurel\" || this.state.routes[i] === \"E_3_3__|__3_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_3;\n                this.state.tail_3_center = color_3;\n                this.state.tail_3_w = color_3;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_3) {\n                    // Switches\n                    this.state.sw_11_src = CX_225_Occupied_Top;\n                \n                    // Crossovers that could change based of the status of other Track #1\n                    if (this.state.routes.includes(\"W_4_1__|__2_hx_laurel\")) {\n                        // Track #1 Is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_3_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 Is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_4__|__4_laurel_westEnd\")) {\n                        // Track #1 Is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_3_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 Is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else {\n                        this.state.sw_3_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_11_src = CX_225_Lined_Top;\n                \n                    // Crossovers that could change based of the status of other Track #1\n                    if (this.state.routes.includes(\"W_4_1__|__2_hx_laurel\")) {\n                        // Track #1 Is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 Is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_3_src = CX_135_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_4__|__4_laurel_westEnd\")) {\n                        // Track #1 Is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 Is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_3_src = CX_135_Lined_Both;\n                        }\n                    }\n                    else {\n                        this.state.sw_3_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_3__|__3_hx_laurel\") {\n                        this.state.sig_10w_src = SIG_W_Clear;\n                        this.state.sig_6e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_10w_src = SIG_W_Stop;\n                        this.state.sig_6e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_westSecaucus_laurel\" || this.state.routes[i] === \"E_2_2__|__2_laurel_westEnd\") {\n                // Set Tail Track Color\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    // Crossovers that could change based off of Tack #1\n                    if (this.state.routes.includes(\"W_1_1__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n                        // Track 1 Routed\n                        if (this.state.routed_1) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track 1 Occupied\n                        else if (this.state.occupied_1) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_3_1__|__1_hx_laurel\")) {\n                        if (this.state.routed_3) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        else if (this.state.occupied_3) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n                        if (this.state.routed_1) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        else if (this.state.occupied_1) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_1_3__|__3_hx_laurel\")) {\n                        if (this.state.routed_1) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        else if (this.state.occupied_1) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n                        if (this.state.routed_3) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        else if (this.state.occupied_3) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    // Nothing Track 1\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Bottom;\n                        this.state.sw_7_src = CX_225_Occupied_Bottom;\n                    }\n                    // Crossovers that could change based off of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track 4 Routed\n                        if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track 4 Occupied\n                        else if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Both;\n                        }\n                    }\n                    // Nothing on Track 3\n                    else {\n                        this.state.sw_13_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    // Crossovers that could change based off of Tack #1\n                    if (this.state.routes.includes(\"W_1_1__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n                        // Track 1 Routed\n                        if (this.state.routed_1) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                        // Track 1 Occupied\n                        else if (this.state.occupied_1) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_3_1__|__1_hx_laurel\")) {\n                        if (this.state.routed_3) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                        else if (this.state.occupied_3) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n                        if (this.state.routed_1) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                        else if (this.state.occupied_1) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_1_3__|__3_hx_laurel\")) {\n                        if (this.state.routed_1) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        else if (this.state.occupied_1) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n                        if (this.state.routed_1) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        else if (this.state.occupied_1) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                    }\n                    // Nothing Track 1\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Bottom;\n                        this.state.sw_7_src = CX_225_Lined_Bottom;\n                    }\n                    // Crossovers that could changed based off of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track 4 Routed\n                        if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Lined_Both;\n                        }\n                        // Track 4 Occupied\n                        else if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing on Track 3\n                    else {\n                        this.state.sw_13_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_westSecaucus_laurel\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_4__|__4_westSecaucus_laurel\" || this.state.routes[i] === \"E_4_4__|__4_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_4_e = color_4;\n                this.state.tail_4_w = color_4;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_4) {\n                    // Switches\n                    // Crossovers that could change based on the status of Track #4\n                    if (this.state.routes.includes(\"E_3_2__|__2_laurel_westEnd\")) {\n                        // Track #4 Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_13_src = CX_135_Occupied_Both;\n                        }\n                        // Track #4 Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                }\n                // The Route is NOT Occupied\n                else {\n                    // Switches\n                    // Crossovers that could change based on the status of Track #4\n                    if (this.state.routes.includes(\"E_3_2__|__2_laurel_westEnd\")) {\n                        // Track #4 Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #4 Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_13_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_4_4__|__4_westSecaucus_laurel\") {\n                        this.state.sig_8w_src = SIG_W_Clear;\n                        this.state.sig_8e_src = SIG_E_Stop\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_8w_src = SIG_W_Stop;\n                        this.state.sig_8e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_1__|__1_hx_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_3;\n                this.state.tail_1_w = color_3;\n\n                // The Route Is Occupied\n                if (this.state.occupied_3) {\n                    // Switches\n                    this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    this.state.sw_11_src = CX_225_R_Occupied;\n\n                    if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                        if (this.state.occupied_4) {\n                            this.state.sw_1_src = CX_135_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Bottom;\n                        }\n                        else if (this.state.routed_4) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Top;\n                        this.state.sw_7_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_135_Lined_Bottom;\n                    this.state.sw_11_src = CX_225_R_Lined;\n                    \n                    // Crossovers that could change based on other tracks\n                    if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                        // Other track is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other track is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                        // Other track is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other track is Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Top;\n                        this.state.sw_7_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Clear;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_3__|__3_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    this.state.sw_11_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Top;\n                    this.state.sw_7_src = CX_225_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_135_Lined_Bottom;\n                    this.state.sw_11_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Top;\n                    this.state.sw_7_src = CX_225_Lined_Top;\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_2__|__2_westSecaucus_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_3;\n                this.state.tail_2_w = color_3;\n\n                // The Route Is Occupied\n                if (this.state.occupied_3) {\n                    // Switches\n                    this.state.sw_11_src = CX_225_R_Occupied;\n                    this.state.sw_7_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_11_src = CX_225_R_Lined;\n                    this.state.sw_7_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Clear;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_3__|__3_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_11_src = CX_225_R_Occupied;\n                    this.state.sw_7_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_11_src = CX_225_R_Lined;\n                    this.state.sw_7_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Signals\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_westSecaucus_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Switches\n                    this.state.sw_7_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Crossovers that could change based of Track #3 Status\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Occupied Track 3\n                        if (this.state.occupied_3) {\n                            this.state.sw_11_src = CX_225_Occupied_Both;\n                        }\n                        // Lined Track 3\n                        else if (this.state.routed_3) {\n                            this.state.sw_11_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track 3\n                    else {\n                        this.state.sw_11_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_7_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Crossovers that could change based of Track #3 Status\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Occupied Track 3\n                        if (this.state.occupied_3) {\n                            this.state.sw_11_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                        // Lined Track 3\n                        else if (this.state.routed_3) {\n                            this.state.sw_11_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Nothing Track 3\n                    else {\n                        this.state.sw_11_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_7_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Switches\n                    this.state.sw_7_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Crossovers that could change based of Track #3 Status\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Occupied Track 3\n                        if (this.state.occupied_3) {\n                            this.state.sw_11_src = CX_225_Occupied_Both;\n                        }\n                        // Lined Track 3\n                        else if (this.state.routed_3) {\n                            this.state.sw_11_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track 3\n                    else {\n                        this.state.sw_11_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_7_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Crossovers that could change based of Track #3 Status\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Occupied Track 3\n                        if (this.state.occupied_3) {\n                            this.state.sw_11_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                        // Lined Track 3\n                        else if (this.state.routed_3) {\n                            this.state.sw_11_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Nothing Track 3\n                    else {\n                        this.state.sw_11_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_3__|__3_hx_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_1;\n                this.state.tail_3_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_11_src = CX_225_Occupied_Bottom;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n\n                    // Crossovers that could change based off of Track #3 status\n                    if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Another Possible Route\n                    else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing On The Other Track\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Top;\n                        this.state.sw_7_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_11_src = CX_225_Lined_Bottom;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Crossovers that could change based off of Track #3 status\n                    if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Another Possible Route\n                    else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Nothing On The Other Track\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Top;\n                        this.state.sw_7_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_3_1__|__1_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_3;\n                this.state.tail_3_w = color_3;\n\n                // The Route Is Occupied\n                if (this.state.occupied_3) {\n                    // Switches\n                    this.state.sw_11_src = CX_225_Occupied_Bottom;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n\n                    // Crossovers that could change based off of Track #3 status\n                    if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Another Possible Route\n                    else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing On The Other Track\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Top;\n                        this.state.sw_7_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_11_src = CX_225_Lined_Bottom;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Crossovers that could change based off of Track #3 status\n                    if (this.state.routes.includes(\"W_2_2__|__2_westSecaucus_laurel\") || this.state.routes.includes(\"E_2_2__|__2_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Another Possible Route\n                    else if (this.state.routes.includes(\"W_4_2__|__2_westSecaucus_laurel\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_2_4__|__4_laurel_westEnd\")) {\n                        // Other Track Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Other Track Routed\n                        else if (this.state.routed_2) {\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Nothing On The Other Track\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Top;\n                        this.state.sw_7_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Clear;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__2_hx_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_1_w = color_2;\n\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = CX_135_R_Occupied;\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n\n                    // Crossovers that could change based on the status of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Both;\n                        }\n                        // Track #3 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Crossovers that could change based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Both;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_135_R_Lined;\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n\n                    // Crossovers that could change based on the status of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #3 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Crossovers that could change based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_2__|__2_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_1_src = CX_135_R_Occupied;\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n\n                    // Crossovers that could change based on the status of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Both;\n                        }\n                        // Track #3 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Crossovers that could change based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Both;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_135_R_Lined;\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n\n                    // Crossovers that could change based on the status of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #3 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Crossovers that could change based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_12e_src = SIG_E_Clear;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_3__|__3_hx_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_3_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n\n                    // Crossovers taht could changed based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Both;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n                    this.state.sw_1_src = CX_135_R_Lined;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Crossovers taht could changed based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_3_2__|__2_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_3;\n                this.state.tail_3_w = color_3;\n\n                // The Route Is Occupied\n                if (this.state.occupied_3) {\n                    // Switches\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n\n                    // Crossovers taht could changed based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Both;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n                    this.state.sw_1_src = CX_135_R_Lined;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Crossovers taht could changed based on the status of Track #4\n                    if (this.state.routes.includes(\"W_4_4__|__4_westSecaucus_laurel\") || this.state.routes.includes(\"E_4_4__|__4_laurel_westEnd\")) {\n                        // Track #4 is Occupied\n                        if (this.state.occupied_4) {\n                            this.state.sw_13_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track #4 is Routed\n                        else if (this.state.routed_4) {\n                            this.state.sw_13_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #4\n                    else {\n                        this.state.sw_13_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_6e_src = SIG_E_Clear;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_2__|__2_westSecaucus_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_4_e = color_4;\n                this.state.tail_2_w = color_4;\n\n                if (this.state.occupied_4) {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Occupied;\n\n                    // Crossovers that could change based on the status of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_7_src = CX_225_Occupied_Bottom;\n                        this.state.sw_1_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Lined;\n\n                    // Crossovers that could change based on the status of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_7_src = CX_225_Lined_Bottom;\n                        this.state.sw_1_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_4__|__4_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_4_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Occupied;\n\n                    // Crossovers that could change based on the status of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Both;\n                            this.state.sw_1_src = CX_135_Occupied_Both;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_7_src = CX_225_Occupied_Bottom;\n                        this.state.sw_1_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Lined;\n\n                    // Crossovers that could change based on the status of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_hx_laurel\") || this.state.routes.includes(\"E_1_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_3_1__|__1_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"E_1_3__|__3_laurel_westEnd\")) {\n                        // Track #1 is Occupied\n                        if (this.state.occupied_1) {\n                            this.state.sw_7_src = CX_225_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #1 is Routed\n                        else if (this.state.routed_1) {\n                            this.state.sw_7_src = CX_225_Lined_Both;\n                            this.state.sw_1_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_7_src = CX_225_Lined_Bottom;\n                        this.state.sw_1_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_1__|__2_hx_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_4_e = color_4;\n                this.state.tail_1_w = color_4;\n\n                // The Route Is Occupied\n                if (this.state.occupied_4) {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Occupied;\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n\n                    // Crossovers that could change based on the state of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Both;\n                        }\n                        // Track #3 Is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Lined;\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n                    this.state.sw_1_src = CX_135_R_Lined;\n\n                    // Crossovers that could change based on the state of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #3 Is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_4__|__4_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_4_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Occupied;\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n\n                    // Crossovers that could change based on the state of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Both;\n                        }\n                        // Track #3 Is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Lined;\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n                    this.state.sw_1_src = CX_135_R_Lined;\n\n                    // Crossovers that could change based on the state of Track #3\n                    if (this.state.routes.includes(\"W_3_3__|__3_hx_laurel\") || this.state.routes.includes(\"E_3_3__|__3_laurel_westEnd\")) {\n                        // Track #3 is Occupied\n                        if (this.state.occupied_3) {\n                            this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                        }\n                        // Track #3 Is Routed\n                        else if (this.state.routed_3) {\n                            this.state.sw_3_src = CX_135_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #3\n                    else {\n                        this.state.sw_3_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_3__|__3_hx_laurel\") {\n                // Set Tail Track Colors\n                this.state.tail_4_e = color_4;\n                this.state.tail_3_w = color_4;\n\n                if (this.state.occupied_4) {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Occupied;\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Lined;\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n                    this.state.sw_3_src = CX_135_R_Lined;\n                    this.state.sw_1_src = CX_135_R_Lined;\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_3_4__|__4_laurel_westEnd\") {\n                // Set Tail Track Colors\n                this.state.tail_4_e = color_3;\n                this.state.tail_3_w = color_3;\n\n                if (this.state.occupied_3) {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Occupied;\n                    this.state.sw_7_src = CX_225_Occupied_Bottom;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_6e_src = SIG_E_Stop;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_13_src = CX_135_R_Lined;\n                    this.state.sw_7_src = CX_225_Lined_Bottom;\n                    this.state.sw_3_src = CX_135_R_Lined;\n                    this.state.sw_1_src = CX_135_R_Lined;\n\n                    // Signals\n                    this.state.sig_8w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_10w_src = SIG_W_Stop;\n                    this.state.sig_8e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                    this.state.sig_6e_src = SIG_E_Clear;\n                    this.state.sig_12e_src = SIG_E_Stop;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        // Set the state of SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_135_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_135;\n        }\n        \n        // Set the state of SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = CX_135_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = CX_135;\n        }\n\n        // Set the state of SW #7\n        // SW #7 Reversed\n        if (this.state.sw_7) {\n            this.state.sw_7_src = CX_225_R;\n        }\n        // SW #7 Normal\n        else {\n            this.state.sw_7_src = CX_225;\n        }\n\n        // Set the state of SW #9\n        // SW #9 Reversed\n        if (this.state.sw_9) {\n            this.state.sw_9_src = CX_135_R;\n        }\n        // SW #9 Normal\n        else {\n            this.state.sw_9_src = CX_135;\n        }\n\n        // Set the state of SW #11\n        // SW #11 Reversed\n        if (this.state.sw_11) {\n            this.state.sw_11_src = CX_225_R;\n        }\n        // SW #11 Normal\n        else {\n            this.state.sw_11_src = CX_225;\n        }\n\n        // Set the state of SW #13\n        // SW #13 Reversed\n        if (this.state.sw_13) {\n            this.state.sw_13_src = CX_135_R;\n        }\n        // SW #13 Normal\n        else {\n            this.state.sw_13_src = CX_135;\n        }\n    }\n    // ---- END set_switch_image() ----\n\n\n    /**\n     * reset_drawings()\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.sig_2w_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_8w_src = SIG_W;\n        this.state.sig_10w_src = SIG_W;\n        this.state.sig_4e_src = SIG_E;\n        this.state.sig_6e_src = SIG_E;\n        this.state.sig_8e_src = SIG_E;\n        this.state.sig_12e_src = SIG_E;\n\n        this.state.tail_3_e = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n        this.state.tail_4_e = Empty;\n        this.state.tail_3_center = Empty;\n        this.state.tail_3_w = Empty;\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_4_w = Empty;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default Laurel;"]},"metadata":{},"sourceType":"module"}