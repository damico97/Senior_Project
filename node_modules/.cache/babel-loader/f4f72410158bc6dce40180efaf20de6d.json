{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file Hall.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Hall Interlocking\n *\n * Extends the React Component Class and is the UI part of the Hall Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */ // Import React Component\nimport React,{Component}from'react';// Import CSS style sheet\nimport'../../../css/Southern_Tier_Line/hall.css';// Import Images\n// Switch Images\nimport CX_225 from'../../../images/CX_225.png';import CX_225_Lined_Top from'../../../images/CX_225_Lined_Top.png';import CX_225_Lined_Bottom from'../../../images/CX_225_Lined_Bottom.png';import CX_225_Lined_Both from'../../../images/CX_225_Lined_Both.png';import CX_225_R from'../../../images/CX_225_R.png';import CX_225_R_Lined from'../../../images/CX_225_R_Lined.png';import CX_225_Lined_Top_Occupied_Bottom from'../../../images/CX_225_Lined_Top_Occupied_Bottom.png';import CX_225_Occupied_Top_Lined_Bottom from'../../../images/CX_225_Occupied_Top_Lined_Bottom.png';import CX_225_Occupied_Top from'../../../images/CX_225_Occupied_Top.png';import CX_225_Occupied_Bottom from'../../../images/CX_225_Occupied_Bottom.png';import CX_225_Occupied_Both from'../../../images/CX_225_Occupied_Both.png';import CX_225_R_Occupied from'../../../images/CX_225_R_Occupied.png';// Signal Images\nimport SIG_W from'../../../images/SIG_W.png';import SIG_W_Clear from'../../../images/SIG_W_Clear.png';import SIG_W_Stop from'../../../images/SIG_W_Stop.png';import SIG_E from'../../../images/SIG_E.png';import SIG_E_Clear from'../../../images/SIG_E_Clear.png';import SIG_E_Stop from'../../../images/SIG_E_Stop.png';// Color Constants For Drawing Routes\nvar Empty='#999999';var Green='#75fa4c';var Red='#eb3323';/**\n * The React JSX Component Class for the Hall Interlocking\n * \n * This class is a JSX React Component for the Hall Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */var Hall=/*#__PURE__*/function(_Component){_inherits(Hall,_Component);function Hall(){var _getPrototypeOf2;var _this;_classCallCheck(this,Hall);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Hall)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={// Switch Status\nsw_1:_this.props.status.sw_1,// Image File for the switch - Will change depending on route\nsw_1_src:CX_225,// Colors for tail tracks - Will change depending on route\ntail_yard:Empty,tail_west:Empty,tail_2_east:Empty,tail_1_east:Empty,// Image File for the signals - Will change depending on route\nsig_2w_src:SIG_W,sig_4w_src:SIG_W,sig_2e_src:SIG_E,sig_4e_src:SIG_E,// Information For Interlocking Routes\noccupied_1:_this.props.status.occupied_trk_1,occupied_2:_this.props.status.occupied_trk_2,route_1:_this.props.status.routed_trk_1,route_2:_this.props.status.routed_trk_2,routes:_this.props.status.routes};return _this;}_createClass(Hall,[{key:\"componentWillReceiveProps\",/**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */value:function componentWillReceiveProps(nextProps){this.setState({sw_1:nextProps.status.sw_1,occupied_1:nextProps.status.occupied_trk_1,occupied_2:nextProps.status.occupied_trk_2,route_1:nextProps.status.routed_trk_1,route_2:nextProps.status.routed_trk_2,routes:nextProps.status.routes});}// ---- END componentWillReceiveProps() ----\n/**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */},{key:\"render\",value:function render(){// Clear all the drawings from the interlocking so if a train clears the route is gone\nthis.reset_drawings();// Set the switch images based off the state of each crossover\nthis.set_switch_img();// Draw all the current routes in the interlocking\nthis.set_route_drawings();// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{className:\"hall_title\"},\"CP HALL\"),React.createElement(\"div\",{className:\"hall_milepost\"},\"MP 64.7JS\"),React.createElement(\"div\",{className:\"hall_yard\",style:{background:this.state.tail_yard}}),React.createElement(\"div\",{className:\"hall_west\",style:{background:this.state.tail_west}}),React.createElement(\"div\",{className:\"hall_SW_1\",onClick:this.props.throw_sw_1},React.createElement(\"img\",{src:this.state.sw_1_src})),React.createElement(\"div\",{className:\"hall_2_east\",style:{background:this.state.tail_2_east}}),React.createElement(\"div\",{className:\"hall_1_east\",style:{background:this.state.tail_1_east}}),React.createElement(\"div\",{className:\"hall_sig_4w\",onClick:this.props.click_sig_4w},React.createElement(\"img\",{src:this.state.sig_4w_src})),React.createElement(\"div\",{className:\"hall_sig_2w\",onClick:this.props.click_sig_2w},React.createElement(\"img\",{src:this.state.sig_2w_src})),React.createElement(\"div\",{className:\"hall_sig_4e\",onClick:this.props.click_sig_4e},React.createElement(\"img\",{src:this.state.sig_4e_src})),React.createElement(\"div\",{className:\"hall_sig_2e\",onClick:this.props.click_sig_2e},React.createElement(\"img\",{src:this.state.sig_2e_src})));}// ---- END render() ----\n/**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */},{key:\"set_route_drawings\",value:function set_route_drawings(){var color_1=Empty;var color_2=Empty;// Setting the color of the tracks depending on if the interlocking in occupied or not\nif(this.state.route_1){color_1=Green;}if(this.state.route_2){color_2=Green;}if(this.state.occupied_1){color_1=Red;}if(this.state.occupied_2){color_2=Red;}// Loop through all the routes\nfor(var i=0;i<this.state.routes.length;i++){if(this.state.routes[i]===\"W_1_1__|__1_howells_hall\"||this.state.routes[i]===\"E_1_1__|__1_hall_hudson\"){// Tail Tracks\nthis.state.tail_1_east=color_1;this.state.tail_west=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\n// Crossovers that could change based off of Track #2\n// Track #2 Routed\nif(this.state.route_2){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}// Track #2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Occupied_Both;}// Nothing Track #2\nelse{this.state.sw_1_src=CX_225_Occupied_Bottom;}// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\n// Crossovers that could change based off of Track #2\n// Track #2 Routed\nif(this.state.route_2){this.state.sw_1_src=CX_225_Lined_Both;}// Track #2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}// Nothing Track #2\nelse{this.state.sw_1_src=CX_225_Lined_Bottom;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_1__|__1_howells_hall\"){this.state.sig_2w_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_2_2__|__2_yard_hall\"||this.state.routes[i]===\"E_2_2__|__2_hall_hudson\"){// Tail Tracks\nthis.state.tail_2_east=color_2;this.state.tail_yard=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\n// Crossovers that could change based off of Track #1\n// Track #1 Routed\nif(this.state.route_1){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}// Track #1 Occupied\nelse if(this.state.occupied_1){this.state.sw_1_src=CX_225_Occupied_Both;}// Nothing Track #1\nelse{this.state.sw_1_src=CX_225_Occupied_Top;}// Signals\nthis.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\n// Crossovers that could change based off of Track #1\n// Track #1 Routed\nif(this.state.route_1){this.state.sw_1_src=CX_225_Lined_Both;}// Track #1 Occupied\nelse if(this.state.occupied_1){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}// Nothing Track #1\nelse{this.state.sw_1_src=CX_225_Lined_Top;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_2_2__|__2_yard_hall\"){this.state.sig_4w_src=SIG_W_Clear;this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_2_1__|__1_howells_hall\"){// Tail Tracks\nthis.state.tail_2_east=color_2;this.state.tail_west=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_1_2__|__2_hall_hudson\"){// Tail Tracks\nthis.state.tail_2_east=color_1;this.state.tail_west=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;this.state.sig_4e_src=SIG_E_Stop;}}}}// ---- END set_route_drawings() ----\n/**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */},{key:\"set_switch_img\",value:function set_switch_img(){if(this.state.sw_1){this.state.sw_1_src=CX_225_R;}else{this.state.sw_1_src=CX_225;}}// ---- END set_switch_img() ----\n/**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */},{key:\"reset_drawings\",value:function reset_drawings(){this.state.tail_1_east=Empty;this.state.tail_2_east=Empty;this.state.tail_west=Empty;this.state.tail_yard=Empty;this.state.sig_2w_src=SIG_W;this.state.sig_4w_src=SIG_W;this.state.sig_2e_src=SIG_E;this.state.sig_4e_src=SIG_E;}//---- END reset_drawings() ----\n}]);return Hall;}(Component);// Export the interlocking to be drawn on the screen\nexport default Hall;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Southern_Tier_Line/Hall.jsx"],"names":["React","Component","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","Hall","state","sw_1","props","status","sw_1_src","tail_yard","tail_west","tail_2_east","tail_1_east","sig_2w_src","sig_4w_src","sig_2e_src","sig_4e_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_trk_1","route_2","routed_trk_2","routes","nextProps","setState","reset_drawings","set_switch_img","set_route_drawings","background","throw_sw_1","click_sig_4w","click_sig_2w","click_sig_4e","click_sig_2e","color_1","color_2","i","length"],"mappings":"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","sourcesContent":["/**\n * @file Hall.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Hall Interlocking\n *\n * Extends the React Component Class and is the UI part of the Hall Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Southern_Tier_Line/hall.css';\n\n// Import Images\n// Switch Images\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the Hall Interlocking\n * \n * This class is a JSX React Component for the Hall Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass Hall extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_225,\n        // Colors for tail tracks - Will change depending on route\n        tail_yard: Empty,\n        tail_west: Empty,\n        tail_2_east: Empty,\n        tail_1_east: Empty,\n        // Image File for the signals - Will change depending on route\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_trk_1,\n        route_2: this.props.status.routed_trk_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1,\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_trk_1,\n            route_2: nextProps.status.routed_trk_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"hall_title\">CP HALL</div>\n                <div className=\"hall_milepost\">MP 64.7JS</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"hall_yard\" style={{background: this.state.tail_yard}}></div>\n                <div className=\"hall_west\" style={{background: this.state.tail_west}}></div>\n                {/* Switches */}\n                <div className=\"hall_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"hall_2_east\" style={{background: this.state.tail_2_east}}></div>\n                <div className=\"hall_1_east\" style={{background: this.state.tail_1_east}}></div>\n                {/* Signals */}\n                <div className=\"hall_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n                <div className=\"hall_sig_2w\" onClick={this.props.click_sig_2w}><img src={this.state.sig_2w_src}/></div>\n                <div className=\"hall_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n                <div className=\"hall_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Setting the color of the tracks depending on if the interlocking in occupied or not\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop through all the routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_howells_hall\" || this.state.routes[i] === \"E_1_1__|__1_hall_hudson\") {\n                // Tail Tracks\n                this.state.tail_1_east = color_1;\n                this.state.tail_west = color_1;\n                \n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    // Crossovers that could change based off of Track #2\n                    // Track #2 Routed\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Track #2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Crossovers that could change based off of Track #2\n                    // Track #2 Routed\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Track #2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_howells_hall\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_yard_hall\" || this.state.routes[i] === \"E_2_2__|__2_hall_hudson\") {\n                // Tail Tracks\n                this.state.tail_2_east = color_2;\n                this.state.tail_yard = color_2;\n                \n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    // Crossovers that could change based off of Track #1\n                    // Track #1 Routed\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Track #1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Crossovers that could change based off of Track #1\n                    // Track #1 Routed\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Track #1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_yard_hall\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__1_howells_hall\") {\n                // Tail Tracks\n                this.state.tail_2_east = color_2;\n                this.state.tail_west = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_2__|__2_hall_hudson\") {\n                // Tail Tracks\n                this.state.tail_2_east = color_1;\n                this.state.tail_west = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Clear;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img() {\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_225_R;\n        }\n        else {\n            this.state.sw_1_src = CX_225;\n        }\n    }\n    // ---- END set_switch_img() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_east = Empty;\n        this.state.tail_2_east = Empty;\n        this.state.tail_west = Empty;\n        this.state.tail_yard = Empty;\n\n        this.state.sig_2w_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_4e_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default Hall;"]},"metadata":{},"sourceType":"module"}