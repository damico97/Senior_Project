{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for SF Interlocking\n *\n * Extends the React Component Class and is the UI part of the SF Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */ // Import React Component\nimport React,{Component}from'react';// Import CSS style sheet\nimport'../../../css/Main_Line/sf.css';// Import Images\n// Switch Images \nimport CX_225 from'../../../images/CX_225.png';import CX_225_Lined_Top from'../../../images/CX_225_Lined_Top.png';import CX_225_Lined_Bottom from'../../../images/CX_225_Lined_Bottom.png';import CX_225_Lined_Both from'../../../images/CX_225_Lined_Both.png';import CX_225_R from'../../../images/CX_225_R.png';import CX_225_R_Lined from'../../../images/CX_225_R_Lined.png';import CX_225_Lined_Top_Occupied_Bottom from'../../../images/CX_225_Lined_Top_Occupied_Bottom.png';import CX_225_Occupied_Top_Lined_Bottom from'../../../images/CX_225_Occupied_Top_Lined_Bottom.png';import CX_225_Occupied_Top from'../../../images/CX_225_Occupied_Top.png';import CX_225_Occupied_Bottom from'../../../images/CX_225_Occupied_Bottom.png';import CX_225_Occupied_Both from'../../../images/CX_225_Occupied_Both.png';import CX_225_R_Occupied from'../../../images/CX_225_R_Occupied.png';import SW_D_W from'../../../images/SW_D_W.png';import SW_D_W_Lined from'../../../images/SW_D_W_Lined.png';import SW_D_W_Occupied from'../../../images/SW_D_W_Occupied.png';import SW_D_W_R from'../../../images/SW_D_W_R.png';import SW_D_W_R_Lined from'../../../images/SW_D_W_R_Lined.png';import SW_D_W_R_Occupied from'../../../images/SW_D_W_R_Occupied.png';// Signal Images\nimport SIG_W from'../../../images/SIG_W.png';import SIG_W_Clear from'../../../images/SIG_W_Clear.png';import SIG_W_Stop from'../../../images/SIG_W_Stop.png';import SIG_E from'../../../images/SIG_E.png';import SIG_E_Clear from'../../../images/SIG_E_Clear.png';import SIG_E_Stop from'../../../images/SIG_E_Stop.png';// Color Constants For Drawing Routes\nvar Empty='#999999';var Green='#75fa4c';var Red='#eb3323';/**\n * The React JSX Component Class for the SF Interlocking\n * \n * This class is a JSX React Component for the SF Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */var SF=/*#__PURE__*/function(_Component){_inherits(SF,_Component);function SF(){var _getPrototypeOf2;var _this;_classCallCheck(this,SF);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SF)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={// Switch Status\nsw_1:_this.props.status.sw_1,sw_3:_this.props.status.sw_3,// Image File for the switch - Will change depending on route\nsw_1_src:SW_D_W,sw_3_src:CX_225,// Image File for the signals - Will change depending on route\ntail_1_w:Empty,tail_2_w:Empty,tail_yard:Empty,tail_1_e:Empty,tail_2_e:Empty,// Colors for tail tracks - Will change depending on route\nsig_2w_src:SIG_W,sig_4w_src:SIG_W,sig_2e_src:SIG_E,sig_4e1_src:SIG_E,sig_4e2_src:SIG_E,// Information For Interlocking Routes\noccupied_1:_this.props.status.occupied_trk_1,occupied_2:_this.props.status.occupied_trk_2,route_1:_this.props.status.routed_trk_1,route_2:_this.props.status.routed_trk_2,routes:_this.props.status.routes};_this.set_switch_img=function(){// Set SW #1\n// SW #1 Reversed\nif(_this.state.sw_1){_this.state.sw_1_src=SW_D_W_R;}// SW #1 Normal\nelse{_this.state.sw_1_src=SW_D_W;}// Set SW #3\n// SW #3 Reversed\nif(_this.state.sw_3){_this.state.sw_3_src=CX_225_R;}// SW #3 Normal\nelse{_this.state.sw_3_src=CX_225;}};return _this;}_createClass(SF,[{key:\"componentWillReceiveProps\",/**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */value:function componentWillReceiveProps(nextProps){this.setState({sw_1:nextProps.status.sw_1,sw_3:nextProps.status.sw_3,occupied_1:nextProps.status.occupied_trk_1,occupied_2:nextProps.status.occupied_trk_2,route_1:nextProps.status.routed_trk_1,route_2:nextProps.status.routed_trk_2,routes:nextProps.status.routes});}// ---- END componentWillReceiveProps() ----\n/**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */},{key:\"render\",value:function render(){// Clear all the drawings from the interlocking so if a train clears the route is gone\nthis.reset_drawings();// Set the switch images based off the state of each crossover\nthis.set_switch_img();// Draw all the current routes in the interlocking\nthis.set_route_drawings();// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{className:\"sf_title\"},\"SF\"),React.createElement(\"div\",{className:\"sf_milepost\"},\"MP 30.5\"),React.createElement(\"div\",{className:\"sf_1_west\",style:{background:this.state.tail_1_w}}),React.createElement(\"div\",{className:\"sf_2_west\",style:{background:this.state.tail_2_w}}),React.createElement(\"div\",{className:\"sf_yard\",style:{background:this.state.tail_yard}}),React.createElement(\"div\",{className:\"sf_SW_1\",onClick:this.props.throw_sw_1},React.createElement(\"img\",{src:this.state.sw_1_src})),React.createElement(\"div\",{className:\"sf_SW_3\",onClick:this.props.throw_sw_3},React.createElement(\"img\",{src:this.state.sw_3_src})),React.createElement(\"div\",{className:\"sf_1_center_west\",style:{background:this.state.tail_1_e}}),React.createElement(\"div\",{className:\"sf_2_center_west\",style:{background:this.state.tail_2_e}}),React.createElement(\"div\",{className:\"sf_sig_2e\",onClick:this.props.click_sig_2e},React.createElement(\"img\",{src:this.state.sig_2e_src})),React.createElement(\"div\",{className:\"sf_sig_4e-1\",onClick:this.props.click_sig_4e_1},React.createElement(\"img\",{src:this.state.sig_4e1_src})),React.createElement(\"div\",{className:\"sf_sig_4e-2\",onClick:this.props.click_sig_4e_2},React.createElement(\"img\",{src:this.state.sig_4e2_src})),React.createElement(\"div\",{className:\"sf_sig_2w\",onClick:this.props.click_sig_2w},React.createElement(\"img\",{src:this.state.sig_2w_src})),React.createElement(\"div\",{className:\"sf_sig_4w\",onClick:this.props.click_sig_4w},React.createElement(\"img\",{src:this.state.sig_4w_src})));}// ---- END render() ----\n/**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */},{key:\"set_route_drawings\",value:function set_route_drawings(){// Setting the color of tracks depending on if interlocking is occupied or not\nvar color_1=Empty;var color_2=Empty;if(this.state.route_1){color_1=Green;}if(this.state.route_2){color_2=Green;}if(this.state.occupied_1){color_1=Red;}if(this.state.occupied_2){color_2=Red;}// Loop through all the routes\nfor(var i=0;i<this.state.routes.length;i++){if(this.state.routes[i]===\"W_1_1__|__1_sterling_sf\"||this.state.routes[i]===\"E_1_1__|__1_sf_wc\"){// Tail Tracks \nthis.state.tail_1_e=color_1;this.state.tail_1_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\n// Track #2 Is Routed\nif(this.state.route_2){this.state.sw_3_src=CX_225_Occupied_Top_Lined_Bottom;}// Track #2 Is Occupied\nelse if(this.state.occupied_2){this.state.sw_3_src=CX_225_Occupied_Both;}// Nothing Track #2\nelse{this.state.sw_3_src=CX_225_Occupied_Top;}// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\n// Track #2 Is Routed\nif(this.state.route_2){this.state.sw_3_src=CX_225_Lined_Both;}// Track #2 Is Occupied\nelse if(this.state.occupied_2){this.state.sw_3_src=CX_225_Lined_Top_Occupied_Bottom;}// Nothing Track #2\nelse{this.state.sw_3_src=CX_225_Lined_Top;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_1__|__1_sterling_sf\"){this.state.sig_2w_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_2_2__|__2_hilburn_sf\"||this.state.routes[i]===\"E_2_2__|__2_sf_wc\"){// Tail Tracks \nthis.state.tail_2_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_1_src=SW_D_W_Occupied;// Crossovers that could change depending on Track #2\n// Track #2 Is Routed\nif(this.state.route_1){this.state.sw_3_src=CX_225_Lined_Top_Occupied_Bottom;}// Track #2 Is Occupied\nelse if(this.state.occupied_1){this.state.sw_3_src=CX_225_Occupied_Both;}// Nothing Track #2\nelse{this.state.sw_3_src=CX_225_Occupied_Bottom;}// Signals\nthis.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}else{// Switches\nthis.state.sw_1_src=SW_D_W_Lined;// Crossovers that could change depending on Track #2\n// Track #2 Is Routed\nif(this.state.route_1){this.state.sw_3_src=CX_225_Lined_Both;}// Track #2 Is Occupied\nelse if(this.state.occupied_1){this.state.sw_3_src=CX_225_Occupied_Top_Lined_Bottom;}// Nothing Track #2\nelse{this.state.sw_3_src=CX_225_Lined_Bottom;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_2_2__|__2_hilburn_sf\"){this.state.sig_4w_src=SIG_W_Clear;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Clear;this.state.sig_4e2_src=SIG_E_Stop;}}}else if(this.state.routes[i]===\"W_2_3__|__3_yardHilburn_sf\"||this.state.routes[i]===\"E_3_2__|__2_sf_wc\"){// Tail Tracks\nthis.state.tail_2_e=color_2;this.state.tail_yard=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_1_src=SW_D_W_R_Occupied;// Crossovers that could change based off of Track #1\n// Track #1 Routed\nif(this.state.route_1){this.state.sw_3_src=CX_225_Lined_Top_Occupied_Bottom;}// Track #1 Occupied\nelse if(this.state.occupied_1){this.state.sw_3_src=CX_225_Occupied_Both;}// Nothing Track #1\nelse{this.state.sw_3_src=CX_225_Occupied_Bottom;}// Signals\nthis.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_1_src=SW_D_W_R_Lined;// Crossovers that could change based off of Track #1\n// Track #1 Routed\nif(this.state.route_1){this.state.sw_3_src=CX_225_Lined_Both;}// Track #1 Occupied\nelse if(this.state.occupied_1){this.state.sw_3_src=CX_225_Occupied_Top_Lined_Bottom;}// Nothing Track #1\nelse{this.state.sw_3_src=CX_225_Lined_Bottom;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_2_3__|__3_yardHilburn_sf\"){this.state.sig_4w_src=SIG_W_Clear;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_1_2__|__2_hilburn_sf\"){// Tail Tracks\nthis.state.tail_1_e=color_1;this.state.tail_2_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_3_src=CX_225_R_Occupied;this.state.sw_1_src=SW_D_W_Occupied;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_3_src=CX_225_R_Lined;this.state.sw_1_src=SW_D_W_Lined;// Signals\nthis.state.sig_2w_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_2_1__|__1_sf_wc\"){// Tail Tracks\nthis.state.tail_1_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_3_src=CX_225_R_Occupied;this.state.sw_1_src=SW_D_W_Occupied;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}else{// Switches\nthis.state.sw_3_src=CX_225_R_Lined;this.state.sw_1_src=SW_D_W_Lined;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Clear;this.state.sig_4e2_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"W_1_3__|__2_yardHilburn_sf\"){// Tail Tracks\nthis.state.tail_1_e=color_1;this.state.tail_yard=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches \nthis.state.sw_3_src=CX_225_R_Occupied;this.state.sw_1_src=SW_D_W_R_Occupied;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_3_src=CX_225_R_Lined;this.state.sw_1_src=SW_D_W_R_Lined;// Signals\nthis.state.sig_2w_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_3_1__|__1_sf_wc\"){// Tail Tracks\nthis.state.tail_1_e=color_2;this.state.tail_yard=color_2;// The Route Is Occupied\nif(this.state.occupied_1){// Switches \nthis.state.sw_3_src=CX_225_R_Occupied;this.state.sw_1_src=SW_D_W_R_Occupied;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_3_src=CX_225_R_Lined;this.state.sw_1_src=SW_D_W_R_Lined;// Signals\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e1_src=SIG_E_Stop;this.state.sig_4e2_src=SIG_E_Clear;}}}}// ---- END set_route_drawings() ----\n/**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */},{key:\"reset_drawings\",// ---- END set_switch_image() ----\n/**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */value:function reset_drawings(){this.state.tail_1_w=Empty;this.state.tail_2_w=Empty;this.state.tail_yard=Empty;this.state.tail_1_e=Empty;this.state.tail_2_e=Empty;this.state.sig_2w_src=SIG_W;this.state.sig_4w_src=SIG_W;this.state.sig_2e_src=SIG_E;this.state.sig_4e1_src=SIG_E;this.state.sig_4e2_src=SIG_E;}//---- END reset_drawings() ----\n}]);return SF;}(Component);// Export the interlocking to be drawn on the screen\nexport default SF;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/SF.jsx"],"names":["React","Component","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SW_D_W","SW_D_W_Lined","SW_D_W_Occupied","SW_D_W_R","SW_D_W_R_Lined","SW_D_W_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","SF","state","sw_1","props","status","sw_3","sw_1_src","sw_3_src","tail_1_w","tail_2_w","tail_yard","tail_1_e","tail_2_e","sig_2w_src","sig_4w_src","sig_2e_src","sig_4e1_src","sig_4e2_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_trk_1","route_2","routed_trk_2","routes","set_switch_img","nextProps","setState","reset_drawings","set_route_drawings","background","throw_sw_1","throw_sw_3","click_sig_2e","click_sig_4e_1","click_sig_4e_2","click_sig_2w","click_sig_4w","color_1","color_2","i","length"],"mappings":"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","sourcesContent":["/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for SF Interlocking\n *\n * Extends the React Component Class and is the UI part of the SF Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Main_Line/sf.css';\n\n// Import Images\n// Switch Images \nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\nimport SW_D_W from '../../../images/SW_D_W.png';\nimport SW_D_W_Lined from '../../../images/SW_D_W_Lined.png';\nimport SW_D_W_Occupied from '../../../images/SW_D_W_Occupied.png';\nimport SW_D_W_R from '../../../images/SW_D_W_R.png';\nimport SW_D_W_R_Lined from '../../../images/SW_D_W_R_Lined.png';\nimport SW_D_W_R_Occupied from '../../../images/SW_D_W_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the SF Interlocking\n * \n * This class is a JSX React Component for the SF Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass SF extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: SW_D_W,\n        sw_3_src: CX_225,\n        // Image File for the signals - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_yard: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        // Colors for tail tracks - Will change depending on route\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e1_src: SIG_E,\n        sig_4e2_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_trk_1,\n        route_2: this.props.status.routed_trk_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_trk_1,\n            route_2: nextProps.status.routed_trk_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"sf_title\">SF</div>\n                <div className=\"sf_milepost\">MP 30.5</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"sf_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"sf_2_west\" style={{background: this.state.tail_2_w}}></div>\n                <div className=\"sf_yard\" style={{background: this.state.tail_yard}}></div>\n                {/* Switches */}\n                <div className=\"sf_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"sf_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"sf_1_center_west\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"sf_2_center_west\" style={{background: this.state.tail_2_e}}></div>\n                {/* Signals */}\n                <div className=\"sf_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"sf_sig_4e-1\" onClick={this.props.click_sig_4e_1}><img src={this.state.sig_4e1_src}/></div>\n                <div className=\"sf_sig_4e-2\" onClick={this.props.click_sig_4e_2}><img src={this.state.sig_4e2_src}/></div>\n                <div className=\"sf_sig_2w\" onClick={this.props.click_sig_2w}><img src={this.state.sig_2w_src}/></div>\n                <div className=\"sf_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        // Setting the color of tracks depending on if interlocking is occupied or not\n        let color_1 = Empty;\n        let color_2 = Empty;\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop through all the routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_sterling_sf\" || this.state.routes[i] === \"E_1_1__|__1_sf_wc\") {\n                // Tail Tracks \n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    // Track #2 Is Routed\n                    if (this.state.route_2) {\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Track #2 Is Routed\n                    if (this.state.route_2) {\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_sterling_sf\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_hilburn_sf\" || this.state.routes[i] === \"E_2_2__|__2_sf_wc\") {\n                // Tail Tracks \n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Occupied;\n                    \n                    // Crossovers that could change depending on Track #2\n                    // Track #2 Is Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Lined;\n\n                    // Crossovers that could change depending on Track #2\n                    // Track #2 Is Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_hilburn_sf\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e1_src = SIG_E_Stop;\n                        this.state.sig_4e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e1_src = SIG_E_Clear;\n                        this.state.sig_4e2_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_3__|__3_yardHilburn_sf\" || this.state.routes[i] === \"E_3_2__|__2_sf_wc\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_yard = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n\n                    // Crossovers that could change based off of Track #1\n                    // Track #1 Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Track #1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_3_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n\n                    // Crossovers that could change based off of Track #1\n                    // Track #1 Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    // Track #1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_3_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_3__|__3_yardHilburn_sf\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e1_src = SIG_E_Stop;\n                        this.state.sig_4e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e1_src = SIG_E_Stop;\n                        this.state.sig_4e2_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_hilburn_sf\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_sf_wc\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Clear;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_3__|__2_yardHilburn_sf\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_yard = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches \n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_3_1__|__1_sf_wc\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_yard = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches \n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Clear;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = SW_D_W_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = SW_D_W;\n        }\n        \n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = CX_225_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = CX_225;\n        }\n    }\n    // ---- END set_switch_image() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_yard = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n\n        this.state.sig_2w_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_4e1_src = SIG_E;\n        this.state.sig_4e2_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default SF;"]},"metadata":{},"sourceType":"module"}