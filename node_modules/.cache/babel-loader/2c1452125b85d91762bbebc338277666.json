{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/WC.jsx\";\n\n/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Hilburn Interlocking\n *\n * Extends the React Component Class and is the UI part of the Hilburn Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n// Import React Component\nimport React, { Component } from 'react'; // Import CSS style sheet\n\nimport '../../../css/Main_Line/wc.css'; // Import Images\n// Switch Images\n\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png';\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\nimport SW_U_E from '../../../images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../images/SW_U_E_R_Occupied.png';\nimport SW_U_W from '../../../images/SW_U_W.png';\nimport SW_U_W_Lined from '../../../images/SW_U_W_Lined.png';\nimport SW_U_W_Occupied from '../../../images/SW_U_W_Occupied.png';\nimport SW_U_W_R from '../../../images/SW_U_W_R.png';\nimport SW_U_W_R_Lined from '../../../images/SW_U_W_R_Lined.png';\nimport SW_U_W_R_Occupied from '../../../images/SW_U_W_R_Occupied.png'; // Signal Images\n\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png'; // Color Constants For Drawing Routes\n\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n/**\n * The React JSX Component Class for the WC Interlocking\n * \n * This class is a JSX React Component for the WC Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\n\nclass WC extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Switch Status\n      sw_1: this.props.status.sw_1,\n      sw_3: this.props.status.sw_3,\n      sw_5: this.props.status.sw_5,\n      sw_7: this.props.status.sw_7,\n      // Image File for the switch - Will change depending on route\n      sw_1_src: CX_225,\n      sw_3_src: SW_U_W,\n      sw_5_src: CX_135,\n      sw_7_src: SW_U_E,\n      // Colors for tail tracks - Will change depending on route\n      tail_1_w: Empty,\n      tail_2_w: Empty,\n      tail_yard: Empty,\n      tail_2_center: Empty,\n      tail_1_e: Empty,\n      tail_2_e: Empty,\n      tail_3_e: Empty,\n      // Image File for the signals - Will change depending on route\n      sig_2w1_src: SIG_W,\n      sig_2w2_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_2e1_src: SIG_E,\n      sig_2e2_src: SIG_E,\n      sig_4e_src: SIG_E,\n      // Information For Interlocking Routes\n      occupied_1: this.props.status.occupied_trk_1,\n      occupied_2: this.props.status.occupied_trk_2,\n      route_1: this.props.status.routed_trk_1,\n      route_2: this.props.status.routed_trk_2,\n      routes: this.props.status.routes\n    };\n\n    this.set_switch_img = () => {\n      // Set SW #1\n      // SW #1 Reversed\n      if (this.state.sw_1) {\n        this.state.sw_1_src = CX_225_R;\n      } // SW #1 Normal\n      else {\n          this.state.sw_1_src = CX_225;\n        } // Set SW #3\n      // SW #3 Reversed\n\n\n      if (this.state.sw_3) {\n        this.state.sw_3_src = SW_U_W_R;\n      } // SW #3 Normal\n      else {\n          this.state.sw_3_src = SW_U_W;\n        } // Set SW #5\n      // SW #5 Reversed\n\n\n      if (this.state.sw_5) {\n        this.state.sw_5_src = CX_135_R;\n      } // SW #5 Normal\n      else {\n          this.state.sw_5_src = CX_135;\n        } // Set SW #7\n      // SW #7 Reversed\n\n\n      if (this.state.sw_7) {\n        this.state.sw_7_src = SW_U_E_R;\n      } // SW #7 Normal\n      else {\n          this.state.sw_7_src = SW_U_E;\n        }\n    };\n  }\n\n  /**\n   * componentWillReceiveProps()\n   * @summary Function that updates the state of the component\n   * \n   * The data that is being changed is passed down from the CTC classes in the simulation backend\n   * \n   * @param nextProps, the new data to set the component state too\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sw_1: nextProps.status.sw_1,\n      sw_3: nextProps.status.sw_3,\n      sw_5: nextProps.status.sw_5,\n      sw_7: nextProps.status.sw_7,\n      occupied_1: nextProps.status.occupied_trk_1,\n      occupied_2: nextProps.status.occupied_trk_2,\n      route_1: nextProps.status.routed_trk_1,\n      route_2: nextProps.status.routed_trk_2,\n      routes: nextProps.status.routes\n    });\n  } // ---- END componentWillReceiveProps() ----\n\n  /**\n   * render()\n   * @summary standard React function that draws the interlocking to the screen\n   */\n\n\n  render() {\n    // Clear all the drawings from the interlocking so if a train clears the route is gone\n    this.reset_drawings(); // Set the switch images based off the state of each crossover\n\n    this.set_switch_img(); // Draw all the current routes in the interlocking\n\n    this.set_route_drawings(); // Returns the HTML to draw the interlocking and it's current state to the screen\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wc_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"WC\"), React.createElement(\"div\", {\n      className: \"wc_milepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"MP 23.6\"), React.createElement(\"div\", {\n      className: \"wc_1_west\",\n      style: {\n        background: this.state.tail_1_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wc_2_west\",\n      style: {\n        background: this.state.tail_2_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wc_yard\",\n      style: {\n        background: this.state.tail_yard\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wc_SW_1\",\n      onClick: this.props.throw_sw_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_SW_3\",\n      onClick: this.props.throw_sw_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_SW_5\",\n      onClick: this.props.throw_sw_5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_5_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_SW_7\",\n      onClick: this.props.throw_sw_7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_7_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_2_center\",\n      style: {\n        background: this.state.tail_2_center\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wc_3_east\",\n      style: {\n        background: this.state.tail_3_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wc_1_east\",\n      style: {\n        background: this.state.tail_1_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wc_2_east\",\n      style: {\n        background: this.state.tail_2_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wc_sig_2e-2\",\n      onClick: this.props.click_sig_2e_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2e2_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_sig_2e-1\",\n      onClick: this.props.click_sig_2e_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2e1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_sig_4e\",\n      onClick: this.props.click_sig_4e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_sig_2w-2\",\n      onClick: this.props.click_sig_2w_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w2_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_sig_2w-1\",\n      onClick: this.props.click_sig_2w_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"wc_sig_4w\",\n      onClick: this.props.click_sig_4w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })));\n  } // ---- END render() ----\n\n  /**\n   * @summary Sets the drawing for the route through the interlocking\n   * \n   * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n   * will change depending on if the interlocking is occupied or not\n   */\n\n\n  set_route_drawings() {\n    let color_1 = Empty;\n    let color_2 = Empty; // Setting the color of the tracks depending on if the interlocking in occupied or not\n\n    if (this.state.route_1) {\n      color_1 = Green;\n    }\n\n    if (this.state.route_2) {\n      color_2 = Green;\n    }\n\n    if (this.state.occupied_1) {\n      color_1 = Red;\n    }\n\n    if (this.state.occupied_2) {\n      color_2 = Red;\n    } // Loop Through All The Routes\n\n\n    for (let i = 0; i < this.state.routes.length; i++) {\n      if (this.state.routes[i] === \"W_1_1__|__1_sf_wc\" || this.state.routes[i] === \"E_1_1__|__1_wc_ridgewood\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_1_w = color_1;\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_7_src = SW_U_E_Occupied;\n          this.state.sw_3_src = SW_U_W_Occupied; // Crossovers that could change based off of Track #2 Status\n\n          if (this.state.routes.includes(\"W_2_2__|__2_sf_wc\") || this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")) {\n            // Track #2 Is Occupied\n            if (this.state.occupied_2) {\n              this.state.sw_5_src = CX_135_Occupied_Both;\n              this.state.sw_1_src = CX_225_Occupied_Bottom;\n            } // Track #2 Routed\n            else if (this.state.route_2) {\n                this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n              }\n          } // Nothing Track #2\n          else {\n              this.state.sw_5_src = CX_135_Occupied_Top;\n              this.state.sw_1_src = CX_225_Occupied_Top;\n            } // Signals\n\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_7_src = SW_U_E_Lined;\n          this.state.sw_3_src = SW_U_W_Lined; // Crossovers that could change based off of Track #2 Status\n\n          if (this.state.routes.includes(\"W_2_2__|__2_sf_wc\") || this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")) {\n            // Track #2 Occupied\n            if (this.state.occupied_2) {\n              this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n            } // Track #2 Routed\n            else if (this.state.route_2) {\n                this.state.sw_5_src = CX_135_Lined_Both;\n                this.state.sw_1_src = CX_225_Lined_Both;\n              }\n          } // Nothing Track #2\n          else {\n              this.state.sw_5_src = CX_135_Lined_Top;\n              this.state.sw_1_src = CX_225_Lined_Top;\n            } // Signals\n          // West Bound Signals\n\n\n          if (this.state.routes[i] === \"W_1_1__|__1_sf_wc\") {\n            this.state.sig_2w1_src = SIG_W_Clear;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Stop;\n          } // East Bound Signals\n          else {\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2e1_src = SIG_E_Clear;\n              this.state.sig_2e2_src = SIG_E_Stop;\n            }\n        }\n      } else if (this.state.routes[i] === \"W_2_2__|__2_sf_wc\" || this.state.routes[i] === \"E_2_2__|__2_wc_ridgewood\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_2;\n        this.state.tail_2_center = color_2;\n        this.state.tail_2_w = color_2; // If The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          // Crossovers that could change based of the state of Track #1\n          if (this.state.routes.includes(\"W_1_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\") || this.state.routes.includes(\"W_3_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")) {\n            if (this.state.occupied_1) {\n              this.state.sw_5_src = CX_135_Occupied_Both;\n              this.state.sw_1_src = CX_225_Occupied_Both;\n            } else if (this.state.route_1) {\n              this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n            }\n          } else if (this.state.routes.includes(\"W_3_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\") || this.state.routes.includes(\"W_1_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")) {\n            if (this.state.occupied_1) {\n              this.state.sw_5_src = CX_135_Occupied_Both;\n              this.state.sw_1_src = CX_225_Occupied_Bottom;\n            } else if (this.state.route_1) {\n              this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_1_src = CX_225_Occupied_Bottom;\n            }\n          } // Nothing Track #1\n          else {\n              this.state.sw_5_src = CX_135_Occupied_Bottom;\n              this.state.sw_1_src = CX_225_Occupied_Bottom;\n            } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            // Crossovers that could change based of the state of Track #1\n            if (this.state.routes.includes(\"W_1_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\") || this.state.routes.includes(\"W_3_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")) {\n              if (this.state.occupied_1) {\n                this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n              } else if (this.state.route_1) {\n                this.state.sw_5_src = CX_135_Lined_Both;\n                this.state.sw_1_src = CX_225_Lined_Both;\n              }\n            } else if (this.state.routes.includes(\"W_3_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\") || this.state.routes.includes(\"W_1_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")) {\n              if (this.state.occupied_1) {\n                this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                this.state.sw_1_src = CX_225_Lined_Bottom;\n              } else if (this.state.route_1) {\n                this.state.sw_5_src = CX_135_Lined_Both;\n                this.state.sw_1_src = CX_225_Lined_Bottom;\n              }\n            } // Nothing Track #1\n            else {\n                this.state.sw_5_src = CX_135_Lined_Bottom;\n                this.state.sw_1_src = CX_225_Lined_Bottom;\n              } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_2_2__|__2_sf_wc\") {\n              this.state.sig_4w_src = SIG_W_Clear;\n              this.state.sig_4e_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_4w_src = SIG_W_Stop;\n                this.state.sig_4e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_3_1__|__1_sf_wc\" || this.state.routes[i] === \"E_1_3__|__3_wc_ridgewood\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_1;\n        this.state.tail_1_w = color_1; // If The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_7_src = SW_U_E_R_Occupied;\n          this.state.sw_5_src = CX_135_Occupied_Top;\n          this.state.sw_3_src = SW_U_W_Occupied;\n          this.state.sw_1_src = CX_225_Occupied_Top; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = SW_U_E_R_Lined;\n            this.state.sw_5_src = CX_135_Lined_Top;\n            this.state.sw_3_src = SW_U_W_Lined;\n            this.state.sw_1_src = CX_225_Lined_Top; // Signals\n            // West Bound Signals\n\n            if (this.state.routes[i] === \"W_3_1__|__1_sf_wc\") {\n              this.state.sig_2w2_src = SIG_W_Clear;\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2e1_src = SIG_E_Stop;\n              this.state.sig_2e2_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_2w2_src = SIG_W_Stop;\n                this.state.sig_2w1_src = SIG_W_Stop;\n                this.state.sig_2e1_src = SIG_E_Clear;\n                this.state.sig_2e2_src = SIG_E_Stop;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_3_3__|__0_yard_wc\" || this.state.routes[i] === \"E_3_3__|__3_wc_ridgewood\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_1;\n        this.state.tail_yard = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_7_src = SW_U_E_R_Occupied;\n          this.state.sw_5_src = CX_135_Occupied_Top;\n          this.state.sw_3_src = SW_U_W_R_Occupied; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = SW_U_E_R_Lined;\n            this.state.sw_5_src = CX_135_Lined_Top;\n            this.state.sw_3_src = SW_U_W_R_Lined; // Signals\n            // West Bound Signals\n\n            if (this.state.routes[i] === \"W_3_3__|__0_yard_wc\") {\n              this.state.sig_2w2_src = SIG_W_Clear;\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2e1_src = SIG_E_Stop;\n              this.state.sig_2e2_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_2w2_src = SIG_W_Stop;\n                this.state.sig_2w1_src = SIG_W_Stop;\n                this.state.sig_2e1_src = SIG_E_Stop;\n                this.state.sig_2e2_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_3_2__|__2_sf_wc\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_1;\n        this.state.tail_2_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_7_src = SW_U_E_R_Occupied;\n          this.state.sw_5_src = CX_135_Occupied_Top;\n          this.state.sw_3_src = SW_U_W_Occupied;\n          this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = SW_U_E_R_Lined;\n            this.state.sw_5_src = CX_135_Lined_Top;\n            this.state.sw_3_src = SW_U_W_Lined;\n            this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Clear;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_2_3__|__3_wc_ridgewood\") {\n        // Set Tail Track Colors\n        this.state.tail_3_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_7_src = SW_U_E_R_Occupied;\n          this.state.sw_5_src = CX_135_Occupied_Top;\n          this.state.sw_3_src = SW_U_W_Occupied;\n          this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = SW_U_E_R_Lined;\n            this.state.sw_5_src = CX_135_Lined_Top;\n            this.state.sw_3_src = SW_U_W_Lined;\n            this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Clear;\n          }\n      } else if (this.state.routes[i] === \"W_1_2__|__2_sf_wc\") {\n        // Set Tail Track Colors\n        this.state.tail_1_e = color_1;\n        this.state.tail_2_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_7_src = SW_U_E_Occupied;\n          this.state.sw_5_src = CX_135_Occupied_Top;\n          this.state.sw_3_src = SW_U_W_Occupied;\n          this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = SW_U_E_Lined;\n            this.state.sw_5_src = CX_135_Lined_Top;\n            this.state.sw_3_src = SW_U_W_Lined;\n            this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Clear;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_2_1__|__1_wc_ridgewood\") {\n        // Set Tail Track Colors\n        this.state.tail_1_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_7_src = SW_U_E_Occupied;\n          this.state.sw_5_src = CX_135_Occupied_Top;\n          this.state.sw_3_src = SW_U_W_Occupied;\n          this.state.sw_1_src = CX_225_R_Occupied; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_7_src = SW_U_E_Lined;\n            this.state.sw_5_src = CX_135_Lined_Top;\n            this.state.sw_3_src = SW_U_W_Lined;\n            this.state.sw_1_src = CX_225_R_Lined; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Clear;\n          }\n      } else if (this.state.routes[i] === \"W_2_1__|__1_sf_wc\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_2;\n        this.state.tail_1_w = color_2; // If The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_5_src = CX_135_R_Occupied;\n          this.state.sw_3_src = SW_U_W_Occupied;\n          this.state.sw_1_src = CX_225_Occupied_Top; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // If The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = CX_135_R_Lined;\n            this.state.sw_3_src = SW_U_W_Lined;\n            this.state.sw_1_src = CX_225_Lined_Top; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Clear;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_1_2__|__2_wc_ridgewood\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_1;\n        this.state.tail_1_w = color_1; // If The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_5_src = CX_135_R_Occupied;\n          this.state.sw_3_src = SW_U_W_Occupied;\n          this.state.sw_1_src = CX_225_Occupied_Top; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // If The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = CX_135_R_Lined;\n            this.state.sw_3_src = SW_U_W_Lined;\n            this.state.sw_1_src = CX_225_Lined_Top; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e1_src = SIG_E_Clear;\n            this.state.sig_2e2_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"W_2_3__|__0_yard_wc\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_2;\n        this.state.tail_yard = color_2; // If The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_5_src = CX_135_R_Occupied;\n          this.state.sw_3_src = SW_U_W_R_Occupied; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = CX_135_R_Lined;\n            this.state.sw_3_src = SW_U_W_R_Lined; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Clear;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_3_2__|__2_wc_ridgewood\") {\n        // Set Tail Track Colors\n        this.state.tail_2_e = color_1;\n        this.state.tail_yard = color_1; // If The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_5_src = CX_135_R_Occupied;\n          this.state.sw_3_src = SW_U_W_R_Occupied; // Signals\n\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e1_src = SIG_E_Stop;\n          this.state.sig_2e2_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = CX_135_R_Lined;\n            this.state.sw_3_src = SW_U_W_R_Lined; // Signals\n\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e1_src = SIG_E_Stop;\n            this.state.sig_2e2_src = SIG_E_Clear;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      }\n    }\n  } // ---- END set_route_drawings() ----\n\n  /**\n   * set_switch_img()\n   * @summary Changes image sources for the switches, depending on switch status\n   * \n   * This function uses the data passed in through status from the CTC classes and \n   * shows if the switches are reversed or not on the screen, by changing the image\n   * source files, to the correct .png file respectivly\n   */\n\n\n  // ---- END set_switch_image() ----\n\n  /**\n   * @summary Function to reset the signal images and track colors\n   * \n   * This function is need, because if the player was to remove a route,\n   * or when the train clears the interlocking nothing will clear the route\n   * the is displaying on the screen, even if it's gone in the backend\n   */\n  reset_drawings() {\n    this.state.tail_1_w = Empty;\n    this.state.tail_2_w = Empty;\n    this.state.tail_yard = Empty;\n    this.state.tail_2_center = Empty;\n    this.state.tail_1_e = Empty;\n    this.state.tail_2_e = Empty;\n    this.state.tail_3_e = Empty;\n    this.state.sig_2w1_src = SIG_W;\n    this.state.sig_2w2_src = SIG_W;\n    this.state.sig_4w_src = SIG_W;\n    this.state.sig_2e1_src = SIG_E;\n    this.state.sig_2e2_src = SIG_E;\n    this.state.sig_4e_src = SIG_E;\n  } //---- END reset_drawings() ----\n\n\n} // Export the interlocking to be drawn on the screen\n\n\nexport default WC;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/WC.jsx"],"names":["React","Component","CX_135","CX_135_Lined_Top","CX_135_Lined_Bottom","CX_135_Lined_Both","CX_135_R","CX_135_R_Lined","CX_135_Lined_Top_Occupied_Bottom","CX_135_Occupied_Top_Lined_Bottom","CX_135_Occupied_Top","CX_135_Occupied_Bottom","CX_135_Occupied_Both","CX_135_R_Occupied","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SW_U_E","SW_U_E_Lined","SW_U_E_Occupied","SW_U_E_R","SW_U_E_R_Lined","SW_U_E_R_Occupied","SW_U_W","SW_U_W_Lined","SW_U_W_Occupied","SW_U_W_R","SW_U_W_R_Lined","SW_U_W_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","WC","state","sw_1","props","status","sw_3","sw_5","sw_7","sw_1_src","sw_3_src","sw_5_src","sw_7_src","tail_1_w","tail_2_w","tail_yard","tail_2_center","tail_1_e","tail_2_e","tail_3_e","sig_2w1_src","sig_2w2_src","sig_4w_src","sig_2e1_src","sig_2e2_src","sig_4e_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_trk_1","route_2","routed_trk_2","routes","set_switch_img","componentWillReceiveProps","nextProps","setState","render","reset_drawings","set_route_drawings","background","throw_sw_1","throw_sw_3","throw_sw_5","throw_sw_7","click_sig_2e_2","click_sig_2e_1","click_sig_4e","click_sig_2w_2","click_sig_2w_1","click_sig_4w","color_1","color_2","i","length","includes"],"mappings":"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","sourcesContent":["/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Hilburn Interlocking\n *\n * Extends the React Component Class and is the UI part of the Hilburn Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Main_Line/wc.css';\n\n// Import Images\n// Switch Images\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png';\n\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\nimport SW_U_E from '../../../images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../images/SW_U_E_R_Occupied.png';\n\nimport SW_U_W from '../../../images/SW_U_W.png';\nimport SW_U_W_Lined from '../../../images/SW_U_W_Lined.png';\nimport SW_U_W_Occupied from '../../../images/SW_U_W_Occupied.png';\nimport SW_U_W_R from '../../../images/SW_U_W_R.png';\nimport SW_U_W_R_Lined from '../../../images/SW_U_W_R_Lined.png';\nimport SW_U_W_R_Occupied from '../../../images/SW_U_W_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the WC Interlocking\n * \n * This class is a JSX React Component for the WC Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass WC extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        sw_5: this.props.status.sw_5,\n        sw_7: this.props.status.sw_7,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_225,\n        sw_3_src: SW_U_W,\n        sw_5_src: CX_135,\n        sw_7_src: SW_U_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_yard: Empty,\n        tail_2_center: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        tail_3_e: Empty,\n        // Image File for the signals - Will change depending on route\n        sig_2w1_src: SIG_W,\n        sig_2w2_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e1_src: SIG_E,\n        sig_2e2_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_trk_1,\n        route_2: this.props.status.routed_trk_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            sw_5: nextProps.status.sw_5,\n            sw_7: nextProps.status.sw_7,\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_trk_1,\n            route_2: nextProps.status.routed_trk_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"wc_title\">WC</div>\n                <div className=\"wc_milepost\">MP 23.6</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"wc_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"wc_2_west\" style={{background: this.state.tail_2_w}}></div>\n                <div className=\"wc_yard\" style={{background: this.state.tail_yard}}></div>\n                {/* Switches */}\n                <div className=\"wc_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"wc_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"wc_SW_5\" onClick={this.props.throw_sw_5}><img src={this.state.sw_5_src}/></div>\n                <div className=\"wc_SW_7\" onClick={this.props.throw_sw_7}><img src={this.state.sw_7_src}/></div>\n                {/* Center Tail Tracks */}\n                <div className=\"wc_2_center\" style={{background: this.state.tail_2_center}}></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"wc_3_east\" style={{background: this.state.tail_3_e}}></div>\n                <div className=\"wc_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"wc_2_east\" style={{background: this.state.tail_2_e}}></div>\n                {/* Signals */}\n                <div className=\"wc_sig_2e-2\" onClick={this.props.click_sig_2e_2}><img src={this.state.sig_2e2_src}/></div>\n                <div className=\"wc_sig_2e-1\" onClick={this.props.click_sig_2e_1}><img src={this.state.sig_2e1_src}/></div>\n                <div className=\"wc_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n                <div className=\"wc_sig_2w-2\" onClick={this.props.click_sig_2w_2}><img src={this.state.sig_2w2_src}/></div>\n                <div className=\"wc_sig_2w-1\" onClick={this.props.click_sig_2w_1}><img src={this.state.sig_2w1_src}/></div>\n                <div className=\"wc_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Setting the color of the tracks depending on if the interlocking in occupied or not\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop Through All The Routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_sf_wc\" || this.state.routes[i] === \"E_1_1__|__1_wc_ridgewood\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n\n                    // Crossovers that could change based off of Track #2 Status\n                    if (this.state.routes.includes(\"W_2_2__|__2_sf_wc\") || this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")) {\n                        // Track #2 Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_5_src = CX_135_Occupied_Both;\n                            this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        }\n                        // Track #2 Routed\n                        else if (this.state.route_2) {\n                            this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_5_src = CX_135_Occupied_Top;\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_W_Lined;\n\n                    // Crossovers that could change based off of Track #2 Status\n                    if (this.state.routes.includes(\"W_2_2__|__2_sf_wc\") || this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")) {\n                        // Track #2 Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track #2 Routed\n                        else if (this.state.route_2) {\n                            this.state.sw_5_src = CX_135_Lined_Both;\n                            this.state.sw_1_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_5_src = CX_135_Lined_Top;\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_sf_wc\") {\n                        this.state.sig_2w1_src = SIG_W_Clear;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Clear;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_sf_wc\" || this.state.routes[i] === \"E_2_2__|__2_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_center = color_2;\n                this.state.tail_2_w = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    // Crossovers that could change based of the state of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_3_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Both;\n                            this.state.sw_1_src = CX_225_Occupied_Both;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_3_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_1_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Both;\n                            this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_5_src = CX_135_Occupied_Bottom;\n                        this.state.sw_1_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Crossovers that could change based of the state of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_3_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Both;\n                            this.state.sw_1_src = CX_225_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_3_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_1_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_225_Lined_Bottom;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Both;\n                            this.state.sw_1_src = CX_225_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_5_src = CX_135_Lined_Bottom;\n                        this.state.sw_1_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_sf_wc\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_1__|__1_sf_wc\" || this.state.routes[i] === \"E_1_3__|__3_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_Lined_Top;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_1__|__1_sf_wc\") {\n                        this.state.sig_2w2_src = SIG_W_Clear;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Clear;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_3__|__0_yard_wc\" || this.state.routes[i] === \"E_3_3__|__3_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_1;\n                this.state.tail_yard = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_R_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_3__|__0_yard_wc\") {\n                        this.state.sig_2w2_src = SIG_W_Clear;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_2__|__2_sf_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Clear;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_3__|__3_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_sf_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__1_sf_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_1_w = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // If The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_Lined_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_2__|__2_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // If The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_Lined_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Clear;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_3__|__0_yard_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_yard = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_3_2__|__2_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_1;\n                this.state.tail_yard = color_1;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Clear;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_225_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_225;\n        }\n        \n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = SW_U_W_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = SW_U_W;\n        }\n\n        // Set SW #5\n        // SW #5 Reversed\n        if (this.state.sw_5) {\n            this.state.sw_5_src = CX_135_R;\n        }\n        // SW #5 Normal\n        else {\n            this.state.sw_5_src = CX_135;\n        }\n        \n        // Set SW #7\n        // SW #7 Reversed\n        if (this.state.sw_7) {\n            this.state.sw_7_src = SW_U_E_R;\n        }\n        // SW #7 Normal\n        else {\n            this.state.sw_7_src = SW_U_E;\n        }\n    }\n    // ---- END set_switch_image() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_yard = Empty;\n        this.state.tail_2_center = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n        this.state.tail_3_e = Empty;\n\n        this.state.sig_2w1_src = SIG_W;\n        this.state.sig_2w2_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e1_src = SIG_E;\n        this.state.sig_2e2_src = SIG_E;\n        this.state.sig_4e_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default WC;"]},"metadata":{},"sourceType":"module"}