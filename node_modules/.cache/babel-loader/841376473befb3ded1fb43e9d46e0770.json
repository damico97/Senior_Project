{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/WestSecaucus.jsx\";\n\n/**\n * @file WestSecaucus.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for West Secaucus Interlocking\n *\n * Extends the React Component Class and is the UI part of the West Secaucus Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n// Import React Component\nimport React, { Component } from 'react'; // Import CSS style sheet\n\nimport '../../../css/Main_Line/west_secaucus.css'; // Import Images\n// Switch Images\n\nimport SW_D_E from '../../../images/SW_D_E.png';\nimport SW_D_E_Lined from '../../../images/SW_D_E_Lined.png';\nimport SW_D_E_Occupied from '../../../images/SW_D_E_Occupied.png';\nimport SW_D_E_R from '../../../images/SW_D_E_R.png';\nimport SW_D_E_R_Lined from '../../../images/SW_D_E_R_Lined.png';\nimport SW_D_E_R_Occupied from '../../../images/SW_D_E_R_Occupied.png';\nimport SW_D_W from '../../../images/SW_D_W.png';\nimport SW_D_W_Lined from '../../../images/SW_D_W_Lined.png';\nimport SW_D_W_Occupied from '../../../images/SW_D_W_Occupied.png';\nimport SW_D_W_R from '../../../images/SW_D_W_R.png';\nimport SW_D_W_R_Lined from '../../../images/SW_D_W_R_Lined.png';\nimport SW_D_W_R_Occupied from '../../../images/SW_D_W_R_Occupied.png'; // Signal Images\n\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png'; // Color Constants For Drawing Routes\n\nconst Empty = '#999999';\nconst Lined = '#75fa4c';\nconst Occupied = '#eb3323';\n/**\n * The React JSX Component Class for the West Secaucus Interlocking\n * \n * This class is a JSX React Component for the West Secaucus Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\n\nclass WestSecaucus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Switch Status\n      sw_1: this.props.status.sw_1,\n      sw_3: this.props.status.sw_3,\n      // Image File for the switch - Will change depending on route\n      sw_1_src: SW_D_W,\n      sw_3_src: SW_D_E,\n      // Image File for the signals - Will change depending on route\n      sig_2w_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_2e_src: SIG_E,\n      sig_4e_src: SIG_E,\n      // Colors for tail tracks - Will change depending on route\n      tail_1_e: Empty,\n      tail_1_w: Empty,\n      tail_2_e: Empty,\n      tail_2_w: Empty,\n      // Information For Interlocking Routes\n      routes: this.props.status.routes,\n      occupied: this.props.status.occupied\n    };\n\n    this.set_route_drawing = () => {\n      // Loop through all the Routes\n      for (let i = 0; i < this.state.routes.length; i++) {\n        if (this.state.routes[i] === \"W_1_1__|__1_mill_westSecaucus\" || this.state.routes[i] === \"E_1_1__|__2_westSecaucus_laurel\") {\n          // The Route Is Occupied\n          if (this.state.occupied) {\n            // Set Tail Tracks Color\n            this.state.tail_1_e = Occupied;\n            this.state.tail_center = Occupied;\n            this.state.tail_1_w = Occupied; // Switches\n\n            this.state.sw_1_src = SW_D_W_Occupied;\n            this.state.sw_3_src = SW_D_E_Occupied; // Signals\n\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Set Tail Track Colors\n              this.state.tail_1_e = Lined;\n              this.state.tail_center = Lined;\n              this.state.tail_1_w = Lined; // Switches\n\n              this.state.sw_1_src = SW_D_W_Lined;\n              this.state.sw_3_src = SW_D_E_Lined; // Signals\n              // West Bound Signals\n\n              if (this.state.routes[i] === \"W_1_1__|__1_mill_westSecaucus\") {\n                this.state.sig_2w_src = SIG_W_Clear;\n                this.state.sig_2e_src = SIG_E_Stop;\n                this.state.sig_4w_src = SIG_W_Stop;\n                this.state.sig_4e_src = SIG_E_Stop;\n              } // East Bound Signals\n              else {\n                  this.state.sig_2w_src = SIG_W_Stop;\n                  this.state.sig_2e_src = SIG_E_Clear;\n                  this.state.sig_4w_src = SIG_W_Stop;\n                  this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        } else if (this.state.routes[i] === \"W_1_2__|__2_mill_westSecaucus\" || this.state.routes[i] === \"E_2_1__|__2_westSecaucus_laurel\") {\n          // The Route Is Occupied\n          if (this.state.occupied) {\n            // Set Tail Track Colors\n            this.state.tail_1_e = Occupied;\n            this.state.tail_center = Occupied;\n            this.state.tail_2_w = Occupied; // Switches\n\n            this.state.sw_1_src = SW_D_W_R_Occupied;\n            this.state.sw_3_src = SW_D_E_Occupied; // Signals\n\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } else {\n            // Set Tail Track Colors\n            this.state.tail_1_e = Lined;\n            this.state.tail_center = Lined;\n            this.state.tail_2_w = Lined; // Switches\n\n            this.state.sw_1_src = SW_D_W_R_Lined;\n            this.state.sw_3_src = SW_D_E_Lined; // Signals\n            // West Bound Signals\n\n            if (this.state.routes[i] === \"W_1_2__|__2_mill_westSecaucus\") {\n              this.state.sig_2w_src = SIG_W_Clear;\n              this.state.sig_2e_src = SIG_E_Stop;\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_4e_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_2w_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Stop;\n                this.state.sig_4w_src = SIG_W_Stop;\n                this.state.sig_4e_src = SIG_E_Clear;\n              }\n          }\n        } else if (this.state.routes[i] === \"W_2_1__|__1_mill_westSecaucus\" || this.state.routes[i] === \"E_1_2__|__4_westSecaucus_laurel\") {\n          // The Route Is Occupied\n          if (this.state.occupied) {\n            // Set Tail Track Colors\n            this.state.tail_2_e = Occupied;\n            this.state.tail_center = Occupied;\n            this.state.tail_1_w = Occupied; // Switches\n\n            this.state.sw_1_src = SW_D_W_Occupied;\n            this.state.sw_3_src = SW_D_E_R_Occupied; // Signals\n\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Set Tail Track Colors\n              this.state.tail_2_e = Lined;\n              this.state.tail_center = Lined;\n              this.state.tail_1_w = Lined; // Switches\n\n              this.state.sw_1_src = SW_D_W_Lined;\n              this.state.sw_3_src = SW_D_E_R_Lined; // Signals\n              // West Bound Signals\n\n              if (this.state.routes[i] === \"W_2_1__|__1_mill_westSecaucus\") {\n                this.state.sig_2w_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Stop;\n                this.state.sig_4w_src = SIG_W_Clear;\n                this.state.sig_4e_src = SIG_E_Stop;\n              } // East Bound Signals\n              else {\n                  this.state.sig_2w_src = SIG_W_Stop;\n                  this.state.sig_2e_src = SIG_E_Clear;\n                  this.state.sig_4w_src = SIG_W_Stop;\n                  this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        } else if (this.state.routes[i] === \"W_2_2__|__2_mill_westSecaucus\" || this.state.routes[i] === \"E_2_2__|__4_westSecaucus_laurel\") {\n          // The Route Is Occupied\n          if (this.state.occupied) {\n            // Set Tail Track Colors\n            this.state.tail_2_e = Occupied;\n            this.state.tail_center = Occupied;\n            this.state.tail_2_w = Occupied; // Switches\n\n            this.state.sw_1_src = SW_D_W_R_Occupied;\n            this.state.sw_3_src = SW_D_E_R_Occupied; // Signals\n\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          } // The Route Is NOT Occupied\n          else {\n              // Set Tail Track Colors\n              this.state.tail_2_e = Lined;\n              this.state.tail_center = Lined;\n              this.state.tail_2_w = Lined; // Switches\n\n              this.state.sw_1_src = SW_D_W_R_Lined;\n              this.state.sw_3_src = SW_D_E_R_Lined; // Signals\n              // West Bound Signals\n\n              if (this.state.routes[i] === \"W_2_2__|__2_mill_westSecaucus\") {\n                this.state.sig_2w_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Stop;\n                this.state.sig_4w_src = SIG_W_Clear;\n                this.state.sig_4e_src = SIG_E_Stop;\n              } // East Bound Signals\n              else {\n                  this.state.sig_2w_src = SIG_W_Stop;\n                  this.state.sig_2e_src = SIG_E_Stop;\n                  this.state.sig_4w_src = SIG_W_Stop;\n                  this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n        }\n      }\n    };\n\n    this.set_switch_img = () => {\n      if (this.state.sw_1) {\n        this.state.sw_1_src = SW_D_W_R;\n      } else {\n        this.state.sw_1_src = SW_D_W;\n      }\n\n      if (this.state.sw_3) {\n        this.state.sw_3_src = SW_D_E_R;\n      } else {\n        this.state.sw_3_src = SW_D_E;\n      }\n    };\n  }\n\n  /**\n   * componentWillReceiveProps()\n   * @summary Function that updates the state of the component\n   * \n   * The data that is being changed is passed down from the CTC classes in the simulation backend\n   * \n   * @param nextProps, the new data to set the component state too\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sw_1: nextProps.status.sw_1,\n      sw_3: nextProps.status.sw_3,\n      sig_2w_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_2e_src: SIG_E,\n      sig_4e_src: SIG_E,\n      tail_1_e: Empty,\n      tail_1_w: Empty,\n      tail_center: Empty,\n      tail_2_e: Empty,\n      tail_2_w: Empty,\n      routes: nextProps.status.routes,\n      occupied: nextProps.status.occupied\n    });\n  } // ---- END componentWillReceiveProps() ----\n\n  /**\n   * render()\n   * @summary standard React function that draws the interlocking to the screen\n   */\n\n\n  render() {\n    // Set the switch images based off the state of each crossover\n    this.set_switch_img(); // Draw all the current routes in the interlocking\n\n    this.set_route_drawing(); // Returns the HTML to draw the interlocking and it's current state to the screen\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"westSecaucus_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"WEST SECAUCUS\"), React.createElement(\"div\", {\n      className: \"westSecaucus_milepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"MP 5.0\"), React.createElement(\"div\", {\n      className: \"m_westSecaucus_1_east\",\n      style: {\n        background: this.state.tail_1_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_westSecaucus_2_east\",\n      style: {\n        background: this.state.tail_2_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"westSecaucus_SW_1\",\n      onClick: this.props.throw_sw_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"m_westSecaucus_bridge\",\n      style: {\n        background: this.state.tail_center\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"westSecaucus_SW_3\",\n      onClick: this.props.throw_sw_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"m_westSecaucus_1_west\",\n      style: {\n        background: this.state.tail_1_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m_westSecaucus_2_west\",\n      style: {\n        background: this.state.tail_2_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"westSecaucus_sig_2e\",\n      onClick: this.props.click_sig_2e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"westSecaucus_sig_4e\",\n      onClick: this.props.click_sig_4e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"westSecaucus_sig_2w\",\n      onClick: this.props.click_sig_2w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"westSecaucus_sig_4w\",\n      onClick: this.props.click_sig_4w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })));\n  } // ---- END render() ----\n\n  /**\n   * @summary Sets the drawing for the route through the interlocking\n   * \n   * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n   * will change depending on if the interlocking is occupied or not\n   */\n  // ---- END set_switch_image() ----\n\n\n} // Export the interlocking to be drawn on the screen\n\n\nexport default WestSecaucus;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/WestSecaucus.jsx"],"names":["React","Component","SW_D_E","SW_D_E_Lined","SW_D_E_Occupied","SW_D_E_R","SW_D_E_R_Lined","SW_D_E_R_Occupied","SW_D_W","SW_D_W_Lined","SW_D_W_Occupied","SW_D_W_R","SW_D_W_R_Lined","SW_D_W_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Lined","Occupied","WestSecaucus","state","sw_1","props","status","sw_3","sw_1_src","sw_3_src","sig_2w_src","sig_4w_src","sig_2e_src","sig_4e_src","tail_1_e","tail_1_w","tail_2_e","tail_2_w","routes","occupied","set_route_drawing","i","length","tail_center","set_switch_img","componentWillReceiveProps","nextProps","setState","render","background","throw_sw_3","throw_sw_1","click_sig_2e","click_sig_4e","click_sig_2w","click_sig_4w"],"mappings":"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","sourcesContent":["/**\n * @file WestSecaucus.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for West Secaucus Interlocking\n *\n * Extends the React Component Class and is the UI part of the West Secaucus Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Main_Line/west_secaucus.css';\n\n// Import Images\n// Switch Images\nimport SW_D_E from '../../../images/SW_D_E.png';\nimport SW_D_E_Lined from '../../../images/SW_D_E_Lined.png';\nimport SW_D_E_Occupied from '../../../images/SW_D_E_Occupied.png'\nimport SW_D_E_R from '../../../images/SW_D_E_R.png';\nimport SW_D_E_R_Lined from '../../../images/SW_D_E_R_Lined.png';\nimport SW_D_E_R_Occupied from '../../../images/SW_D_E_R_Occupied.png';\n\nimport SW_D_W from '../../../images/SW_D_W.png';\nimport SW_D_W_Lined from '../../../images/SW_D_W_Lined.png';\nimport SW_D_W_Occupied from '../../../images/SW_D_W_Occupied.png'\nimport SW_D_W_R from '../../../images/SW_D_W_R.png';\nimport SW_D_W_R_Lined from '../../../images/SW_D_W_R_Lined.png';\nimport SW_D_W_R_Occupied from '../../../images/SW_D_W_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Lined = '#75fa4c';\nconst Occupied = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the West Secaucus Interlocking\n * \n * This class is a JSX React Component for the West Secaucus Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass WestSecaucus extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: SW_D_W,\n        sw_3_src: SW_D_E,\n        // Image File for the signals - Will change depending on route\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_e: Empty,\n        tail_1_w: Empty,\n        tail_2_e: Empty,\n        tail_2_w: Empty,\n        // Information For Interlocking Routes\n        routes: this.props.status.routes,\n        occupied: this.props.status.occupied\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            sw_1: nextProps.status.sw_1,\n            sw_3: nextProps.status.sw_3,\n            sig_2w_src: SIG_W,\n            sig_4w_src: SIG_W,\n            sig_2e_src: SIG_E,\n            sig_4e_src: SIG_E,\n            tail_1_e: Empty,\n            tail_1_w: Empty,\n            tail_center: Empty,\n            tail_2_e: Empty,\n            tail_2_w: Empty,\n            routes: nextProps.status.routes,\n            occupied: nextProps.status.occupied\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawing();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return ( \n            <div>\n                {/* Tags */}\n                <div className=\"westSecaucus_title\">WEST SECAUCUS</div>\n                <div className=\"westSecaucus_milepost\">MP 5.0</div>\n                {/* East Side Tail Tracks */}\n                <div className=\"m_westSecaucus_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"m_westSecaucus_2_east\" style={{background: this.state.tail_2_e}}></div>\n                {/* Switches */}\n                <div className=\"westSecaucus_SW_1\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"m_westSecaucus_bridge\" style={{background: this.state.tail_center}}></div>\n                <div className=\"westSecaucus_SW_3\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                {/* West Side Tail Tracks */}\n                <div className=\"m_westSecaucus_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"m_westSecaucus_2_west\" style={{background: this.state.tail_2_w}}></div>\n                {/* Signals */}\n                <div className=\"westSecaucus_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"westSecaucus_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n                <div className=\"westSecaucus_sig_2w\" onClick={this.props.click_sig_2w}><img src={this.state.sig_2w_src}/></div>\n                <div className=\"westSecaucus_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawing = () => {\n        // Loop through all the Routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_mill_westSecaucus\" || this.state.routes[i] === \"E_1_1__|__2_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Tracks Color\n                    this.state.tail_1_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_1_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Occupied;\n                    this.state.sw_3_src = SW_D_E_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_1_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_1_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Lined;\n                    this.state.sw_3_src = SW_D_E_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_mill_westSecaucus\" || this.state.routes[i] === \"E_2_1__|__2_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Track Colors\n                    this.state.tail_1_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_2_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n                    this.state.sw_3_src = SW_D_E_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_1_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_2_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n                    this.state.sw_3_src = SW_D_E_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_2__|__2_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__1_mill_westSecaucus\" || this.state.routes[i] === \"E_1_2__|__4_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_1_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Occupied;\n                    this.state.sw_3_src = SW_D_E_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_1_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Lined;\n                    this.state.sw_3_src = SW_D_E_R_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_1__|__1_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_mill_westSecaucus\" || this.state.routes[i] === \"E_2_2__|__4_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_2_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n                    this.state.sw_3_src = SW_D_E_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_2_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n                    this.state.sw_3_src = SW_D_E_R_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            } \n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        if (this.state.sw_1) {\n            this.state.sw_1_src = SW_D_W_R;\n        }\n        else {\n            this.state.sw_1_src = SW_D_W;\n        }\n        \n        if (this.state.sw_3) {\n            this.state.sw_3_src = SW_D_E_R;\n        }\n        else {\n            this.state.sw_3_src = SW_D_E;\n        }\n    }\n    // ---- END set_switch_image() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default WestSecaucus;"]},"metadata":{},"sourceType":"module"}