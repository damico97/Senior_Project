{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Bergen_County_Line/BT.jsx\";\n\n/**\n * @file BT.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for BT Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the BT Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n// Import React Component\nimport React, { Component } from 'react'; // Import CSS style sheet\n\nimport '../../../css/Bergen_County_Line/bt.css'; // Import Images\n// Switch Images\n\nimport CX_135 from '../../../../public/images/CX_135.png';\nimport CX_135_Lined_Top from '../../../../public/images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../../public/images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../../public/images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../../public/images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../../public/images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../../public/images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../../public/images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../../public/images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../../public/images/CX_135_R_Occupied.png';\nimport CX_225 from '../../../../public/images/CX_225.png';\nimport CX_225_Lined_Top from '../../../../public/images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../../public/images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../../public/images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../../public/images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../../public/images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../../public/images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../../public/images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../../public/images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../../public/images/CX_225_R_Occupied.png';\nimport SW_U_E from '../../../../public/images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../../public/images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../../public/images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../../public/images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../../public/images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../../public/images/SW_U_E_R_Occupied.png'; // Signal Images\n\nimport SIG_W from '../../../../public/images/SIG_W.png';\nimport SIG_W_Clear from '../../../../public/images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../../public/images/SIG_W_Stop.png';\nimport SIG_E from '../../../../public/images/SIG_E.png';\nimport SIG_E_Clear from '../../../../public/images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../../public/images/SIG_E_Stop.png'; // Color Constants For Drawing Routes\n\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n/**\n * The React JSX Component Class for the BT Interlocking\n *\n * This class is a JSX React Component for the BT Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\n\nclass BT extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Switch Status\n      sw_1: this.props.status.sw_1,\n      sw_3: this.props.status.sw_3,\n      sw_5: this.props.status.sw_5,\n      // Image File for the switch - Will change depending on route\n      sw_1_src: CX_135,\n      sw_3_src: CX_225,\n      sw_5_src: SW_U_E,\n      // Colors for tail tracks - Will change depending on route\n      tail_1_w: Empty,\n      tail_2_w: Empty,\n      tail_1_e: Empty,\n      tail_2_e: Empty,\n      tail_3_e: Empty,\n      // Image File for the signals - Will change depending on route\n      sig_2w1_src: SIG_W,\n      sig_2w2_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_2e_src: SIG_E,\n      sig_4e_src: SIG_E,\n      // Information For Interlocking Routes\n      occupied_1: this.props.status.occupied_trk_1,\n      occupied_2: this.props.status.occupied_trk_2,\n      route_1: this.props.status.routed_1,\n      route_2: this.props.status.routed_2,\n      routes: this.props.status.routes\n    };\n  }\n\n  /**\n   * componentWillReceiveProps()\n   * @summary Function that updates the state of the component The data that is being changed is passed down from the CTC classes in the simulation backend\n   * \n   * @param nextProps, the new data to set the component state too\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sw_1: nextProps.status.sw_1,\n      sw_3: nextProps.status.sw_3,\n      sw_5: nextProps.status.sw_5,\n      occupied_1: nextProps.status.occupied_trk_1,\n      occupied_2: nextProps.status.occupied_trk_2,\n      route_1: nextProps.status.routed_1,\n      route_2: nextProps.status.routed_2,\n      routes: nextProps.status.routes\n    });\n  } // ---- END componentWillReceiveProps() ----\n\n  /**\n   * render()\n   * @summary standard React function that draws the interlocking to the screen\n   */\n\n\n  render() {\n    // Clear all the drawings from the interlocking so if a train clears the route is gone\n    this.reset_drawings(); // Set the switch images based off the state of each crossover\n\n    this.set_switch_images(); // Draw all the current routes in the interlocking\n\n    this.set_route_drawings(); // Returns the HTML to draw the interlocking and it's current state to the screen\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bt_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"BT\"), React.createElement(\"div\", {\n      className: \"bt_milepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"MP 14.2\"), React.createElement(\"div\", {\n      className: \"bt_1_west\",\n      style: {\n        background: this.state.tail_1_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bt_2_west\",\n      style: {\n        background: this.state.tail_2_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bt_SW_1\",\n      onClick: this.props.throw_sw_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bt_SW_3\",\n      onClick: this.props.throw_sw_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bt_SW_5\",\n      onClick: this.props.throw_sw_5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_5_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bt_1_east\",\n      style: {\n        background: this.state.tail_1_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bt_2_east\",\n      style: {\n        background: this.state.tail_2_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bt_3_east\",\n      style: {\n        background: this.state.tail_3_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bt_sig_2w-2\",\n      onClick: this.props.click_sig_2w2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w2_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bt_sig_2w-1\",\n      onClick: this.props.click_sig_2w1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bt_sig_4w\",\n      onClick: this.props.click_sig_4w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bt_sig_2e\",\n      onClick: this.props.click_sig_2e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bt_sig_4e\",\n      onClick: this.props.click_sig_4e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })));\n  } // ---- END render() ----\n\n  /**\n   * @summary Sets the drawing for the route through the interlocking\n   * \n   * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n   * will change depending on if the interlocking is occupied or not\n   */\n\n\n  set_route_drawings() {\n    let color_1 = Empty;\n    let color_2 = Empty; // Setting the color of the tracks depending on if the interlocking in occupied or not\n\n    if (this.state.route_1) {\n      color_1 = Green;\n    }\n\n    if (this.state.route_2) {\n      color_2 = Green;\n    }\n\n    if (this.state.occupied_1) {\n      color_1 = Red;\n    }\n\n    if (this.state.occupied_2) {\n      color_2 = Red;\n    } // Loop through all the routes\n\n\n    for (let i = 0; i < this.state.routes.length; i++) {\n      if (this.state.routes[i] === \"W_1_1__|__3_ridgewood_bt\" || this.state.routes[i] === \"E_1_1__|__1_bt_pascack\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_1_w = color_1; // The route is occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_5_src = SW_U_E_Occupied; // Crossovers that could change based off Track #2\n          // Track #2 Routed\n\n          if (this.state.route_2) {\n            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n          } // Track #2 Occupied\n          else if (this.state.occupied_2) {\n              this.state.sw_1_src = CX_135_Occupied_Both;\n              this.state.sw_3_src = CX_225_Occupied_Both;\n            } // Nothing Track #2\n            else {\n                this.state.sw_1_src = CX_135_Occupied_Top;\n                this.state.sw_3_src = CX_225_Occupied_Top;\n              } // Signals\n\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n        } // The route is NOT occupied\n        else {\n            // Switches\n            this.state.sw_5_src = SW_U_E_Lined; // Crossovers that could change based off of Track #2\n            // Track #2 Routed\n\n            if (this.state.route_2) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_3_src = CX_225_Lined_Both;\n            } // Track #2 Occupied\n            else if (this.state.occupied_2) {\n                this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n              } // Nothing Track #2\n              else {\n                  this.state.sw_1_src = CX_135_Lined_Top;\n                  this.state.sw_3_src = CX_225_Lined_Top;\n                } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_1_1__|__3_ridgewood_bt\") {\n              this.state.sig_2w1_src = SIG_W_Clear;\n              this.state.sig_2w2_src = SIG_W_Stop;\n              this.state.sig_2e_src = SIG_E_Stop;\n            } // East Bound Signals \n            else {\n                this.state.sig_2w1_src = SIG_W_Stop;\n                this.state.sig_2w2_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_3_1__|__3_ridgewood_bt\" || this.state.routes[i] === \"E_1_3__|__3_bt_nysw\") {\n        // Tail Tracks\n        this.state.tail_3_e = color_1;\n        this.state.tail_1_w = color_1; // If The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_5_src = SW_U_E_R_Occupied; // Crossovers that can change depending on the other track\n\n          if (this.state.route_2) {\n            this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n            this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n          } else if (this.state.occupied_2) {\n            this.state.sw_1_src = CX_135_Occupied_Both;\n            this.state.sw_3_src = CX_225_Occupied_Both;\n          } else {\n            this.state.sw_1_src = CX_135_Occupied_Top;\n            this.state.sw_3_src = CX_225_Occupied_Top;\n          } // Signals\n\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n        } // The Route Is Not Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = SW_U_E_R_Lined; // Crossovers that can change depending on the other track\n\n            if (this.state.route_2) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_3_src = CX_225_Lined_Both;\n            } else if (this.state.occupied_2) {\n              this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n              this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n            } else {\n              this.state.sw_1_src = CX_135_Lined_Top;\n              this.state.sw_3_src = CX_225_Lined_Top;\n            } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_3_1__|__3_ridgewood_bt\") {\n              this.state.sig_2w1_src = SIG_W_Stop;\n              this.state.sig_2w2_src = SIG_W_Clear;\n              this.state.sig_2e_src = SIG_E_Stop;\n            } // East Bound Signals \n            else {\n                this.state.sig_2w1_src = SIG_W_Stop;\n                this.state.sig_2w2_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_2_2__|__4_ridgewood_bt\" || this.state.routes[i] === \"E_2_2__|__2_bt_pascack\") {\n        // Tail Tracks\n        this.state.tail_2_e = color_2;\n        this.state.tail_2_w = color_2; // If the Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches \n          // Crossovers that can change depending on the other track\n          if (this.state.route_1) {\n            this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n            this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n          } else if (this.state.occupied_1) {\n            this.state.sw_1_src = CX_135_Occupied_Both;\n            this.state.sw_3_src = CX_225_Occupied_Both;\n          } else {\n            this.state.sw_1_src = CX_135_Occupied_Bottom;\n            this.state.sw_3_src = CX_225_Occupied_Bottom;\n          } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route In Not Occupied\n        else {\n            // Switches\n            // Crossovers that can change depending on the other track\n            if (this.state.route_1) {\n              this.state.sw_1_src = CX_135_Lined_Both;\n              this.state.sw_3_src = CX_225_Lined_Both;\n            } else if (this.state.occupied_1) {\n              this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n              this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n            } else {\n              this.state.sw_1_src = CX_135_Lined_Bottom;\n              this.state.sw_3_src = CX_225_Lined_Bottom;\n            } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_2_2__|__4_ridgewood_bt\") {\n              this.state.sig_4w_src = SIG_W_Clear;\n              this.state.sig_4e_src = SIG_E_Stop;\n            } // East Bound Signals \n            else {\n                this.state.sig_4w_src = SIG_W_Stop;\n                this.state.sig_4e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_1_2__|__4_ridgewood_bt\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_2_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_5_src = SW_U_E_Occupied;\n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Signals\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = SW_U_E_Lined;\n            this.state.sw_3_src = CX_225_R_Lined;\n            this.state.sw_1_src = CX_135_Lined_Bottom; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Clear;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_2_1__|__1_bt_pascack\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_5_src = SW_U_E_Occupied;\n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Signals\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = SW_U_E_Lined;\n            this.state.sw_3_src = CX_225_R_Lined;\n            this.state.sw_1_src = CX_135_Lined_Bottom; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Clear;\n          }\n      } else if (this.state.routes[i] === \"W_3_2__|__4_ridgewood_bt\") {\n        // Tail Tracks\n        this.state.tail_3_e = color_1;\n        this.state.tail_2_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_5_src = SW_U_E_R_Occupied;\n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Signals\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = SW_U_E_R_Lined;\n            this.state.sw_3_src = CX_225_R_Lined;\n            this.state.sw_1_src = CX_135_Lined_Bottom; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Clear;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_2_3__|__3_bt_nysw\") {\n        // Tail Tracks\n        this.state.tail_3_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_5_src = SW_U_E_R_Occupied;\n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = CX_135_Occupied_Bottom; // Signals\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_5_src = SW_U_E_R_Lined;\n            this.state.sw_3_src = CX_225_R_Lined;\n            this.state.sw_1_src = CX_135_Lined_Bottom; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Clear;\n          }\n      } else if (this.state.routes[i] === \"W_2_1__|__3_ridgewood_bt\") {\n        // Tail Tracks\n        this.state.tail_2_e = color_2;\n        this.state.tail_1_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_3_src = CX_225_Occupied_Bottom;\n          this.state.sw_1_src = CX_135_R_Occupied; // Signals\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = CX_225_Lined_Bottom;\n            this.state.sw_1_src = CX_135_R_Lined; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Clear;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_1_2__|__2_bt_pascack\") {\n        // Tail Tracks\n        this.state.tail_2_e = color_1;\n        this.state.tail_1_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_3_src = CX_225_Occupied_Bottom;\n          this.state.sw_1_src = CX_135_R_Occupied; // Signals\n\n          this.state.sig_2w1_src = SIG_W_Stop;\n          this.state.sig_2w2_src = SIG_W_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = CX_225_Lined_Bottom;\n            this.state.sw_1_src = CX_135_R_Lined; // Signals\n\n            this.state.sig_2w1_src = SIG_W_Stop;\n            this.state.sig_2w2_src = SIG_W_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Clear;\n            this.state.sig_4e_src = SIG_E_Stop;\n          }\n      }\n    }\n  } // ---- END set_route_drawings() ----\n\n  /**\n   * set_switch_img()\n   * @summary Changes image sources for the switches, depending on switch status\n   * \n   * @description This function uses the data passed in through status from the CTC classes and \n   * shows if the switches are reversed or not on the screen, by changing the image\n   * source files, to the correct .png file respectivly\n   */\n\n\n  set_switch_images() {\n    // Set SW #1\n    // SW #1 Reversed\n    if (this.state.sw_1) {\n      this.state.sw_1_src = CX_135_R;\n    } // SW #1 Normal\n    else {\n        this.state.sw_1_src = CX_135;\n      } // Set SW #3\n    // SW #3 Reversed\n\n\n    if (this.state.sw_3) {\n      this.state.sw_3_src = CX_225_R;\n    } // SW #3 Normal\n    else {\n        this.state.sw_3_src = CX_225;\n      } // Set SW #5\n    // SW #5 Reversed\n\n\n    if (this.state.sw_5) {\n      this.state.sw_5_src = SW_U_E_R;\n    } // SW #5 Normal\n    else {\n        this.state.sw_5_src = SW_U_E;\n      }\n  } // ---- END set_switch_image() ----\n\n  /**\n   * @summary Function to reset the signal images and track colors\n   * \n   * @description This function is need, because if the player was to remove a route,\n   * or when the train clears the interlocking nothing will clear the route\n   * the is displaying on the screen, even if it's gone in the backend\n   */\n\n\n  reset_drawings() {\n    this.state.tail_1_w = Empty;\n    this.state.tail_2_w = Empty;\n    this.state.tail_1_e = Empty;\n    this.state.tail_2_e = Empty;\n    this.state.tail_3_e = Empty;\n    this.state.sig_2w1_src = SIG_W;\n    this.state.sig_2w2_src = SIG_W;\n    this.state.sig_4w_src = SIG_W;\n    this.state.sig_2e_src = SIG_E;\n    this.state.sig_4e_src = SIG_E;\n  } //---- END reset_drawings() ----\n\n\n} // Export the interlocking to be drawn on the screen\n\n\nexport default BT;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Bergen_County_Line/BT.jsx"],"names":["React","Component","CX_135","CX_135_Lined_Top","CX_135_Lined_Bottom","CX_135_Lined_Both","CX_135_R","CX_135_R_Lined","CX_135_Lined_Top_Occupied_Bottom","CX_135_Occupied_Top_Lined_Bottom","CX_135_Occupied_Top","CX_135_Occupied_Bottom","CX_135_Occupied_Both","CX_135_R_Occupied","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SW_U_E","SW_U_E_Lined","SW_U_E_Occupied","SW_U_E_R","SW_U_E_R_Lined","SW_U_E_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","BT","state","sw_1","props","status","sw_3","sw_5","sw_1_src","sw_3_src","sw_5_src","tail_1_w","tail_2_w","tail_1_e","tail_2_e","tail_3_e","sig_2w1_src","sig_2w2_src","sig_4w_src","sig_2e_src","sig_4e_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_1","route_2","routed_2","routes","componentWillReceiveProps","nextProps","setState","render","reset_drawings","set_switch_images","set_route_drawings","background","throw_sw_1","throw_sw_3","throw_sw_5","click_sig_2w2","click_sig_2w1","click_sig_4w","click_sig_2e","click_sig_4e","color_1","color_2","i","length"],"mappings":"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","sourcesContent":["/**\n * @file BT.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for BT Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the BT Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Bergen_County_Line/bt.css';\n \n// Import Images\n// Switch Images\nimport CX_135 from '../../../../public/images/CX_135.png';\nimport CX_135_Lined_Top from '../../../../public/images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../../public/images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../../public/images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../../public/images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../../public/images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../../public/images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../../public/images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../../public/images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../../public/images/CX_135_R_Occupied.png';\n\nimport CX_225 from '../../../../public/images/CX_225.png';\nimport CX_225_Lined_Top from '../../../../public/images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../../public/images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../../public/images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../../public/images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../../public/images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../../public/images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../../public/images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../../public/images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../../public/images/CX_225_R_Occupied.png';\n\nimport SW_U_E from '../../../../public/images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../../public/images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../../public/images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../../public/images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../../public/images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../../public/images/SW_U_E_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../../public/images/SIG_W.png';\nimport SIG_W_Clear from '../../../../public/images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../../public/images/SIG_W_Stop.png';\nimport SIG_E from '../../../../public/images/SIG_E.png';\nimport SIG_E_Clear from '../../../../public/images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../../public/images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the BT Interlocking\n *\n * This class is a JSX React Component for the BT Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass BT extends Component {\n    /**\n     * @summary Object that holds the state or status information for the component\n     * \n     * @description This object holds all the information for the interlocking that is required to display the routes \n     * correctly Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        sw_5: this.props.status.sw_5,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_135,\n        sw_3_src: CX_225,\n        sw_5_src: SW_U_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        tail_3_e: Empty,\n        // Image File for the signals - Will change depending on route\n        sig_2w1_src: SIG_W,\n        sig_2w2_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_1,\n        route_2: this.props.status.routed_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            sw_5: nextProps.status.sw_5,\n\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_1,\n            route_2: nextProps.status.routed_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings(); \n        // Set the switch images based off the state of each crossover\n        this.set_switch_images();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return ( \n            <div>\n                {/* Tags */}\n                <div className=\"bt_title\">BT</div>\n                <div className=\"bt_milepost\">MP 14.2</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"bt_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"bt_2_west\" style={{background: this.state.tail_2_w}}></div>\n                {/* Switches */}\n                <div className=\"bt_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"bt_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"bt_SW_5\" onClick={this.props.throw_sw_5}><img src={this.state.sw_5_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"bt_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"bt_2_east\" style={{background: this.state.tail_2_e}}></div>\n                <div className=\"bt_3_east\" style={{background: this.state.tail_3_e}}></div>\n                {/* Signals */}\n                <div className=\"bt_sig_2w-2\" onClick={this.props.click_sig_2w2}><img src={this.state.sig_2w2_src}/></div>\n                <div className=\"bt_sig_2w-1\" onClick={this.props.click_sig_2w1}><img src={this.state.sig_2w1_src}/></div>\n                <div className=\"bt_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n                <div className=\"bt_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"bt_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Setting the color of the tracks depending on if the interlocking in occupied or not\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop through all the routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__3_ridgewood_bt\" || this.state.routes[i] === \"E_1_1__|__1_bt_pascack\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The route is occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n\n                    // Crossovers that could change based off Track #2\n                    // Track #2 Routed\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Track #2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_135_Occupied_Both;\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Top;\n                        this.state.sw_3_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The route is NOT occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n\n                    // Crossovers that could change based off of Track #2\n                    // Track #2 Routed\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_135_Lined_Both;\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    // Track #2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Top;\n                        this.state.sw_3_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__3_ridgewood_bt\") {\n                        this.state.sig_2w1_src = SIG_W_Clear;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals \n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_1__|__3_ridgewood_bt\" || this.state.routes[i] === \"E_1_3__|__3_bt_nysw\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n\n                    // Crossovers that can change depending on the other track\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_135_Occupied_Both;\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Top;\n                        this.state.sw_3_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is Not Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n\n                    // Crossovers that can change depending on the other track\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_135_Lined_Both;\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Top;\n                        this.state.sw_3_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_1__|__3_ridgewood_bt\") {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals \n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__4_ridgewood_bt\" || this.state.routes[i] === \"E_2_2__|__2_bt_pascack\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // If the Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches \n                    // Crossovers that can change depending on the other track\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_135_Lined_Top_Occupied_Bottom;\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_135_Occupied_Both;\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_135_Occupied_Bottom;\n                        this.state.sw_3_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route In Not Occupied\n                else {\n                    // Switches\n                    // Crossovers that can change depending on the other track\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_135_Lined_Both;\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_135_Occupied_Top_Lined_Bottom;\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    else {\n                        this.state.sw_1_src = CX_135_Lined_Bottom;\n                        this.state.sw_3_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__4_ridgewood_bt\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals \n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__4_ridgewood_bt\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Clear;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_bt_pascack\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_2__|__4_ridgewood_bt\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_3__|__3_bt_nysw\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = CX_135_Occupied_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = CX_135_Lined_Bottom;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__3_ridgewood_bt\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_1_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_3_src = CX_225_Occupied_Bottom;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_Lined_Bottom;\n                    this.state.sw_1_src = CX_135_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_2__|__2_bt_pascack\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = CX_225_Occupied_Bottom;\n                    this.state.sw_1_src = CX_135_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_Lined_Bottom;\n                    this.state.sw_1_src = CX_135_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Clear;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * @description This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_images() {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_135_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_135;\n        }\n\n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = CX_225_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = CX_225;\n        }\n\n        // Set SW #5\n        // SW #5 Reversed\n        if (this.state.sw_5) {\n            this.state.sw_5_src = SW_U_E_R;\n        }\n        // SW #5 Normal\n        else {\n            this.state.sw_5_src = SW_U_E;\n        }\n    }\n    // ---- END set_switch_image() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * @description This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n        this.state.tail_3_e = Empty;\n\n        this.state.sig_2w1_src = SIG_W;\n        this.state.sig_2w2_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_4e_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default BT;"]},"metadata":{},"sourceType":"module"}