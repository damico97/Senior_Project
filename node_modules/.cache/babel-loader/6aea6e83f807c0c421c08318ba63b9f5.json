{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file Mill.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Mill Interlocking\n *\n * Extends the React Component Class and is the UI part of the Mill Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */import React,{Component}from'react';// Import CSS style sheet\nimport'../../../css/Main_Line/suscon.css';// Import Images\n// Switch Images\n// Images for a 135 Crossover\nimport CX_135 from'../../../images/CX_135.png';import CX_135_Lined_Top from'../../../images/CX_135_Lined_Top.png';import CX_135_Lined_Bottom from'../../../images/CX_135_Lined_Bottom.png';import CX_135_Lined_Both from'../../../images/CX_135_Lined_Both.png';import CX_135_R from'../../../images/CX_135_R.png';import CX_135_R_Lined from'../../../images/CX_135_R_Lined.png';import CX_135_Lined_Top_Occupied_Bottom from'../../../images/CX_135_Lined_Top_Occupied_Bottom.png';import CX_135_Occupied_Top_Lined_Bottom from'../../../images/CX_135_Occupied_Top_Lined_Bottom.png';import CX_135_Occupied_Top from'../../../images/CX_135_Occupied_Top.png';import CX_135_Occupied_Bottom from'../../../images/CX_135_Occupied_Bottom.png';import CX_135_Occupied_Both from'../../../images/CX_135_Occupied_Both.png';import CX_135_R_Occupied from'../../../images/CX_135_R_Occupied.png';// Images for a 225 Crossover\nimport CX_225 from'../../../images/CX_225.png';import CX_225_Lined_Top from'../../../images/CX_225_Lined_Top.png';import CX_225_Lined_Bottom from'../../../images/CX_225_Lined_Bottom.png';import CX_225_Lined_Both from'../../../images/CX_225_Lined_Both.png';import CX_225_R from'../../../images/CX_225_R.png';import CX_225_R_Lined from'../../../images/CX_225_R_Lined.png';import CX_225_Lined_Top_Occupied_Bottom from'../../../images/CX_225_Lined_Top_Occupied_Bottom.png';import CX_225_Occupied_Top_Lined_Bottom from'../../../images/CX_225_Occupied_Top_Lined_Bottom.png';import CX_225_Occupied_Top from'../../../images/CX_225_Occupied_Top.png';import CX_225_Occupied_Bottom from'../../../images/CX_225_Occupied_Bottom.png';import CX_225_Occupied_Both from'../../../images/CX_225_Occupied_Both.png';import CX_225_R_Occupied from'../../../images/CX_225_R_Occupied.png';// Signal Images\nimport SIG_W from'../../../images/SIG_W.png';import SIG_W_Clear from'../../../images/SIG_W_Clear.png';import SIG_W_Stop from'../../../images/SIG_W_Stop.png';import SIG_E from'../../../images/SIG_E.png';import SIG_E_Clear from'../../../images/SIG_E_Clear.png';import SIG_E_Stop from'../../../images/SIG_E_Stop.png';// Color Constants For Drawing Routes\nvar Empty='#999999';var Green='#75fa4c';var Red='#eb3323';/**\n * The React JSX Component Class for the Suscon Interlocking\n * \n * This class is a JSX React Component for the Suscon Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */var Suscon=/*#__PURE__*/function(_Component){_inherits(Suscon,_Component);function Suscon(){var _getPrototypeOf2;var _this;_classCallCheck(this,Suscon);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Suscon)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={sw_1:_this.props.status.sw_1,sw_3:_this.props.status.sw_3,sw_1_src:CX_225,sw_3_src:CX_135,sig_2w_src:SIG_W,sig_4w_src:SIG_W,sig_2e_src:SIG_E,sig_4e_src:SIG_E,tail_1_e:Empty,tail_1_w:Empty,tail_2_e:Empty,tail_2_w:Empty,occupied_trk_1:_this.props.status.occupied_trk_1,occupied_trk_2:_this.props.status.occupied_trk_2,route_1:_this.props.status.routed_trk_1,route_2:_this.props.status.routed_trk_2,routes:_this.props.status.routes};_this.set_switch_img=function(){// Set SW #1\n// SW #1 Reversed\nif(_this.state.sw_1){_this.state.sw_1_src=CX_225_R;}// SW #1 Normal\nelse{_this.state.sw_1_src=CX_225;}// Set SW #3\n// SW #3 Reversed\nif(_this.state.sw_3){_this.state.sw_3_src=CX_135_R;}// SW #3 Normal\nelse{_this.state.sw_3_src=CX_135;}};return _this;}_createClass(Suscon,[{key:\"componentWillReceiveProps\",/**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */value:function componentWillReceiveProps(nextProps){this.setState({sw_1:nextProps.status.sw_1,sw_3:nextProps.status.sw_3,occupied_trk_1:nextProps.status.occupied_trk_1,occupied_trk_2:nextProps.status.occupied_trk_2,route_1:nextProps.status.routed_trk_1,route_2:nextProps.status.routed_trk_2,routes:nextProps.status.routes});}// ---- END componentWillReceiveProps() ----\n/**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */},{key:\"render\",value:function render(){// Clear all the drawings from the interlocking so if a train clears the route is gone\nthis.reset_drawings();// Set the switch images based off the state of each crossover\nthis.set_switch_img();// Draw all the current routes in the interlocking\nthis.set_route_drawing();// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{className:\"suscon_title\"},\"SUSCON\"),React.createElement(\"div\",{className:\"suscon_milepost\"},\"MP 17.5\"),React.createElement(\"div\",{className:\"suscon_1_west\",style:{background:this.state.tail_1_w}}),React.createElement(\"div\",{className:\"suscon_2_west\",style:{background:this.state.tail_2_w}}),React.createElement(\"div\",{className:\"suscon_SW_3\",onClick:this.props.throw_sw_3},React.createElement(\"img\",{src:this.state.sw_3_src})),React.createElement(\"div\",{className:\"suscon_SW_1\",onClick:this.props.throw_sw_1},React.createElement(\"img\",{src:this.state.sw_1_src})),React.createElement(\"div\",{className:\"suscon_1_east\",style:{background:this.state.tail_1_e}}),React.createElement(\"div\",{className:\"suscon_2_east\",style:{background:this.state.tail_2_e}}),React.createElement(\"div\",{className:\"suscon_sig_2w\",onClick:this.props.click_sig_2w,id:\"suscon_2w\"},React.createElement(\"img\",{id:\"suscon_2w_image\",src:this.state.sig_2w_src})),React.createElement(\"div\",{className:\"suscon_sig_4w\",onClick:this.props.click_sig_4w,id:\"suscon_4w\"},React.createElement(\"img\",{id:\"suscon_4w_image\",src:this.state.sig_4w_src})),React.createElement(\"div\",{className:\"suscon_sig_2e\",onClick:this.props.click_sig_2e,id:\"suscon_2e\"},React.createElement(\"img\",{id:\"suscon_2e_image\",src:this.state.sig_2e_src})),React.createElement(\"div\",{className:\"suscon_sig_4e\",onClick:this.props.click_sig_4e,id:\"suscon_4e\"},React.createElement(\"img\",{id:\"suscon_4e_image\",src:this.state.sig_4e_src})));}// ---- END render() ----\n/**\n     * set_route_drawings()\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not.\n     */},{key:\"set_route_drawing\",value:function set_route_drawing(){var color_1=Empty;var color_2=Empty;// Set Track Colors\n// If each track has a route\nif(this.state.route_1){color_1=Green;}if(this.state.route_2){color_2=Green;}// If each track is occupied\nif(this.state.occupied_trk_1){color_1=Red;}if(this.state.occupied_trk_2){color_2=Red;}// Loop through all the Routes \nfor(var i=0;i<this.state.routes.length;i++){if(this.state.routes[i]===\"W_1_1__|__1_ridgewood_suscon\"||this.state.routes[i]===\"E_1_1__|__1_suscon_mill\"){// Tail Tracks\nthis.state.tail_1_e=color_1;this.state.tail_1_w=color_1;// The Route Is Occupied\nif(this.state.occupied_trk_1){// Routed Track #2\nif(this.state.route_2){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;this.state.sw_3_src=CX_135_Occupied_Top_Lined_Bottom;}// Occupied Track #2\nelse if(this.state.occupied_trk_2){this.state.sw_1_src=CX_225_Occupied_Both;this.state.sw_3_src=CX_135_Occupied_Both;}// Nothing Track #2\nelse{this.state.sw_1_src=CX_225_Occupied_Top;this.state.sw_3_src=CX_135_Occupied_Top;}// Signals \nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Routed Track #2\nif(this.state.route_2){this.state.sw_1_src=CX_225_Lined_Both;this.state.sw_3_src=CX_135_Lined_Both;}// Occupied Track #2\nelse if(this.state.occupied_trk_2){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;this.state.sw_3_src=CX_135_Lined_Top_Occupied_Bottom;}// Nothing Track #2\nelse{this.state.sw_1_src=CX_225_Lined_Top;this.state.sw_3_src=CX_135_Lined_Top;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_1__|__1_ridgewood_suscon\"){this.state.sig_2w_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;}// East Bound Signals \nelse{this.state.sig_2w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_2_2__|__2_ridgewood_suscon\"||this.state.routes[i]===\"E_2_2__|__2_suscon_mill\"){// Tail Tracks\nthis.state.tail_2_e=color_2;this.state.tail_2_w=color_2;// If The Route Is Occupied\nif(this.state.occupied_trk_2){// Routed Track #1\nif(this.state.route_1){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;this.state.sw_3_src=CX_135_Lined_Top_Occupied_Bottom;}// Occupied Track #1\nelse if(this.state.occupied_trk_1){this.state.sw_1_src=CX_225_Occupied_Both;this.state.sw_3_src=CX_135_Occupied_Both;}// Nothing Track #1\nelse{this.state.sw_1_src=CX_225_Occupied_Bottom;this.state.sw_3_src=CX_135_Occupied_Bottom;}// Signals\nthis.state.sig_4w=SIG_W_Stop;this.state.sig_4e=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Routed Track #1\nif(this.state.route_1){this.state.sw_1_src=CX_225_Lined_Both;this.state.sw_3_src=CX_135_Lined_Both;}// Occupied Track #1\nelse if(this.state.occupied_trk_1){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;this.state.sw_3_src=CX_135_Occupied_Top_Lined_Bottom;}// Nothing Track #1\nelse{this.state.sw_1_src=CX_225_Lined_Bottom;this.state.sw_3_src=CX_135_Lined_Bottom;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_2_2__|__2_ridgewood_suscon\"){this.state.sig_4w_src=SIG_W_Clear;this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_1_2__|__2_ridgewood_suscon\"){// Tail Tracks\nthis.state.tail_1_e=color_1;this.state.tail_2_w=color_1;// The Route Is Occupied\nif(this.state.occupied_trk_1){// Switch Images\nthis.state.sw_1_src=CX_225_R_Occupied;this.state.sw_3_src=CX_135_Occupied_Bottom;// Signal Images\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switch Images\nthis.state.sw_1_src=CX_225_R_Lined;this.state.sw_3_src=CX_135_Lined_Bottom;// Signal Images\nthis.state.sig_2w_src=SIG_W_Clear;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_2_1__|__1_suscon_mill\"){// Tail Tracks\nthis.state.tail_1_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_trk_2){// Switch Images\nthis.state.sw_1_src=CX_225_R_Occupied;this.state.sw_3_src=CX_135_Occupied_Bottom;// Signal Images\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switch Images\nthis.state.sw_1_src=CX_225_R_Lined;this.state.sw_3_src=CX_135_Lined_Bottom;// Signal Images\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Clear;}}else if(this.state.routes[i]===\"W_2_1__|__1_ridgewood_suscon\"){// Tail Tracks\nthis.state.tail_2_e=color_2;this.state.tail_1_w=color_2;// The Route Is Occupied\nif(this.state.occupied_trk_2){// Switch Images\nthis.state.sw_1_src=CX_225_Occupied_Bottom;this.state.sw_3_src=CX_135_R_Occupied;// Signal Images\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switch Images\nthis.state.sw_1_src=CX_225_Lined_Bottom;this.state.sw_3_src=CX_135_R_Lined;// Signal Images\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_1_2__|__2_suscon_mill\"){// Tail Tracks\nthis.state.tail_2_e=color_1;this.state.tail_1_w=color_1;// The Route Is Occupied\nif(this.state.occupied_trk_2){// Switch Images\nthis.state.sw_1_src=CX_225_Occupied_Bottom;this.state.sw_3_src=CX_135_R_Occupied;// Signal Images\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switch Images\nthis.state.sw_1_src=CX_225_Lined_Bottom;this.state.sw_3_src=CX_135_R_Lined;// Signal Images\nthis.state.sig_2w_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;this.state.sig_4e_src=SIG_E_Stop;}}}}// ---- END set_route_drawings() ----\n/**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */},{key:\"reset_drawings\",// ---- END set_switch_image() ----\n/**\n     * reset_drawings()\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */value:function reset_drawings(){this.state.tail_1_e=Empty;this.state.tail_1_w=Empty;this.state.tail_2_e=Empty;this.state.tail_2_w=Empty;this.state.sig_2e_src=SIG_E;this.state.sig_2w_src=SIG_W;this.state.sig_4e_src=SIG_E;this.state.sig_4w_src=SIG_W;}//---- END reset_drawings() ----\n}]);return Suscon;}(Component);// Export the interlocking to be drawn on the screen\nexport default Suscon;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/Suscon.jsx"],"names":["React","Component","CX_135","CX_135_Lined_Top","CX_135_Lined_Bottom","CX_135_Lined_Both","CX_135_R","CX_135_R_Lined","CX_135_Lined_Top_Occupied_Bottom","CX_135_Occupied_Top_Lined_Bottom","CX_135_Occupied_Top","CX_135_Occupied_Bottom","CX_135_Occupied_Both","CX_135_R_Occupied","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","Suscon","state","sw_1","props","status","sw_3","sw_1_src","sw_3_src","sig_2w_src","sig_4w_src","sig_2e_src","sig_4e_src","tail_1_e","tail_1_w","tail_2_e","tail_2_w","occupied_trk_1","occupied_trk_2","route_1","routed_trk_1","route_2","routed_trk_2","routes","set_switch_img","nextProps","setState","reset_drawings","set_route_drawing","background","throw_sw_3","throw_sw_1","click_sig_2w","click_sig_4w","click_sig_2e","click_sig_4e","color_1","color_2","i","length","sig_4w","sig_4e"],"mappings":"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","sourcesContent":["/**\n * @file Mill.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Mill Interlocking\n *\n * Extends the React Component Class and is the UI part of the Mill Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Main_Line/suscon.css';\n \n// Import Images\n// Switch Images\n// Images for a 135 Crossover\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png';\n\n// Images for a 225 Crossover\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the Suscon Interlocking\n * \n * This class is a JSX React Component for the Suscon Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass Suscon extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        sw_1_src: CX_225,\n        sw_3_src: CX_135,\n\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n\n        tail_1_e: Empty,\n        tail_1_w: Empty,\n        tail_2_e: Empty,\n        tail_2_w: Empty,\n\n        occupied_trk_1: this.props.status.occupied_trk_1,\n        occupied_trk_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_trk_1,\n        route_2: this.props.status.routed_trk_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            occupied_trk_1: nextProps.status.occupied_trk_1,\n            occupied_trk_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_trk_1,\n            route_2: nextProps.status.routed_trk_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawing();\n        \n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (\n            <div>\n                {/* Tags */}\n                <div className=\"suscon_title\">SUSCON</div>\n                <div className=\"suscon_milepost\">MP 17.5</div>\n\n                {/* West Side Tracks */}\n                <div className=\"suscon_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"suscon_2_west\" style={{background: this.state.tail_2_w}}></div>\n\n                {/* Switches */}\n                <div className=\"suscon_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"suscon_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n\n                {/* East Side Tracks */}\n                <div className=\"suscon_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"suscon_2_east\" style={{background: this.state.tail_2_e}}></div>\n\n                {/* Signals */}\n                <div className=\"suscon_sig_2w\" onClick={this.props.click_sig_2w} id=\"suscon_2w\"><img id=\"suscon_2w_image\" src={this.state.sig_2w_src}/></div>\n                <div className=\"suscon_sig_4w\" onClick={this.props.click_sig_4w} id=\"suscon_4w\"><img id=\"suscon_4w_image\" src={this.state.sig_4w_src}/></div>\n                <div className=\"suscon_sig_2e\" onClick={this.props.click_sig_2e} id=\"suscon_2e\"><img id=\"suscon_2e_image\" src={this.state.sig_2e_src}/></div>\n                <div className=\"suscon_sig_4e\" onClick={this.props.click_sig_4e} id=\"suscon_4e\"><img id=\"suscon_4e_image\" src={this.state.sig_4e_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * set_route_drawings()\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not.\n     */\n    set_route_drawing() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Set Track Colors\n        // If each track has a route\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        // If each track is occupied\n        if (this.state.occupied_trk_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_trk_2) {\n            color_2 = Red;\n        }\n\n        // Loop through all the Routes \n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_ridgewood_suscon\" || this.state.routes[i] === \"E_1_1__|__1_suscon_mill\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_trk_1) {\n                    // Routed Track #2\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                    }\n                    // Occupied Track #2\n                    else if (this.state.occupied_trk_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                        this.state.sw_3_src = CX_135_Occupied_Both;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                        this.state.sw_3_src = CX_135_Occupied_Top;\n                    }\n\n                    // Signals \n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Routed Track #2\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                        this.state.sw_3_src = CX_135_Lined_Both;\n                    }\n                    // Occupied Track #2\n                    else if (this.state.occupied_trk_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                        this.state.sw_3_src = CX_135_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_ridgewood_suscon\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals \n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_ridgewood_suscon\" || this.state.routes[i] === \"E_2_2__|__2_suscon_mill\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_trk_2) {\n                    // Routed Track #1\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        this.state.sw_3_src = CX_135_Lined_Top_Occupied_Bottom;\n                    }\n                    // Occupied Track #1\n                    else if (this.state.occupied_trk_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                        this.state.sw_3_src = CX_135_Occupied_Both;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        this.state.sw_3_src = CX_135_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w = SIG_W_Stop;\n                    this.state.sig_4e = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Routed Track #1\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                        this.state.sw_3_src = CX_135_Lined_Both;\n                    }\n                    // Occupied Track #1\n                    else if (this.state.occupied_trk_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        this.state.sw_3_src = CX_135_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Bottom;\n                        this.state.sw_3_src = CX_135_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_ridgewood_suscon\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_ridgewood_suscon\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_trk_1) {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_R_Occupied;\n                    this.state.sw_3_src = CX_135_Occupied_Bottom;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_R_Lined;\n                    this.state.sw_3_src = CX_135_Lined_Bottom;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_suscon_mill\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_trk_2) {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_R_Occupied;\n                    this.state.sw_3_src = CX_135_Occupied_Bottom;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_R_Lined;\n                    this.state.sw_3_src = CX_135_Lined_Bottom;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__1_ridgewood_suscon\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_1_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_trk_2) {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_Occupied_Bottom;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_Lined_Bottom;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_2__|__2_suscon_mill\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_trk_2) {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_Occupied_Bottom;\n                    this.state.sw_3_src = CX_135_R_Occupied;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switch Images\n                    this.state.sw_1_src = CX_225_Lined_Bottom;\n                    this.state.sw_3_src = CX_135_R_Lined;\n\n                    // Signal Images\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Clear;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_225_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_225;\n        }\n        \n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = CX_135_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = CX_135;\n        }\n    }\n    // ---- END set_switch_image() ----\n\n\n    /**\n     * reset_drawings()\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_e = Empty;\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_e = Empty;\n        this.state.tail_2_w = Empty;\n\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_2w_src = SIG_W;\n        this.state.sig_4e_src = SIG_E;\n        this.state.sig_4w_src = SIG_W;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default Suscon;"]},"metadata":{},"sourceType":"module"}