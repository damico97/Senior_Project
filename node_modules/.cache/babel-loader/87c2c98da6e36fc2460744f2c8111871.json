{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/SF.jsx\";\n\n/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for SF Interlocking\n *\n * Extends the React Component Class and is the UI part of the SF Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n// Import React Component\nimport React, { Component } from 'react'; // Import CSS style sheet\n\nimport '../../../css/Main_Line/sf.css'; // Import Images\n// Switch Images \n\nimport CX_225 from '../../../../public/images/CX_225.png';\nimport CX_225_Lined_Top from '../../../../public/images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../../public/images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../../public/images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../../public/images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../../public/images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../../public/images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../../public/images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../../public/images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../../public/images/CX_225_R_Occupied.png';\nimport SW_D_W from '../../../../public/images/SW_D_W.png';\nimport SW_D_W_Lined from '../../../../public/images/SW_D_W_Lined.png';\nimport SW_D_W_Occupied from '../../../../public/images/SW_D_W_Occupied.png';\nimport SW_D_W_R from '../../../../public/images/SW_D_W_R.png';\nimport SW_D_W_R_Lined from '../../../../public/images/SW_D_W_R_Lined.png';\nimport SW_D_W_R_Occupied from '../../../../public/images/SW_D_W_R_Occupied.png'; // Signal Images\n\nimport SIG_W from '../../../../public/images/SIG_W.png';\nimport SIG_W_Clear from '../../../../public/images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../../public/images/SIG_W_Stop.png';\nimport SIG_E from '../../../../public/images/SIG_E.png';\nimport SIG_E_Clear from '../../../../public/images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../../public/images/SIG_E_Stop.png'; // Color Constants For Drawing Routes\n\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n/**\n * The React JSX Component Class for the SF Interlocking\n * \n * This class is a JSX React Component for the SF Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\n\nclass SF extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Switch Status\n      sw_1: this.props.status.sw_1,\n      sw_3: this.props.status.sw_3,\n      // Image File for the switch - Will change depending on route\n      sw_1_src: SW_D_W,\n      sw_3_src: CX_225,\n      // Image File for the signals - Will change depending on route\n      tail_1_w: Empty,\n      tail_2_w: Empty,\n      tail_yard: Empty,\n      tail_1_e: Empty,\n      tail_2_e: Empty,\n      // Colors for tail tracks - Will change depending on route\n      sig_2w_src: SIG_W,\n      sig_4w_src: SIG_W,\n      sig_2e_src: SIG_E,\n      sig_4e1_src: SIG_E,\n      sig_4e2_src: SIG_E,\n      // Information For Interlocking Routes\n      occupied_1: this.props.status.occupied_trk_1,\n      occupied_2: this.props.status.occupied_trk_2,\n      route_1: this.props.status.routed_trk_1,\n      route_2: this.props.status.routed_trk_2,\n      routes: this.props.status.routes\n    };\n\n    this.set_switch_img = () => {\n      // Set SW #1\n      // SW #1 Reversed\n      if (this.state.sw_1) {\n        this.state.sw_1_src = SW_D_W_R;\n      } // SW #1 Normal\n      else {\n          this.state.sw_1_src = SW_D_W;\n        } // Set SW #3\n      // SW #3 Reversed\n\n\n      if (this.state.sw_3) {\n        this.state.sw_3_src = CX_225_R;\n      } // SW #3 Normal\n      else {\n          this.state.sw_3_src = CX_225;\n        }\n    };\n  }\n\n  /**\n   * componentWillReceiveProps()\n   * @summary Function that updates the state of the component\n   * \n   * The data that is being changed is passed down from the CTC classes in the simulation backend\n   * \n   * @param nextProps, the new data to set the component state too\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sw_1: nextProps.status.sw_1,\n      sw_3: nextProps.status.sw_3,\n      occupied_1: nextProps.status.occupied_trk_1,\n      occupied_2: nextProps.status.occupied_trk_2,\n      route_1: nextProps.status.routed_trk_1,\n      route_2: nextProps.status.routed_trk_2,\n      routes: nextProps.status.routes\n    });\n  } // ---- END componentWillReceiveProps() ----\n\n  /**\n   * render()\n   * @summary standard React function that draws the interlocking to the screen\n   */\n\n\n  render() {\n    // Clear all the drawings from the interlocking so if a train clears the route is gone\n    this.reset_drawings(); // Set the switch images based off the state of each crossover\n\n    this.set_switch_img(); // Draw all the current routes in the interlocking\n\n    this.set_route_drawings(); // Returns the HTML to draw the interlocking and it's current state to the screen\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sf_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"SF\"), React.createElement(\"div\", {\n      className: \"sf_milepost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"MP 30.5\"), React.createElement(\"div\", {\n      className: \"sf_1_west\",\n      style: {\n        background: this.state.tail_1_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sf_2_west\",\n      style: {\n        background: this.state.tail_2_w\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sf_yard\",\n      style: {\n        background: this.state.tail_yard\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sf_SW_1\",\n      onClick: this.props.throw_sw_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sf_SW_3\",\n      onClick: this.props.throw_sw_3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sw_3_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sf_1_center_west\",\n      style: {\n        background: this.state.tail_1_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sf_2_center_west\",\n      style: {\n        background: this.state.tail_2_e\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sf_sig_2e\",\n      onClick: this.props.click_sig_2e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2e_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sf_sig_4e-1\",\n      onClick: this.props.click_sig_4e_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e1_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sf_sig_4e-2\",\n      onClick: this.props.click_sig_4e_2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4e2_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sf_sig_2w\",\n      onClick: this.props.click_sig_2w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_2w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sf_sig_4w\",\n      onClick: this.props.click_sig_4w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sig_4w_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  } // ---- END render() ----\n\n  /**\n   * @summary Sets the drawing for the route through the interlocking\n   * \n   * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n   * will change depending on if the interlocking is occupied or not\n   */\n\n\n  set_route_drawings() {\n    // Setting the color of tracks depending on if interlocking is occupied or not\n    let color_1 = Empty;\n    let color_2 = Empty;\n\n    if (this.state.route_1) {\n      color_1 = Green;\n    }\n\n    if (this.state.route_2) {\n      color_2 = Green;\n    }\n\n    if (this.state.occupied_1) {\n      color_1 = Red;\n    }\n\n    if (this.state.occupied_2) {\n      color_2 = Red;\n    } // Loop through all the routes\n\n\n    for (let i = 0; i < this.state.routes.length; i++) {\n      if (this.state.routes[i] === \"W_1_1__|__1_sterling_sf\" || this.state.routes[i] === \"E_1_1__|__1_sf_wc\") {\n        // Tail Tracks \n        this.state.tail_1_e = color_1;\n        this.state.tail_1_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          // Track #2 Is Routed\n          if (this.state.route_2) {\n            this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n          } // Track #2 Is Occupied\n          else if (this.state.occupied_2) {\n              this.state.sw_3_src = CX_225_Occupied_Both;\n            } // Nothing Track #2\n            else {\n                this.state.sw_3_src = CX_225_Occupied_Top;\n              } // Signals\n\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            // Track #2 Is Routed\n            if (this.state.route_2) {\n              this.state.sw_3_src = CX_225_Lined_Both;\n            } // Track #2 Is Occupied\n            else if (this.state.occupied_2) {\n                this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n              } // Nothing Track #2\n              else {\n                  this.state.sw_3_src = CX_225_Lined_Top;\n                } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_1_1__|__1_sterling_sf\") {\n              this.state.sig_2w_src = SIG_W_Clear;\n              this.state.sig_2e_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_2w_src = SIG_W_Stop;\n                this.state.sig_2e_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_2_2__|__2_hilburn_sf\" || this.state.routes[i] === \"E_2_2__|__2_sf_wc\") {\n        // Tail Tracks \n        this.state.tail_2_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_1_src = SW_D_W_Occupied; // Crossovers that could change depending on Track #2\n          // Track #2 Is Routed\n\n          if (this.state.route_1) {\n            this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n          } // Track #2 Is Occupied\n          else if (this.state.occupied_1) {\n              this.state.sw_3_src = CX_225_Occupied_Both;\n            } // Nothing Track #2\n            else {\n                this.state.sw_3_src = CX_225_Occupied_Bottom;\n              } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e1_src = SIG_E_Stop;\n          this.state.sig_4e2_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_1_src = SW_D_W_Lined; // Crossovers that could change depending on Track #2\n          // Track #2 Is Routed\n\n          if (this.state.route_1) {\n            this.state.sw_3_src = CX_225_Lined_Both;\n          } // Track #2 Is Occupied\n          else if (this.state.occupied_1) {\n              this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n            } // Nothing Track #2\n            else {\n                this.state.sw_3_src = CX_225_Lined_Bottom;\n              } // Signals\n          // West Bound Signals\n\n\n          if (this.state.routes[i] === \"W_2_2__|__2_hilburn_sf\") {\n            this.state.sig_4w_src = SIG_W_Clear;\n            this.state.sig_4e1_src = SIG_E_Stop;\n            this.state.sig_4e2_src = SIG_E_Stop;\n          } // East Bound Signals\n          else {\n              this.state.sig_4w_src = SIG_W_Stop;\n              this.state.sig_4e1_src = SIG_E_Clear;\n              this.state.sig_4e2_src = SIG_E_Stop;\n            }\n        }\n      } else if (this.state.routes[i] === \"W_2_3__|__3_yardHilburn_sf\" || this.state.routes[i] === \"E_3_2__|__2_sf_wc\") {\n        // Tail Tracks\n        this.state.tail_2_e = color_2;\n        this.state.tail_yard = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_2) {\n          // Switches\n          this.state.sw_1_src = SW_D_W_R_Occupied; // Crossovers that could change based off of Track #1\n          // Track #1 Routed\n\n          if (this.state.route_1) {\n            this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n          } // Track #1 Occupied\n          else if (this.state.occupied_1) {\n              this.state.sw_3_src = CX_225_Occupied_Both;\n            } // Nothing Track #1\n            else {\n                this.state.sw_3_src = CX_225_Occupied_Bottom;\n              } // Signals\n\n\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e1_src = SIG_E_Stop;\n          this.state.sig_4e2_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_1_src = SW_D_W_R_Lined; // Crossovers that could change based off of Track #1\n            // Track #1 Routed\n\n            if (this.state.route_1) {\n              this.state.sw_3_src = CX_225_Lined_Both;\n            } // Track #1 Occupied\n            else if (this.state.occupied_1) {\n                this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n              } // Nothing Track #1\n              else {\n                  this.state.sw_3_src = CX_225_Lined_Bottom;\n                } // Signals\n            // West Bound Signals\n\n\n            if (this.state.routes[i] === \"W_2_3__|__3_yardHilburn_sf\") {\n              this.state.sig_4w_src = SIG_W_Clear;\n              this.state.sig_4e1_src = SIG_E_Stop;\n              this.state.sig_4e2_src = SIG_E_Stop;\n            } // East Bound Signals\n            else {\n                this.state.sig_4w_src = SIG_W_Stop;\n                this.state.sig_4e1_src = SIG_E_Stop;\n                this.state.sig_4e2_src = SIG_E_Clear;\n              }\n          }\n      } else if (this.state.routes[i] === \"W_1_2__|__2_hilburn_sf\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_2_w = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = SW_D_W_Occupied; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e1_src = SIG_E_Stop;\n          this.state.sig_4e2_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = CX_225_R_Lined;\n            this.state.sw_1_src = SW_D_W_Lined; // Signals\n\n            this.state.sig_2w_src = SIG_W_Clear;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e1_src = SIG_E_Stop;\n            this.state.sig_4e2_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_2_1__|__1_sf_wc\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_2;\n        this.state.tail_2_w = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches\n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = SW_D_W_Occupied; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e1_src = SIG_E_Stop;\n          this.state.sig_4e2_src = SIG_E_Stop;\n        } else {\n          // Switches\n          this.state.sw_3_src = CX_225_R_Lined;\n          this.state.sw_1_src = SW_D_W_Lined; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e1_src = SIG_E_Clear;\n          this.state.sig_4e2_src = SIG_E_Stop;\n        }\n      } else if (this.state.routes[i] === \"W_1_3__|__2_yardHilburn_sf\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_1;\n        this.state.tail_yard = color_1; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches \n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = SW_D_W_R_Occupied; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e1_src = SIG_E_Stop;\n          this.state.sig_4e2_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = CX_225_R_Lined;\n            this.state.sw_1_src = SW_D_W_R_Lined; // Signals\n\n            this.state.sig_2w_src = SIG_W_Clear;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e1_src = SIG_E_Stop;\n            this.state.sig_4e2_src = SIG_E_Stop;\n          }\n      } else if (this.state.routes[i] === \"E_3_1__|__1_sf_wc\") {\n        // Tail Tracks\n        this.state.tail_1_e = color_2;\n        this.state.tail_yard = color_2; // The Route Is Occupied\n\n        if (this.state.occupied_1) {\n          // Switches \n          this.state.sw_3_src = CX_225_R_Occupied;\n          this.state.sw_1_src = SW_D_W_R_Occupied; // Signals\n\n          this.state.sig_2w_src = SIG_W_Stop;\n          this.state.sig_2e_src = SIG_E_Stop;\n          this.state.sig_4w_src = SIG_W_Stop;\n          this.state.sig_4e1_src = SIG_E_Stop;\n          this.state.sig_4e2_src = SIG_E_Stop;\n        } // The Route Is NOT Occupied\n        else {\n            // Switches\n            this.state.sw_3_src = CX_225_R_Lined;\n            this.state.sw_1_src = SW_D_W_R_Lined; // Signals\n\n            this.state.sig_2w_src = SIG_W_Stop;\n            this.state.sig_2e_src = SIG_E_Stop;\n            this.state.sig_4w_src = SIG_W_Stop;\n            this.state.sig_4e1_src = SIG_E_Stop;\n            this.state.sig_4e2_src = SIG_E_Clear;\n          }\n      }\n    }\n  } // ---- END set_route_drawings() ----\n\n  /**\n   * set_switch_img()\n   * @summary Changes image sources for the switches, depending on switch status\n   * \n   * This function uses the data passed in through status from the CTC classes and \n   * shows if the switches are reversed or not on the screen, by changing the image\n   * source files, to the correct .png file respectivly\n   */\n\n\n  // ---- END set_switch_image() ----\n\n  /**\n   * @summary Function to reset the signal images and track colors\n   * \n   * This function is need, because if the player was to remove a route,\n   * or when the train clears the interlocking nothing will clear the route\n   * the is displaying on the screen, even if it's gone in the backend\n   */\n  reset_drawings() {\n    this.state.tail_1_w = Empty;\n    this.state.tail_2_w = Empty;\n    this.state.tail_yard = Empty;\n    this.state.tail_1_e = Empty;\n    this.state.tail_2_e = Empty;\n    this.state.sig_2w_src = SIG_W;\n    this.state.sig_4w_src = SIG_W;\n    this.state.sig_2e_src = SIG_E;\n    this.state.sig_4e1_src = SIG_E;\n    this.state.sig_4e2_src = SIG_E;\n  } //---- END reset_drawings() ----\n\n\n} // Export the interlocking to be drawn on the screen\n\n\nexport default SF;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/SF.jsx"],"names":["React","Component","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SW_D_W","SW_D_W_Lined","SW_D_W_Occupied","SW_D_W_R","SW_D_W_R_Lined","SW_D_W_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","SF","state","sw_1","props","status","sw_3","sw_1_src","sw_3_src","tail_1_w","tail_2_w","tail_yard","tail_1_e","tail_2_e","sig_2w_src","sig_4w_src","sig_2e_src","sig_4e1_src","sig_4e2_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_trk_1","route_2","routed_trk_2","routes","set_switch_img","componentWillReceiveProps","nextProps","setState","render","reset_drawings","set_route_drawings","background","throw_sw_1","throw_sw_3","click_sig_2e","click_sig_4e_1","click_sig_4e_2","click_sig_2w","click_sig_4w","color_1","color_2","i","length"],"mappings":"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","sourcesContent":["/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for SF Interlocking\n *\n * Extends the React Component Class and is the UI part of the SF Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Main_Line/sf.css';\n\n// Import Images\n// Switch Images \nimport CX_225 from '../../../../public/images/CX_225.png';\nimport CX_225_Lined_Top from '../../../../public/images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../../public/images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../../public/images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../../public/images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../../public/images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../../public/images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../../public/images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../../public/images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../../public/images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../../public/images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../../public/images/CX_225_R_Occupied.png';\n\nimport SW_D_W from '../../../../public/images/SW_D_W.png';\nimport SW_D_W_Lined from '../../../../public/images/SW_D_W_Lined.png';\nimport SW_D_W_Occupied from '../../../../public/images/SW_D_W_Occupied.png';\nimport SW_D_W_R from '../../../../public/images/SW_D_W_R.png';\nimport SW_D_W_R_Lined from '../../../../public/images/SW_D_W_R_Lined.png';\nimport SW_D_W_R_Occupied from '../../../../public/images/SW_D_W_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../../public/images/SIG_W.png';\nimport SIG_W_Clear from '../../../../public/images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../../public/images/SIG_W_Stop.png';\nimport SIG_E from '../../../../public/images/SIG_E.png';\nimport SIG_E_Clear from '../../../../public/images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../../public/images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the SF Interlocking\n * \n * This class is a JSX React Component for the SF Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass SF extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: SW_D_W,\n        sw_3_src: CX_225,\n        // Image File for the signals - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_yard: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        // Colors for tail tracks - Will change depending on route\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e1_src: SIG_E,\n        sig_4e2_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_trk_1,\n        route_2: this.props.status.routed_trk_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_trk_1,\n            route_2: nextProps.status.routed_trk_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"sf_title\">SF</div>\n                <div className=\"sf_milepost\">MP 30.5</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"sf_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"sf_2_west\" style={{background: this.state.tail_2_w}}></div>\n                <div className=\"sf_yard\" style={{background: this.state.tail_yard}}></div>\n                {/* Switches */}\n                <div className=\"sf_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"sf_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"sf_1_center_west\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"sf_2_center_west\" style={{background: this.state.tail_2_e}}></div>\n                {/* Signals */}\n                <div className=\"sf_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"sf_sig_4e-1\" onClick={this.props.click_sig_4e_1}><img src={this.state.sig_4e1_src}/></div>\n                <div className=\"sf_sig_4e-2\" onClick={this.props.click_sig_4e_2}><img src={this.state.sig_4e2_src}/></div>\n                <div className=\"sf_sig_2w\" onClick={this.props.click_sig_2w}><img src={this.state.sig_2w_src}/></div>\n                <div className=\"sf_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        // Setting the color of tracks depending on if interlocking is occupied or not\n        let color_1 = Empty;\n        let color_2 = Empty;\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop through all the routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_sterling_sf\" || this.state.routes[i] === \"E_1_1__|__1_sf_wc\") {\n                // Tail Tracks \n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    // Track #2 Is Routed\n                    if (this.state.route_2) {\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Track #2 Is Routed\n                    if (this.state.route_2) {\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_sterling_sf\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_hilburn_sf\" || this.state.routes[i] === \"E_2_2__|__2_sf_wc\") {\n                // Tail Tracks \n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Occupied;\n                    \n                    // Crossovers that could change depending on Track #2\n                    // Track #2 Is Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Lined;\n\n                    // Crossovers that could change depending on Track #2\n                    // Track #2 Is Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    // Track #2 Is Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_3_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_hilburn_sf\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e1_src = SIG_E_Stop;\n                        this.state.sig_4e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e1_src = SIG_E_Clear;\n                        this.state.sig_4e2_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_3__|__3_yardHilburn_sf\" || this.state.routes[i] === \"E_3_2__|__2_sf_wc\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_yard = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n\n                    // Crossovers that could change based off of Track #1\n                    // Track #1 Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Track #1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_3_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n\n                    // Crossovers that could change based off of Track #1\n                    // Track #1 Routed\n                    if (this.state.route_1) {\n                        this.state.sw_3_src = CX_225_Lined_Both;\n                    }\n                    // Track #1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_3_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_3_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_3__|__3_yardHilburn_sf\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e1_src = SIG_E_Stop;\n                        this.state.sig_4e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e1_src = SIG_E_Stop;\n                        this.state.sig_4e2_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_hilburn_sf\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_sf_wc\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Clear;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_3__|__2_yardHilburn_sf\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_yard = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches \n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Clear;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_3_1__|__1_sf_wc\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_yard = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches \n                    this.state.sw_3_src = CX_225_R_Occupied;\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = CX_225_R_Lined;\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e1_src = SIG_E_Stop;\n                    this.state.sig_4e2_src = SIG_E_Clear;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = SW_D_W_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = SW_D_W;\n        }\n        \n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = CX_225_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = CX_225;\n        }\n    }\n    // ---- END set_switch_image() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_yard = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n\n        this.state.sig_2w_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_4e1_src = SIG_E;\n        this.state.sig_4e2_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default SF;"]},"metadata":{},"sourceType":"module"}