{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file Harriman.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Harriman Interlocking\n *\n * Extends the React Component Class and is the UI part of the Harriman Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */ // Import React Component\nimport React,{Component}from'react';// Import CSS style sheet\nimport'../../../css/Southern_Tier_Line/harriman.css';// Import Images\n// Switch Images\nimport SW_U_W from'../../../images/SW_U_W.png';import SW_U_W_Lined from'../../../images/SW_U_W_Lined.png';import SW_U_W_Occupied from'../../../images/SW_U_W_Occupied.png';import SW_U_W_R from'../../../images/SW_U_W_R.png';import SW_U_W_R_Lined from'../../../images/SW_U_W_R_Lined.png';import SW_U_W_R_Occupied from'../../../images/SW_U_W_R_Occupied.png';import SW_D_W from'../../../images/SW_D_W.png';import SW_D_W_Lined from'../../../images/SW_D_W_Lined.png';import SW_D_W_Occupied from'../../../images/SW_D_W_Occupied.png';import SW_D_W_R from'../../../images/SW_D_W_R.png';import SW_D_W_R_Lined from'../../../images/SW_D_W_R_Lined.png';import SW_D_W_R_Occupied from'../../../images/SW_D_W_R_Occupied.png';// Signal Images\nimport SIG_W from'../../../images/SIG_W.png';import SIG_W_Clear from'../../../images/SIG_W_Clear.png';import SIG_W_Stop from'../../../images/SIG_W_Stop.png';import SIG_E from'../../../images/SIG_E.png';import SIG_E_Clear from'../../../images/SIG_E_Clear.png';import SIG_E_Stop from'../../../images/SIG_E_Stop.png';// Color Constants For Drawing Routes\nvar Empty='#999999';var Green='#75fa4c';var Red='#eb3323';/**\n * The React JSX Component Class for the Harriman Interlocking\n * \n * This class is a JSX React Component for the Harriman Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */var Harriman=/*#__PURE__*/function(_Component){_inherits(Harriman,_Component);function Harriman(){var _getPrototypeOf2;var _this;_classCallCheck(this,Harriman);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Harriman)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={// Switch Status\nsw_21:_this.props.sw_21,sw_32:_this.props.sw_32,// Image File for the switch - Will change depending on route\nsw_21_src:SW_U_W,sw_32_src:SW_D_W,// Image File for the signals - Will change depending on route\nsig_1w_src:SIG_W,sig_1e_src:SIG_E,sig_2e_src:SIG_E,sig_3e_src:SIG_E,// Colors for tail tracks - Will change depending on route\ntail_1_w:Empty,tail_2_w:Empty,tail_ind:Empty,tail_e:Empty,// Information For Interlocking Routes\noccupied:_this.props.status.occupied,routes:_this.props.status.routes};return _this;}_createClass(Harriman,[{key:\"componentWillReceiveProps\",/**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */value:function componentWillReceiveProps(nextProps){this.setState({sw_21:nextProps.status.sw_21,sw_32:nextProps.status.sw_32,occupied:nextProps.status.occupied,routes:nextProps.status.routes});}// ---- END componentWillReceiveProps() ----\n/**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */},{key:\"render\",value:function render(){// Clear all the drawings from the interlocking so if a train clears the route is gone\nthis.reset_drawings();// Set the switch images based off the state of each crossover\nthis.set_switch_img();// Draw all the current routes in the interlocking\nthis.set_route_drawings();// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{className:\"harriman_title\"},\"CP HARRIMAN\"),React.createElement(\"div\",{className:\"harriman_milepost\"},\"MP 45.0JS\"),React.createElement(\"div\",{className:\"harriman_1_west\",style:{background:this.state.tail_1_w}}),React.createElement(\"div\",{className:\"harriman_2_west\",style:{background:this.state.tail_2_w}}),React.createElement(\"div\",{className:\"harriman_industrial\",style:{background:this.state.tail_ind}}),React.createElement(\"div\",{className:\"harriman_SW_21\",onClick:this.props.throw_sw_21},React.createElement(\"img\",{src:this.state.sw_21_src})),React.createElement(\"div\",{className:\"harriman_SW_32\",onClick:this.props.throw_sw_32},React.createElement(\"img\",{src:this.state.sw_32_src})),React.createElement(\"div\",{className:\"harriman_1_east\",style:{background:this.state.tail_e}}),React.createElement(\"div\",{className:\"harriman_sig_2e\",onClick:this.props.click_sig_2e},React.createElement(\"img\",{src:this.state.sig_2e_src})),React.createElement(\"div\",{className:\"harriman_sig_1e\",onClick:this.props.click_sig_1e},React.createElement(\"img\",{src:this.state.sig_1e_src})),React.createElement(\"div\",{className:\"harriman_sig_3e\",onClick:this.props.click_sig_3e},React.createElement(\"img\",{src:this.state.sig_3e_src})),React.createElement(\"div\",{className:\"harriman_sig_1w\",onClick:this.props.click_sig_1w},React.createElement(\"img\",{src:this.state.sig_1w_src})));}// ---- END render() ----\n/**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */},{key:\"set_route_drawings\",value:function set_route_drawings(){// Setting the color of the tracks depending on if the interlocking in occupied or not\nvar color=null;if(this.state.occupied){color=Red;}else{color=Green;}for(var i=0;i<this.state.routes.length;i++){if(this.state.routes[i]===\"W_1_1__|__1_valley_harriman\"||this.state.routes[i]===\"E_1_1__|__1_harriman_sterling\"){// Tail Tracks\nthis.state.tail_1_w=color;this.state.tail_e=color;// The Route Is Occupied\nif(this.state.occupied){// Switch Images\nthis.state.sw_21_src=SW_U_W_Occupied;this.state.sw_32_src=SW_D_W_Occupied;// Signal Images\nthis.state.sig_1w_src=SIG_W_Stop;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switch Images\nthis.state.sw_21_src=SW_U_W_Lined;this.state.sw_32_src=SW_D_W_Lined;// Signal Images\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_1__|__1_valley_harriman\"){this.state.sig_1w_src=SIG_W_Clear;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_1w_src=SIG_W_Stop;this.state.sig_1e_src=SIG_E_Clear;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Stop;}}}else if(this.state.routes[i]===\"W_1_2__|__2_valley_harriman\"||this.state.routes[i]===\"E_2_1__|__1_harriman_sterling\"){// Tail Tracks\nthis.state.tail_2_w=color;this.state.tail_e=color;// The Route Is Occupied\nif(this.state.occupied){// Switch Images\nthis.state.sw_21_src=SW_U_W_R_Occupied;this.state.sw_32_src=SW_D_W_Occupied;// Signal Images\nthis.state.sig_1w_src=SIG_W_Stop;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switch Images\nthis.state.sw_21_src=SW_U_W_R_Lined;this.state.sw_32_src=SW_D_W_Lined;// Signal Images\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_2__|__2_valley_harriman\"){this.state.sig_1w_src=SIG_W_Clear;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_1w_src=SIG_W_Stop;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Clear;this.state.sig_3e_src=SIG_E_Stop;}}}else if(this.state.routes[i]===\"W_1_3__|__3_industrial_harriman\"||this.state.routes[i]===\"E_3_1__|__1_harriman_sterling\"){// Tail Tracks\nthis.state.tail_ind=color;this.state.tail_e=color;// The Route Is Occupied\nif(this.state.occupied){// Switch Images\nthis.state.sw_32_src=SW_D_W_R_Occupied;// Signals\nthis.state.sig_1w_src=SIG_W_Stop;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switch Images\nthis.state.sw_32_src=SW_D_W_R_Lined;// Signal Images\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_3__|__3_industrial_harriman\"){this.state.sig_1w_src=SIG_W_Clear;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_1w_src=SIG_W_Stop;this.state.sig_1e_src=SIG_E_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_3e_src=SIG_E_Clear;}}}}}// ---- END set_route_drawings() ----\n/**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */},{key:\"set_switch_img\",value:function set_switch_img(){// Set SW #21\n// SW #21 Reversed\nif(this.state.sw_21){this.state.sw_21_src=SW_U_W_R;}// SW #21 Normal\nelse{this.state.sw_21_src=SW_U_W;}// Set SW #32\n// SW #32 Reversed\nif(this.state.sw_32){this.state.sw_32_src=SW_D_W_R;}// SW #32 Normal\nelse{this.state.sw_32_src=SW_D_W;}}// ---- END set_switch_img() ----\n/**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */},{key:\"reset_drawings\",value:function reset_drawings(){this.state.sig_1w_src=SIG_W;this.state.sig_1e_src=SIG_E;this.state.sig_2e_src=SIG_E;this.state.sig_3e_src=SIG_E;this.state.tail_1_w=Empty;this.state.tail_2_w=Empty;this.state.tail_ind=Empty;this.state.tail_e=Empty;}//---- END reset_drawings() ----\n}]);return Harriman;}(Component);// Export the interlocking to be drawn on the screen\nexport default Harriman;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Southern_Tier_Line/Harriman.jsx"],"names":["React","Component","SW_U_W","SW_U_W_Lined","SW_U_W_Occupied","SW_U_W_R","SW_U_W_R_Lined","SW_U_W_R_Occupied","SW_D_W","SW_D_W_Lined","SW_D_W_Occupied","SW_D_W_R","SW_D_W_R_Lined","SW_D_W_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","Harriman","state","sw_21","props","sw_32","sw_21_src","sw_32_src","sig_1w_src","sig_1e_src","sig_2e_src","sig_3e_src","tail_1_w","tail_2_w","tail_ind","tail_e","occupied","status","routes","nextProps","setState","reset_drawings","set_switch_img","set_route_drawings","background","throw_sw_21","throw_sw_32","click_sig_2e","click_sig_1e","click_sig_3e","click_sig_1w","color","i","length"],"mappings":"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","sourcesContent":["/**\n * @file Harriman.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Harriman Interlocking\n *\n * Extends the React Component Class and is the UI part of the Harriman Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Southern_Tier_Line/harriman.css';\n\n// Import Images\n// Switch Images\nimport SW_U_W from '../../../images/SW_U_W.png';\nimport SW_U_W_Lined from '../../../images/SW_U_W_Lined.png';\nimport SW_U_W_Occupied from '../../../images/SW_U_W_Occupied.png';\nimport SW_U_W_R from '../../../images/SW_U_W_R.png';\nimport SW_U_W_R_Lined from '../../../images/SW_U_W_R_Lined.png';\nimport SW_U_W_R_Occupied from '../../../images/SW_U_W_R_Occupied.png';\nimport SW_D_W from '../../../images/SW_D_W.png';\nimport SW_D_W_Lined from '../../../images/SW_D_W_Lined.png';\nimport SW_D_W_Occupied from '../../../images/SW_D_W_Occupied.png';\nimport SW_D_W_R from '../../../images/SW_D_W_R.png';\nimport SW_D_W_R_Lined from '../../../images/SW_D_W_R_Lined.png';\nimport SW_D_W_R_Occupied from '../../../images/SW_D_W_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the Harriman Interlocking\n * \n * This class is a JSX React Component for the Harriman Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass Harriman extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_21: this.props.sw_21,\n        sw_32: this.props.sw_32,\n        // Image File for the switch - Will change depending on route\n        sw_21_src: SW_U_W,\n        sw_32_src: SW_D_W,\n        // Image File for the signals - Will change depending on route\n        sig_1w_src: SIG_W,\n        sig_1e_src: SIG_E,\n        sig_2e_src: SIG_E,\n        sig_3e_src: SIG_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_ind: Empty,\n        tail_e: Empty,\n        // Information For Interlocking Routes\n        occupied: this.props.status.occupied,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_21: nextProps.status.sw_21,\n            sw_32: nextProps.status.sw_32,\n            occupied: nextProps.status.occupied,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"harriman_title\">CP HARRIMAN</div>\n                <div className=\"harriman_milepost\">MP 45.0JS</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"harriman_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"harriman_2_west\" style={{background: this.state.tail_2_w}}></div>\n                <div className=\"harriman_industrial\" style={{background: this.state.tail_ind}}></div>\n                {/* Switches */}\n                <div className=\"harriman_SW_21\" onClick={this.props.throw_sw_21}><img src={this.state.sw_21_src}/></div>\n                <div className=\"harriman_SW_32\" onClick={this.props.throw_sw_32}><img src={this.state.sw_32_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"harriman_1_east\" style={{background: this.state.tail_e}}></div>\n                {/* Signals */}\n                <div className=\"harriman_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"harriman_sig_1e\" onClick={this.props.click_sig_1e}><img src={this.state.sig_1e_src}/></div>\n                <div className=\"harriman_sig_3e\" onClick={this.props.click_sig_3e}><img src={this.state.sig_3e_src}/></div>\n                <div className=\"harriman_sig_1w\" onClick={this.props.click_sig_1w}><img src={this.state.sig_1w_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        // Setting the color of the tracks depending on if the interlocking in occupied or not\n        let color = null;\n        if (this.state.occupied) {\n            color = Red;\n        }\n        else {\n            color = Green;\n        }\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_valley_harriman\" || this.state.routes[i] === \"E_1_1__|__1_harriman_sterling\") {\n                // Tail Tracks\n                this.state.tail_1_w = color;\n                this.state.tail_e = color;\n\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Switch Images\n                    this.state.sw_21_src = SW_U_W_Occupied;\n                    this.state.sw_32_src = SW_D_W_Occupied;\n\n                    // Signal Images\n                    this.state.sig_1w_src = SIG_W_Stop;\n                    this.state.sig_1e_src = SIG_E_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_3e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switch Images\n                    this.state.sw_21_src = SW_U_W_Lined;\n                    this.state.sw_32_src = SW_D_W_Lined;\n\n                    // Signal Images\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_valley_harriman\") {\n                        this.state.sig_1w_src = SIG_W_Clear;\n                        this.state.sig_1e_src = SIG_E_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_3e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_1w_src = SIG_W_Stop;\n                        this.state.sig_1e_src = SIG_E_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_3e_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_valley_harriman\" || this.state.routes[i] === \"E_2_1__|__1_harriman_sterling\") {\n                // Tail Tracks\n                this.state.tail_2_w = color;\n                this.state.tail_e = color;\n\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Switch Images\n                    this.state.sw_21_src = SW_U_W_R_Occupied;\n                    this.state.sw_32_src = SW_D_W_Occupied;\n\n                    // Signal Images\n                    this.state.sig_1w_src = SIG_W_Stop;\n                    this.state.sig_1e_src = SIG_E_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_3e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switch Images\n                    this.state.sw_21_src = SW_U_W_R_Lined;\n                    this.state.sw_32_src = SW_D_W_Lined;\n\n                    // Signal Images\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_2__|__2_valley_harriman\") {\n                        this.state.sig_1w_src = SIG_W_Clear;\n                        this.state.sig_1e_src = SIG_E_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_3e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_1w_src = SIG_W_Stop;\n                        this.state.sig_1e_src = SIG_E_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                        this.state.sig_3e_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_3__|__3_industrial_harriman\" || this.state.routes[i] === \"E_3_1__|__1_harriman_sterling\") {\n                // Tail Tracks\n                this.state.tail_ind = color;\n                this.state.tail_e = color;\n\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Switch Images\n                    this.state.sw_32_src = SW_D_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_1w_src = SIG_W_Stop;\n                    this.state.sig_1e_src = SIG_E_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_3e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switch Images\n                    this.state.sw_32_src = SW_D_W_R_Lined;\n\n                    // Signal Images\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_3__|__3_industrial_harriman\") {\n                        this.state.sig_1w_src = SIG_W_Clear;\n                        this.state.sig_1e_src = SIG_E_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_3e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_1w_src = SIG_W_Stop;\n                        this.state.sig_1e_src = SIG_E_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_3e_src = SIG_E_Clear;\n                    }\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img() {\n        // Set SW #21\n        // SW #21 Reversed\n        if (this.state.sw_21) {\n            this.state.sw_21_src = SW_U_W_R;\n        }\n        // SW #21 Normal\n        else {\n            this.state.sw_21_src = SW_U_W;\n        }\n\n        // Set SW #32\n        // SW #32 Reversed\n        if (this.state.sw_32) {\n            this.state.sw_32_src = SW_D_W_R;\n        }\n        // SW #32 Normal\n        else {\n            this.state.sw_32_src = SW_D_W;\n        }\n    }\n    // ---- END set_switch_img() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.sig_1w_src = SIG_W;\n        this.state.sig_1e_src = SIG_E;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_3e_src = SIG_E;\n\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_ind = Empty;\n        this.state.tail_e = Empty;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default Harriman;"]},"metadata":{},"sourceType":"module"}