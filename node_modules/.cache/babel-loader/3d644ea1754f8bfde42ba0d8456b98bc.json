{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file WestSecaucus.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for West Secaucus Interlocking\n *\n * Extends the React Component Class and is the UI part of the West Secaucus Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */ // Import React Component\nimport React,{Component}from'react';// Import CSS style sheet\nimport'../../../css/Main_Line/west_secaucus.css';// Import Images\n// Switch Images\nimport SW_D_E from'../../../images/SW_D_E.png';import SW_D_E_Lined from'../../../images/SW_D_E_Lined.png';import SW_D_E_Occupied from'../../../images/SW_D_E_Occupied.png';import SW_D_E_R from'../../../images/SW_D_E_R.png';import SW_D_E_R_Lined from'../../../images/SW_D_E_R_Lined.png';import SW_D_E_R_Occupied from'../../../images/SW_D_E_R_Occupied.png';import SW_D_W from'../../../images/SW_D_W.png';import SW_D_W_Lined from'../../../images/SW_D_W_Lined.png';import SW_D_W_Occupied from'../../../images/SW_D_W_Occupied.png';import SW_D_W_R from'../../../images/SW_D_W_R.png';import SW_D_W_R_Lined from'../../../images/SW_D_W_R_Lined.png';import SW_D_W_R_Occupied from'../../../images/SW_D_W_R_Occupied.png';// Signal Images\nimport SIG_W from'../../../images/SIG_W.png';import SIG_W_Clear from'../../../images/SIG_W_Clear.png';import SIG_W_Stop from'../../../images/SIG_W_Stop.png';import SIG_E from'../../../images/SIG_E.png';import SIG_E_Clear from'../../../images/SIG_E_Clear.png';import SIG_E_Stop from'../../../images/SIG_E_Stop.png';// Color Constants For Drawing Routes\nvar Empty='#999999';var Lined='#75fa4c';var Occupied='#eb3323';/**\n * The React JSX Component Class for the West Secaucus Interlocking\n * \n * This class is a JSX React Component for the West Secaucus Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */var WestSecaucus=/*#__PURE__*/function(_Component){_inherits(WestSecaucus,_Component);function WestSecaucus(){var _getPrototypeOf2;var _this;_classCallCheck(this,WestSecaucus);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(WestSecaucus)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={// Switch Status\nsw_1:_this.props.status.sw_1,sw_3:_this.props.status.sw_3,// Image File for the switch - Will change depending on route\nsw_1_src:SW_D_W,sw_3_src:SW_D_E,// Image File for the signals - Will change depending on route\nsig_2w_src:SIG_W,sig_4w_src:SIG_W,sig_2e_src:SIG_E,sig_4e_src:SIG_E,// Colors for tail tracks - Will change depending on route\ntail_1_e:Empty,tail_1_w:Empty,tail_2_e:Empty,tail_2_w:Empty,// Information For Interlocking Routes\nroutes:_this.props.status.routes,occupied:_this.props.status.occupied};_this.set_route_drawing=function(){// Loop through all the Routes\nfor(var i=0;i<_this.state.routes.length;i++){if(_this.state.routes[i]===\"W_1_1__|__1_mill_westSecaucus\"||_this.state.routes[i]===\"E_1_1__|__2_westSecaucus_laurel\"){// The Route Is Occupied\nif(_this.state.occupied){// Set Tail Tracks Color\n_this.state.tail_1_e=Occupied;_this.state.tail_center=Occupied;_this.state.tail_1_w=Occupied;// Switches\n_this.state.sw_1_src=SW_D_W_Occupied;_this.state.sw_3_src=SW_D_E_Occupied;// Signals\n_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Set Tail Track Colors\n_this.state.tail_1_e=Lined;_this.state.tail_center=Lined;_this.state.tail_1_w=Lined;// Switches\n_this.state.sw_1_src=SW_D_W_Lined;_this.state.sw_3_src=SW_D_E_Lined;// Signals\n// West Bound Signals\nif(_this.state.routes[i]===\"W_1_1__|__1_mill_westSecaucus\"){_this.state.sig_2w_src=SIG_W_Clear;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Clear;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}}}else if(_this.state.routes[i]===\"W_1_2__|__2_mill_westSecaucus\"||_this.state.routes[i]===\"E_2_1__|__2_westSecaucus_laurel\"){// The Route Is Occupied\nif(_this.state.occupied){// Set Tail Track Colors\n_this.state.tail_1_e=Occupied;_this.state.tail_center=Occupied;_this.state.tail_2_w=Occupied;// Switches\n_this.state.sw_1_src=SW_D_W_R_Occupied;_this.state.sw_3_src=SW_D_E_Occupied;// Signals\n_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}else{// Set Tail Track Colors\n_this.state.tail_1_e=Lined;_this.state.tail_center=Lined;_this.state.tail_2_w=Lined;// Switches\n_this.state.sw_1_src=SW_D_W_R_Lined;_this.state.sw_3_src=SW_D_E_Lined;// Signals\n// West Bound Signals\nif(_this.state.routes[i]===\"W_1_2__|__2_mill_westSecaucus\"){_this.state.sig_2w_src=SIG_W_Clear;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Clear;}}}else if(_this.state.routes[i]===\"W_2_1__|__1_mill_westSecaucus\"||_this.state.routes[i]===\"E_1_2__|__4_westSecaucus_laurel\"){// The Route Is Occupied\nif(_this.state.occupied){// Set Tail Track Colors\n_this.state.tail_2_e=Occupied;_this.state.tail_center=Occupied;_this.state.tail_1_w=Occupied;// Switches\n_this.state.sw_1_src=SW_D_W_Occupied;_this.state.sw_3_src=SW_D_E_R_Occupied;// Signals\n_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Set Tail Track Colors\n_this.state.tail_2_e=Lined;_this.state.tail_center=Lined;_this.state.tail_1_w=Lined;// Switches\n_this.state.sw_1_src=SW_D_W_Lined;_this.state.sw_3_src=SW_D_E_R_Lined;// Signals\n// West Bound Signals\nif(_this.state.routes[i]===\"W_2_1__|__1_mill_westSecaucus\"){_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Clear;_this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Clear;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}}}else if(_this.state.routes[i]===\"W_2_2__|__2_mill_westSecaucus\"||_this.state.routes[i]===\"E_2_2__|__4_westSecaucus_laurel\"){// The Route Is Occupied\nif(_this.state.occupied){// Set Tail Track Colors\n_this.state.tail_2_e=Occupied;_this.state.tail_center=Occupied;_this.state.tail_2_w=Occupied;// Switches\n_this.state.sw_1_src=SW_D_W_R_Occupied;_this.state.sw_3_src=SW_D_E_R_Occupied;// Signals\n_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Set Tail Track Colors\n_this.state.tail_2_e=Lined;_this.state.tail_center=Lined;_this.state.tail_2_w=Lined;// Switches\n_this.state.sw_1_src=SW_D_W_R_Lined;_this.state.sw_3_src=SW_D_E_R_Lined;// Signals\n// West Bound Signals\nif(_this.state.routes[i]===\"W_2_2__|__2_mill_westSecaucus\"){_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Clear;_this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{_this.state.sig_2w_src=SIG_W_Stop;_this.state.sig_2e_src=SIG_E_Stop;_this.state.sig_4w_src=SIG_W_Stop;_this.state.sig_4e_src=SIG_E_Clear;}}}}};_this.set_switch_img=function(){if(_this.state.sw_1){_this.state.sw_1_src=SW_D_W_R;}else{_this.state.sw_1_src=SW_D_W;}if(_this.state.sw_3){_this.state.sw_3_src=SW_D_E_R;}else{_this.state.sw_3_src=SW_D_E;}};return _this;}_createClass(WestSecaucus,[{key:\"componentWillReceiveProps\",/**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */value:function componentWillReceiveProps(nextProps){this.setState({sw_1:nextProps.status.sw_1,sw_3:nextProps.status.sw_3,sig_2w_src:SIG_W,sig_4w_src:SIG_W,sig_2e_src:SIG_E,sig_4e_src:SIG_E,tail_1_e:Empty,tail_1_w:Empty,tail_center:Empty,tail_2_e:Empty,tail_2_w:Empty,routes:nextProps.status.routes,occupied:nextProps.status.occupied});}// ---- END componentWillReceiveProps() ----\n/**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */},{key:\"render\",value:function render(){// Set the switch images based off the state of each crossover\nthis.set_switch_img();// Draw all the current routes in the interlocking\nthis.set_route_drawing();// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{className:\"westSecaucus_title\"},\"WEST SECAUCUS\"),React.createElement(\"div\",{className:\"westSecaucus_milepost\"},\"MP 5.0\"),React.createElement(\"div\",{className:\"m_westSecaucus_1_east\",style:{background:this.state.tail_1_e}}),React.createElement(\"div\",{className:\"m_westSecaucus_2_east\",style:{background:this.state.tail_2_e}}),React.createElement(\"div\",{className:\"westSecaucus_SW_1\",onClick:this.props.throw_sw_3},React.createElement(\"img\",{src:this.state.sw_3_src})),React.createElement(\"div\",{className:\"m_westSecaucus_bridge\",style:{background:this.state.tail_center}}),React.createElement(\"div\",{className:\"westSecaucus_SW_3\",onClick:this.props.throw_sw_1},React.createElement(\"img\",{src:this.state.sw_1_src})),React.createElement(\"div\",{className:\"m_westSecaucus_1_west\",style:{background:this.state.tail_1_w}}),React.createElement(\"div\",{className:\"m_westSecaucus_2_west\",style:{background:this.state.tail_2_w}}),React.createElement(\"div\",{className:\"westSecaucus_sig_2e\",onClick:this.props.click_sig_2e},React.createElement(\"img\",{src:this.state.sig_2e_src})),React.createElement(\"div\",{className:\"westSecaucus_sig_4e\",onClick:this.props.click_sig_4e},React.createElement(\"img\",{src:this.state.sig_4e_src})),React.createElement(\"div\",{className:\"westSecaucus_sig_2w\",onClick:this.props.click_sig_2w},React.createElement(\"img\",{src:this.state.sig_2w_src})),React.createElement(\"div\",{className:\"westSecaucus_sig_4w\",onClick:this.props.click_sig_4w},React.createElement(\"img\",{src:this.state.sig_4w_src})));}// ---- END render() ----\n/**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */ // ---- END set_switch_image() ----\n}]);return WestSecaucus;}(Component);// Export the interlocking to be drawn on the screen\nexport default WestSecaucus;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/WestSecaucus.jsx"],"names":["React","Component","SW_D_E","SW_D_E_Lined","SW_D_E_Occupied","SW_D_E_R","SW_D_E_R_Lined","SW_D_E_R_Occupied","SW_D_W","SW_D_W_Lined","SW_D_W_Occupied","SW_D_W_R","SW_D_W_R_Lined","SW_D_W_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Lined","Occupied","WestSecaucus","state","sw_1","props","status","sw_3","sw_1_src","sw_3_src","sig_2w_src","sig_4w_src","sig_2e_src","sig_4e_src","tail_1_e","tail_1_w","tail_2_e","tail_2_w","routes","occupied","set_route_drawing","i","length","tail_center","set_switch_img","nextProps","setState","background","throw_sw_3","throw_sw_1","click_sig_2e","click_sig_4e","click_sig_2w","click_sig_4w"],"mappings":"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","sourcesContent":["/**\n * @file WestSecaucus.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for West Secaucus Interlocking\n *\n * Extends the React Component Class and is the UI part of the West Secaucus Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Main_Line/west_secaucus.css';\n\n// Import Images\n// Switch Images\nimport SW_D_E from '../../../images/SW_D_E.png';\nimport SW_D_E_Lined from '../../../images/SW_D_E_Lined.png';\nimport SW_D_E_Occupied from '../../../images/SW_D_E_Occupied.png'\nimport SW_D_E_R from '../../../images/SW_D_E_R.png';\nimport SW_D_E_R_Lined from '../../../images/SW_D_E_R_Lined.png';\nimport SW_D_E_R_Occupied from '../../../images/SW_D_E_R_Occupied.png';\n\nimport SW_D_W from '../../../images/SW_D_W.png';\nimport SW_D_W_Lined from '../../../images/SW_D_W_Lined.png';\nimport SW_D_W_Occupied from '../../../images/SW_D_W_Occupied.png'\nimport SW_D_W_R from '../../../images/SW_D_W_R.png';\nimport SW_D_W_R_Lined from '../../../images/SW_D_W_R_Lined.png';\nimport SW_D_W_R_Occupied from '../../../images/SW_D_W_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Lined = '#75fa4c';\nconst Occupied = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the West Secaucus Interlocking\n * \n * This class is a JSX React Component for the West Secaucus Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass WestSecaucus extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: SW_D_W,\n        sw_3_src: SW_D_E,\n        // Image File for the signals - Will change depending on route\n        sig_2w_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_e: Empty,\n        tail_1_w: Empty,\n        tail_2_e: Empty,\n        tail_2_w: Empty,\n        // Information For Interlocking Routes\n        routes: this.props.status.routes,\n        occupied: this.props.status.occupied\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            sw_1: nextProps.status.sw_1,\n            sw_3: nextProps.status.sw_3,\n            sig_2w_src: SIG_W,\n            sig_4w_src: SIG_W,\n            sig_2e_src: SIG_E,\n            sig_4e_src: SIG_E,\n            tail_1_e: Empty,\n            tail_1_w: Empty,\n            tail_center: Empty,\n            tail_2_e: Empty,\n            tail_2_w: Empty,\n            routes: nextProps.status.routes,\n            occupied: nextProps.status.occupied\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawing();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return ( \n            <div>\n                {/* Tags */}\n                <div className=\"westSecaucus_title\">WEST SECAUCUS</div>\n                <div className=\"westSecaucus_milepost\">MP 5.0</div>\n                {/* East Side Tail Tracks */}\n                <div className=\"m_westSecaucus_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"m_westSecaucus_2_east\" style={{background: this.state.tail_2_e}}></div>\n                {/* Switches */}\n                <div className=\"westSecaucus_SW_1\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"m_westSecaucus_bridge\" style={{background: this.state.tail_center}}></div>\n                <div className=\"westSecaucus_SW_3\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                {/* West Side Tail Tracks */}\n                <div className=\"m_westSecaucus_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"m_westSecaucus_2_west\" style={{background: this.state.tail_2_w}}></div>\n                {/* Signals */}\n                <div className=\"westSecaucus_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"westSecaucus_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n                <div className=\"westSecaucus_sig_2w\" onClick={this.props.click_sig_2w}><img src={this.state.sig_2w_src}/></div>\n                <div className=\"westSecaucus_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawing = () => {\n        // Loop through all the Routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_mill_westSecaucus\" || this.state.routes[i] === \"E_1_1__|__2_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Tracks Color\n                    this.state.tail_1_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_1_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Occupied;\n                    this.state.sw_3_src = SW_D_E_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_1_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_1_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Lined;\n                    this.state.sw_3_src = SW_D_E_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_mill_westSecaucus\" || this.state.routes[i] === \"E_2_1__|__2_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Track Colors\n                    this.state.tail_1_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_2_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n                    this.state.sw_3_src = SW_D_E_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_1_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_2_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n                    this.state.sw_3_src = SW_D_E_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_2__|__2_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__1_mill_westSecaucus\" || this.state.routes[i] === \"E_1_2__|__4_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_1_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Occupied;\n                    this.state.sw_3_src = SW_D_E_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_1_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_Lined;\n                    this.state.sw_3_src = SW_D_E_R_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_1__|__1_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_mill_westSecaucus\" || this.state.routes[i] === \"E_2_2__|__4_westSecaucus_laurel\") {\n                // The Route Is Occupied\n                if (this.state.occupied) {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Occupied;\n                    this.state.tail_center = Occupied;\n                    this.state.tail_2_w = Occupied;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Occupied;\n                    this.state.sw_3_src = SW_D_E_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Set Tail Track Colors\n                    this.state.tail_2_e = Lined;\n                    this.state.tail_center = Lined;\n                    this.state.tail_2_w = Lined;\n\n                    // Switches\n                    this.state.sw_1_src = SW_D_W_R_Lined;\n                    this.state.sw_3_src = SW_D_E_R_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_mill_westSecaucus\") {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            } \n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        if (this.state.sw_1) {\n            this.state.sw_1_src = SW_D_W_R;\n        }\n        else {\n            this.state.sw_1_src = SW_D_W;\n        }\n        \n        if (this.state.sw_3) {\n            this.state.sw_3_src = SW_D_E_R;\n        }\n        else {\n            this.state.sw_3_src = SW_D_E;\n        }\n    }\n    // ---- END set_switch_image() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default WestSecaucus;"]},"metadata":{},"sourceType":"module"}