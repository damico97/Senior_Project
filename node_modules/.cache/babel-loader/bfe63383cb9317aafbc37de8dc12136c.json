{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";/**\n * @file ctc_ridgewood.js\n * @author Joey Damico\n * @date September 25, 2019\n * @summary CTC Controller Class for the Ridgewood Junction Interlocking\n */ // Color Constants For Drawing Routes\nvar Empty='#999999';var Lined='#75fa4c';var Occupied='#eb3323';/**\n * Class is the Backend for the Ridgewood Junction Interlocking This class is what controlls the Ridgewood Junction Interlocking, \n * it is sort of like a backen, but is the controller, this is what makes all the train movements possible, and the ReactJS Component \n * class gets information from this class to display the correct status of the interlocking on the screen\n * \n * MEMBER VARIABLES\n * @member sw_1 -> Bool if Switch #1 is Reveresed or Not\n * @member sw_3 -> Bool if Switch #3 is Reveresed or Not\n * @member sw_5 -> Bool if Switch #5 is Reveresed or Not\n * @member sw_7 -> Bool if Switch #7 is Reveresed or Not\n * @member sw_9 -> Bool if Switch #9 is Reveresed or Not\n * \n * @member sig_2w_1 -> Bool if Signal #2w-1 is Lined or Not\n * @member sig_2w_2 -> Bool if Signal #2w-2 is Lined or Not\n * @member sig_4w -> Bool if Signal #4w is Lined or Not\n * @member sig_6w -> Bool if Signal #6w is Lined or Not\n * @member sig_2e -> Bool if Signal #2e is Lined or Not\n * @member sig_4e -> Bool if Signal #4e is Lined or Not\n * @member sig_6e -> Bool if Signal #6e is Lined or Not\n * \n * @member route_w_trk_1 = The west bound route for track #1\n * @member route_w_trk_2 = The west bound route for track #2\n * @member route_w_trk_3 = The west bound route for track #3\n * @member route_w_trk_4 = The west bound route for track #4\n * @member route_e_trk_1 = The east bound route for track #1\n * @member route_e_trk_2 = The east bound route for track #2\n * @member route_e_trk_3 = The east bound route for track #3\n * \n * @member routed_trk_1 = Bool if track #1 is routed or not\n * @member routed_trk_2 = Bool if track #2 is routed or not\n * @member routed_trk_3 = Bool if track #3 is routed or not\n * @member trk_1_time = The time track #1 was occupied, used to know when to clear the route\n * @member trk_2_time = The time track #2 was occupied, used to know when to clear the route\n * @member trk_3_time = The time track #3 was occupied, used to know when to clear the route\n * @member trk_1_occupied = Bool if track #1 is occupied or not\n * @member trk_2_occupied = Bool if track #2 is occupied or not\n * @member trk_3_occupied = Bool if track #3 is occupied or not\n */var CTC_Ridgewood=/*#__PURE__*/function(){/**\n     * constructor()\n     * @summary The constructor for the CTC_Ridgewood class\n     * \n     * @description This will initialize all the member variables when the program is started\n     */function CTC_Ridgewood(){_classCallCheck(this,CTC_Ridgewood);// Bools for the switches\nthis.sw_1=false;this.sw_3=false;this.sw_5=false;this.sw_7=false;this.sw_9=false;// Bools for the signals\nthis.sig_2w_1=false;this.sig_2w_2=false;this.sig_4w=false;this.sig_6w=false;this.sig_2e=false;this.sig_4e=false;this.sig_6e=false;// Track routes\nthis.route_w_trk_3=null;this.route_w_trk_4=null;this.route_w_trk_1=null;this.route_w_trk_2=null;this.route_e_trk_3=null;this.route_e_trk_1=null;this.route_e_trk_2=null;// Used for routing and occupying the tracks \nthis.routed_trk_1=false;this.routed_trk_2=false;this.routed_trk_3=false;this.occupied_trk_1=false;this.occupied_trk_2=false;this.occupied_trk_3=false;this.trk_1_time=null;this.trk_2_time=null;this.trk_3_time=null;}// ---- END constructor() ----\n/**\n     * get_train_route()\n     * @summary Returns the route for the train at a given track\n     * \n     * @param direction, The direction the train is moving\n     * @param track, The Track number of the train \n     */_createClass(CTC_Ridgewood,[{key:\"get_train_route\",value:function get_train_route(direction,track){if(direction===\"WEST\"){if(track===\"1\"){return this.route_w_trk_1;}else if(track===\"2\"){return this.route_w_trk_2;}else if(track===\"3\"){return this.route_w_trk_3;}else{return this.route_w_trk_4;}}else{if(track===\"1\"){return this.route_e_trk_1;}else if(track===\"2\"){return this.route_e_trk_2;}else{return this.route_e_trk_3;}}}// ---- END get_train_route() ----\n/**\n     * click_sig_2w_1()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */},{key:\"click_sig_2w1\",value:function click_sig_2w1(next_block_1,next_block_2,next_block_3){if(this.sw_3||this.sw_7||this.sw_9){return;}else if(!this.sw_1&&!this.sw_5){if(this.sig_2w_1){this.route_w_trk_1=null;this.routed_trk_1=false;this.sig_2w_1=false;return;}else{if(next_block_1===Occupied||next_block_1===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_1=\"W_1_1__|__1_wc_ridgewood\";this.routed_trk_1=true;this.sig_2w_1=true;}}else if(this.sw_1&&!this.sw_5){if(this.sig_2w_1){this.route_w_trk_1=null;this.routed_trk_1=false;this.sig_2w_1=false;return;}else{if(next_block_3===Occupied||next_block_3===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_1=\"W_1_3__|__3_wc_ridgewood\";this.routed_trk_1=true;this.sig_2w_1=true;}}else if(!this.sw_1&&this.sw_5){if(this.sig_2w_1){this.route_w_trk_1=null;this.routed_trk_1=false;this.sig_2w_1=false;return;}else{if(next_block_2===Occupied||next_block_2===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_1=\"W_1_2__|__2_wc_ridgewood\";this.routed_trk_1=true;this.sig_2w_1=true;}}}// ---- END click_sig_2w_1() ----\n/**\n     * click_sig_2w_2()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */},{key:\"click_sig_2w2\",value:function click_sig_2w2(next_block_1,next_block_2,next_block_3){if(this.sw_3||this.sw_7){return;}if(this.sw_9){if(!this.sw_1&&!this.sw_5){if(this.sig_2w_2){this.route_w_trk_4=null;this.routed_trk_1=false;this.sig_2w_2=false;return;}else{if(next_block_1===Occupied||next_block_1===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_4=\"W_4_1__|__1_wc_ridgewood\";this.routed_trk_1=true;this.sig_2w_2=true;}}else if(this.sw_1&&!this.sw_5){if(this.sig_2w_2){this.route_w_trk_4=null;this.routed_trk_1=false;this.sig_2w_2=false;return;}else{if(next_block_3===Occupied||next_block_3===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_4=\"W_4_3__|__3_wc_ridgewood\";this.routed_trk_1=true;this.sig_2w_2=true;}}else if(!this.sw_1&&this.sw_5){if(this.sig_2w_2){this.route_w_trk_4=null;this.routed_trk_1=false;this.sig_2w_2=false;return;}else{if(next_block_2===Occupied||next_block_2===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_4=\"W_4_2__|__2_wc_ridgewood\";this.routed_trk_1=true;this.sig_2w_2=true;}}}}// ---- END click_sig_2w_2() ----\n/**\n     * click_sig_4w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */},{key:\"click_sig_4w\",value:function click_sig_4w(next_block_1,next_block_2,next_block_3){if(this.sw_5){return;}if(!this.sw_3){if(this.sig_4w){this.route_w_trk_2=null;this.routed_trk_2=false;this.sig_4w=false;return;}else{if(next_block_2===Occupied||next_block_2===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_2=\"W_2_2__|__2_wc_ridgewood\";this.routed_trk_2=true;this.sig_4w=true;}}else if(!this.sw_1&&this.sw_3){if(this.sig_4w){this.route_w_trk_2=null;this.routed_trk_2=false;this.sig_4w=false;return;}else{if(next_block_1===Occupied||next_block_1===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_2=\"W_2_1__|__1_wc_ridgewood\";this.routed_trk_2=true;this.sig_4w=true;}}else if(this.sw_1&&this.sw_3){if(this.sig_4w){this.route_w_trk_2=null;this.routed_trk_2=false;this.sig_4w=false;return;}else{if(next_block_3===Occupied||next_block_3===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_2=\"W_2_3__|__3_wc_ridgewood\";this.routed_trk_2=true;this.sig_4w=true;}}}// ---- END click_sig_4w() ----\n/**\n     * click_sig_6w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */},{key:\"click_sig_6w\",value:function click_sig_6w(next_block_1,next_block_2,next_block_3){if(this.sw_1){return;}else if(!this.sw_7){if(this.sig_6w){this.route_w_trk_3=null;this.routed_trk_3=false;this.sig_6w=false;return;}else{if(next_block_3===Occupied||next_block_3===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_3=\"W_3_3__|__3_wc_ridgewood\";this.routed_trk_3=true;this.sig_6w=true;}}else if(this.sw_7&&!this.sw_5&&!this.sw_3){if(this.sig_6w){this.route_w_trk_3=null;this.routed_trk_3=false;this.sig_6w=false;return;}else{if(next_block_1===Occupied||next_block_1===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_3=\"W_3_1__|__1_wc_ridgewood\";this.routed_trk_3=true;this.sig_6w=true;}}else if(this.sw_7&&this.sw_5&&!this.sw_3){if(this.sig_6w){this.route_w_trk_3=null;this.routed_trk_3=false;this.sig_6w=false;return;}else{if(next_block_2===Occupied||next_block_2===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_w_trk_3=\"W_3_2__|__2_wc_ridgewood\";this.routed_trk_3=true;this.sig_6w=true;}}}// ---- END click_sig_6w() ----\n/**\n     * click_sig_2e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */},{key:\"click_sig_2e\",value:function click_sig_2e(next_block_1,next_block_2,next_block_3,next_block_4){if(this.sw_1||this.sw_5){return;}else if(!this.sw_3&&!this.sw_7&&!this.sw_9){if(this.sig_2e){this.route_e_trk_1=null;this.routed_trk_1=false;this.sig_2e=false;return;}else{if(next_block_1===Occupied||next_block_1===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_1=\"E_1_1__|__1_ridgewood_suscon\";this.routed_trk_1=true;this.sig_2e=true;}}else if(this.sw_3&&!this.sw_7&&!this.sw_9){if(this.sig_2e){this.route_e_trk_1=null;this.routed_trk_1=false;this.sig_2e=false;return;}else{if(next_block_2===Occupied||next_block_2===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_1=\"E_1_2__|__2_ridgewood_suscon\";this.routed_trk_1=true;this.sig_2e=true;}}else if(!this.sw_3&&this.sw_7&&!this.sw_9){if(this.sig_2e){this.route_e_trk_1=null;this.routed_trk_1=false;this.sig_2e=false;return;}else{if(next_block_3===Occupied||next_block_3===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_1=\"E_1_3__|__1_ridgewood_bt\";this.routed_trk_1=true;this.sig_2e=true;}}else if(!this.sw_3&&!this.sw_7&&this.sw_9){if(this.sig_2e){this.route_e_trk_1=null;this.routed_trk_1=false;this.sig_2e=false;return;}else{if(next_block_4===Occupied||next_block_4===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_1=\"E_1_4__|__2_ridgewood_bt\";this.routed_trk_1=true;this.sig_2e=true;}}}// ---- END click_sig_2e() ----\n/**\n     * click_sig_4e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */},{key:\"click_sig_4e\",value:function click_sig_4e(next_block_1,next_block_2,next_block_3,next_block_4){if(this.sw_3){return;}else if(!this.sw_5){if(this.sig_4e){this.route_e_trk_2=null;this.routed_trk_2=false;this.sig_4e=false;return;}else{if(next_block_2===Occupied||next_block_2===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_2=\"E_2_2__|__2_ridgewood_suscon\";this.routed_trk_2=true;this.sig_4e=true;}}else if(this.sw_5&&!this.sw_7&&!this.sw_9){if(this.sig_4e){this.route_e_trk_2=null;this.routed_trk_2=false;this.sig_4e=false;return;}else{if(next_block_1===Occupied||next_block_1===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_2=\"E_2_1__|__1_ridgewood_suscon\";this.routed_trk_2=true;this.sig_4e=true;}}else if(this.sw_5&&this.sw_7){if(this.sig_4e){this.route_e_trk_2=null;this.routed_trk_2=false;this.sig_4e=false;return;}else{if(next_block_3===Occupied||next_block_3===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_2=\"E_2_3__|__1_ridgewood_bt\";this.routed_trk_2=true;this.sig_4e=true;}}else if(this.sw_5&&!this.sw_7&&this.sw_9){if(this.sig_4e){this.route_e_trk_2=null;this.routed_trk_2=false;this.sig_4e=false;return;}else{if(next_block_4===Occupied||next_block_4===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_2=\"E_2_4__|__2_ridgewood_bt\";this.routed_trk_2=true;this.sig_4e=true;}}}// ---- END click_sig_4e() ----\n/**\n     * click_sig_6e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */},{key:\"click_sig_6e\",value:function click_sig_6e(next_block_1,next_block_2,next_block_3,next_block_4){if(this.sw_7){return;}else if(!this.sw_1){if(this.sig_6e){this.route_e_trk_3=null;this.routed_trk_3=false;this.sig_6e=false;return;}else{if(next_block_3===Occupied||next_block_3===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_3=\"E_3_3__|__1_ridgewood_bt\";this.routed_trk_3=true;this.sig_6e=true;}}else if(this.sw_1&&!this.sw_3&&!this.sw_5&&!this.sw_7&&!this.sw_9){if(this.sig_6e){this.route_e_trk_3=null;this.routed_trk_3=false;this.sig_6e=false;return;}else{if(next_block_1===Occupied||next_block_1===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_3=\"E_3_1__|__1_ridgewood_suscon\";this.routed_trk_3=true;this.sig_6e=true;}}else if(this.sw_1&&!this.sw_3&&!this.sw_5&&!this.sw_7&&this.sw_9){if(this.sig_6e){this.route_e_trk_3=null;this.routed_trk_3=false;this.sig_6e=false;return;}else{if(next_block_4===Occupied||next_block_4===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_3=\"E_3_4__|__2_ridgewood_bt\";this.routed_trk_3=true;this.sig_6e=true;}}else if(this.sw_1&&this.sw_3&&!this.sw_5){if(this.sig_6e){this.route_e_trk_3=null;this.routed_trk_3=false;this.sig_6e=false;return;}else{if(next_block_2===Occupied||next_block_2===Lined){alert(\"Cannot Line Route Because Conflict With Next Block\");return;}this.route_e_trk_3=\"E_3_2__|__2_ridgewood_suscon\";this.routed_trk_3=true;this.sig_6e=true;}}}// ---- END click_sig_6e() ----\n/**\n     * get_routes()\n     * @summary Gets all the routes from the interlocking\n     * \n     * @returns An Array holding every route variable from the interlocking\n     */},{key:\"get_routes\",value:function get_routes(){var routes=[this.route_e_trk_2,this.route_e_trk_3,this.route_w_trk_2,this.route_w_trk_4,this.route_w_trk_3,this.route_e_trk_1,this.route_w_trk_1];return routes;}// ---- END get_routes() ----\n/**\n     * set_trk_1_occupied()\n     * @summary Sets track #1 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */},{key:\"set_trk_1_occupied\",value:function set_trk_1_occupied(n_state){if(n_state===true){this.occupied_trk_1=n_state;this.routed_trk_1=false;this.trk_1_time=new Date().getTime()/1000;}else{console.log(\"ERROR\");}}// ---- END set_trk_1_occupied() ----\n/**\n     * set_trk_2_occupied()\n     * @summary Sets track #2 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */},{key:\"set_trk_2_occupied\",value:function set_trk_2_occupied(n_state){if(n_state===true){this.occupied_trk_2=n_state;this.routed_trk_2=false;this.trk_2_time=new Date().getTime()/1000;}else{console.log(\"ERROR\");}}// ---- END set_trk_2_occupied() ----\n/**\n     * set_trk_3_occupied()\n     * @summary Sets track #3 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */},{key:\"set_trk_3_occupied\",value:function set_trk_3_occupied(n_state){if(n_state===true){this.occupied_trk_3=n_state;this.routed_trk_3=false;this.trk_3_time=new Date().getTime()/1000;}else{console.log(\"ERROR\");}}// ---- END set_trk_3_occupied() ----\n/**\n     * can_clear()\n     * @summary Checks if a track could be cleared, meaning a train is no longer in the interlocking\n     * \n     * @description Check both track if a train has been in the interlocking for more then 4 seconds, if so it\n     * clears that track\n     */},{key:\"can_clear\",value:function can_clear(){// Get the current time\nvar current_time=new Date().getTime()/1000;// Track #1\nif(current_time-this.trk_1_time>4&&current_time-this.trk_1_time<100000){this.sig_2w_1=false;this.sig_2w_2=false;this.sig_2e=false;this.route_w_trk_1=null;this.route_w_trk_4=null;this.route_e_trk_1=null;this.routed_trk_1=false;this.occupied_trk_1=false;this.trk_1_time=null;}// Track #2\nif(current_time-this.trk_2_time>4&&current_time-this.trk_2_time<100000){this.sig_4w=false;this.sig_4e=false;this.route_w_trk_2=null;this.route_e_trk_2=null;this.routed_trk_2=false;this.occupied_trk_2=false;this.trk_2_time=null;}// Track #3\nif(current_time-this.trk_3_time>4&&current_time-this.trk_3_time<100000){this.sig_6w=false;this.sig_6e=false;this.route_w_trk_3=null;this.route_e_trk_3=null;this.routed_trk_3=false;this.occupied_trk_3=false;this.trk_3_time=null;}}// ---- END can_clear() ----\n/**\n     * @summary Function to throw switch #1 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */},{key:\"throw_sw_1\",value:function throw_sw_1(){if(this.sw_1===false){this.sw_1=true;}else{this.sw_1=false;}}// ---- END throw_sw_1() ----\n/**\n     * @summary Funtion to throw switch #3 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */},{key:\"throw_sw_3\",value:function throw_sw_3(){if(this.sw_3===false){this.sw_3=true;}else{this.sw_3=false;}}// ---- END throw_sw_3() ----\n/**\n     * @summary Funtion to throw switch #5 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */},{key:\"throw_sw_5\",value:function throw_sw_5(){if(this.sw_5===false){this.sw_5=true;}else{this.sw_5=false;}}// ---- END throw_sw_5() ----\n/**\n     * @summary Funtion to throw switch #7 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */},{key:\"throw_sw_7\",value:function throw_sw_7(){if(this.sw_7===false){this.sw_7=true;}else{this.sw_7=false;}}// ---- END throw_sw_7() ----\n/**\n     * @summary Funtion to throw switch #9 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */},{key:\"throw_sw_9\",value:function throw_sw_9(){if(this.sw_9===false){this.sw_9=true;}else{this.sw_9=false;}}// ---- END throw_sw_9() ----\n/**\n     * get_interlocking_status()\n     * @summary returns the status of the interlocking that would be needed by the ReactJS Components\n     * \n     * @description All the information that is returned here is what is needed by the ReactJS Component \n     * for the interlocking that is need to draw the interlocking to the screen\n     * \n     * @returns Object with the status of the interlocking\n     */},{key:\"get_interlocking_status\",value:function get_interlocking_status(){var status={sw_1:this.sw_1,sw_3:this.sw_3,sw_5:this.sw_5,sw_7:this.sw_7,sw_9:this.sw_9,routed_trk_1:this.routed_trk_1,routed_trk_2:this.routed_trk_2,routed_trk_3:this.routed_trk_3,occupied_trk_1:this.occupied_trk_1,occupied_trk_2:this.occupied_trk_2,occupied_trk_3:this.occupied_trk_3,routes:this.get_routes()};return status;}// ---- END get_interlocking_status() ----\n}]);return CTC_Ridgewood;}();// This is required when using ReactJS\nexport default CTC_Ridgewood;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/scripts/Interlockings/Main_Line/ctc_ridgewood.js"],"names":["Empty","Lined","Occupied","CTC_Ridgewood","sw_1","sw_3","sw_5","sw_7","sw_9","sig_2w_1","sig_2w_2","sig_4w","sig_6w","sig_2e","sig_4e","sig_6e","route_w_trk_3","route_w_trk_4","route_w_trk_1","route_w_trk_2","route_e_trk_3","route_e_trk_1","route_e_trk_2","routed_trk_1","routed_trk_2","routed_trk_3","occupied_trk_1","occupied_trk_2","occupied_trk_3","trk_1_time","trk_2_time","trk_3_time","direction","track","next_block_1","next_block_2","next_block_3","alert","next_block_4","routes","n_state","Date","getTime","console","log","current_time","status","get_routes"],"mappings":"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","sourcesContent":["/**\n * @file ctc_ridgewood.js\n * @author Joey Damico\n * @date September 25, 2019\n * @summary CTC Controller Class for the Ridgewood Junction Interlocking\n */\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Lined = '#75fa4c';\nconst Occupied = '#eb3323';\n\n\n/**\n * Class is the Backend for the Ridgewood Junction Interlocking This class is what controlls the Ridgewood Junction Interlocking, \n * it is sort of like a backen, but is the controller, this is what makes all the train movements possible, and the ReactJS Component \n * class gets information from this class to display the correct status of the interlocking on the screen\n * \n * MEMBER VARIABLES\n * @member sw_1 -> Bool if Switch #1 is Reveresed or Not\n * @member sw_3 -> Bool if Switch #3 is Reveresed or Not\n * @member sw_5 -> Bool if Switch #5 is Reveresed or Not\n * @member sw_7 -> Bool if Switch #7 is Reveresed or Not\n * @member sw_9 -> Bool if Switch #9 is Reveresed or Not\n * \n * @member sig_2w_1 -> Bool if Signal #2w-1 is Lined or Not\n * @member sig_2w_2 -> Bool if Signal #2w-2 is Lined or Not\n * @member sig_4w -> Bool if Signal #4w is Lined or Not\n * @member sig_6w -> Bool if Signal #6w is Lined or Not\n * @member sig_2e -> Bool if Signal #2e is Lined or Not\n * @member sig_4e -> Bool if Signal #4e is Lined or Not\n * @member sig_6e -> Bool if Signal #6e is Lined or Not\n * \n * @member route_w_trk_1 = The west bound route for track #1\n * @member route_w_trk_2 = The west bound route for track #2\n * @member route_w_trk_3 = The west bound route for track #3\n * @member route_w_trk_4 = The west bound route for track #4\n * @member route_e_trk_1 = The east bound route for track #1\n * @member route_e_trk_2 = The east bound route for track #2\n * @member route_e_trk_3 = The east bound route for track #3\n * \n * @member routed_trk_1 = Bool if track #1 is routed or not\n * @member routed_trk_2 = Bool if track #2 is routed or not\n * @member routed_trk_3 = Bool if track #3 is routed or not\n * @member trk_1_time = The time track #1 was occupied, used to know when to clear the route\n * @member trk_2_time = The time track #2 was occupied, used to know when to clear the route\n * @member trk_3_time = The time track #3 was occupied, used to know when to clear the route\n * @member trk_1_occupied = Bool if track #1 is occupied or not\n * @member trk_2_occupied = Bool if track #2 is occupied or not\n * @member trk_3_occupied = Bool if track #3 is occupied or not\n */\nclass CTC_Ridgewood {\n    /**\n     * constructor()\n     * @summary The constructor for the CTC_Ridgewood class\n     * \n     * @description This will initialize all the member variables when the program is started\n     */\n    constructor() { \n        // Bools for the switches\n        this.sw_1 = false;\n        this.sw_3 = false;\n        this.sw_5 = false;\n        this.sw_7 = false;\n        this.sw_9 = false;\n        // Bools for the signals\n        this.sig_2w_1 = false;\n        this.sig_2w_2 = false;\n        this.sig_4w = false;\n        this.sig_6w = false;\n        this.sig_2e = false;\n        this.sig_4e = false;\n        this.sig_6e = false;\n        // Track routes\n        this.route_w_trk_3 = null;\n        this.route_w_trk_4 = null;\n        this.route_w_trk_1 = null;\n        this.route_w_trk_2 = null;\n        this.route_e_trk_3 = null;\n        this.route_e_trk_1 = null;\n        this.route_e_trk_2 = null;\n        // Used for routing and occupying the tracks \n        this.routed_trk_1 = false;\n        this.routed_trk_2 = false;\n        this.routed_trk_3 = false;\n        this.occupied_trk_1 = false;\n        this.occupied_trk_2 = false;\n        this.occupied_trk_3 = false;\n        this.trk_1_time = null;\n        this.trk_2_time = null;\n        this.trk_3_time = null;\n    }\n    // ---- END constructor() ----\n\n    /**\n     * get_train_route()\n     * @summary Returns the route for the train at a given track\n     * \n     * @param direction, The direction the train is moving\n     * @param track, The Track number of the train \n     */\n    get_train_route(direction, track) {\n        if (direction === \"WEST\") {\n            if (track === \"1\") {\n                return this.route_w_trk_1;\n            }\n            else if (track === \"2\") {\n                return this.route_w_trk_2;\n            }\n            else if (track === \"3\") {\n                return this.route_w_trk_3;\n            }\n            else {\n                return this.route_w_trk_4;\n            }\n        }\n        else {\n            if (track === \"1\") {\n                return this.route_e_trk_1;\n            }\n            else if (track === \"2\") {\n                return this.route_e_trk_2;\n            }\n            else {\n                return this.route_e_trk_3;\n            }\n        }\n    }\n    // ---- END get_train_route() ----\n\n    /**\n     * click_sig_2w_1()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */\n    click_sig_2w1(next_block_1, next_block_2, next_block_3) {\n        if (this.sw_3 || this.sw_7 || this.sw_9) {\n            return;\n        }\n        else if (!this.sw_1 && !this.sw_5) {\n            if (this.sig_2w_1) {\n                this.route_w_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2w_1 = false;\n                return;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_1 = \"W_1_1__|__1_wc_ridgewood\";\n                this.routed_trk_1 = true;\n                this.sig_2w_1 = true;\n            }\n        }\n        else if (this.sw_1 && !this.sw_5) {\n            if (this.sig_2w_1) {\n                this.route_w_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2w_1 = false;\n                return;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_1 = \"W_1_3__|__3_wc_ridgewood\";\n                this.routed_trk_1 = true;\n                this.sig_2w_1 = true;\n            }\n        }\n        else if (!this.sw_1 && this.sw_5) {\n            if (this.sig_2w_1) {\n                this.route_w_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2w_1 = false;\n                return;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_1 = \"W_1_2__|__2_wc_ridgewood\";\n                this.routed_trk_1 = true;\n                this.sig_2w_1 = true;\n            }\n        }\n    }\n    // ---- END click_sig_2w_1() ----\n\n    /**\n     * click_sig_2w_2()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */\n    click_sig_2w2(next_block_1, next_block_2, next_block_3) {\n        if (this.sw_3 || this.sw_7) {\n            return;\n        }\n        if (this.sw_9) {\n            if (!this.sw_1 && !this.sw_5) {\n                if (this.sig_2w_2) {\n                    this.route_w_trk_4 = null;\n                    this.routed_trk_1 = false;\n                    this.sig_2w_2 = false;\n                    return;\n                }\n                else {\n                    if (next_block_1 === Occupied || next_block_1 === Lined) {\n                        alert(\"Cannot Line Route Because Conflict With Next Block\");\n                        return;\n                    }\n                    this.route_w_trk_4 = \"W_4_1__|__1_wc_ridgewood\";\n                    this.routed_trk_1 = true;\n                    this.sig_2w_2 = true;\n                }\n            }\n            else if (this.sw_1 && !this.sw_5) {\n                if (this.sig_2w_2) {\n                    this.route_w_trk_4 = null;\n                    this.routed_trk_1 = false;\n                    this.sig_2w_2 = false;\n                    return;\n                }\n                else {\n                    if (next_block_3 === Occupied || next_block_3 === Lined) {\n                        alert(\"Cannot Line Route Because Conflict With Next Block\");\n                        return;\n                    }\n                    this.route_w_trk_4 = \"W_4_3__|__3_wc_ridgewood\";\n                    this.routed_trk_1 = true;\n                    this.sig_2w_2 = true;\n                }\n            }\n            else if (!this.sw_1 && this.sw_5) {\n                if (this.sig_2w_2) {\n                    this.route_w_trk_4 = null;\n                    this.routed_trk_1 = false;\n                    this.sig_2w_2 = false;\n                    return;\n                }\n                else {\n                    if (next_block_2 === Occupied || next_block_2 === Lined) {\n                        alert(\"Cannot Line Route Because Conflict With Next Block\");\n                        return;\n                    }\n                    this.route_w_trk_4 = \"W_4_2__|__2_wc_ridgewood\";\n                    this.routed_trk_1 = true;\n                    this.sig_2w_2 = true;\n                }\n            }\n        }\n    }\n    // ---- END click_sig_2w_2() ----\n\n    /**\n     * click_sig_4w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */\n    click_sig_4w(next_block_1, next_block_2, next_block_3) {\n        if (this.sw_5) {\n            return;\n        }\n        if (!this.sw_3) {\n            if (this.sig_4w) {\n                this.route_w_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4w = false;\n                return;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_2 = \"W_2_2__|__2_wc_ridgewood\";\n                this.routed_trk_2 = true;\n                this.sig_4w = true;\n            }\n        }\n        else if (!this.sw_1 && this.sw_3) {\n            if (this.sig_4w) {\n                this.route_w_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4w = false;\n                return;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_2 = \"W_2_1__|__1_wc_ridgewood\";\n                this.routed_trk_2 = true;\n                this.sig_4w = true;\n            }\n        }\n        else if (this.sw_1 && this.sw_3) {\n            if (this.sig_4w) {\n                this.route_w_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4w = false;\n                return;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_2 = \"W_2_3__|__3_wc_ridgewood\";\n                this.routed_trk_2 = true;\n                this.sig_4w = true;\n            }\n        }\n    }\n    // ---- END click_sig_4w() ----\n\n    /**\n     * click_sig_6w()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     */\n    click_sig_6w(next_block_1, next_block_2, next_block_3) {\n        if (this.sw_1) {\n            return;\n        }\n        else if (!this.sw_7) {\n            if (this.sig_6w) {\n                this.route_w_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6w = false;\n                return;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_3 = \"W_3_3__|__3_wc_ridgewood\";\n                this.routed_trk_3 = true;\n                this.sig_6w = true;\n            }\n        }\n        else if (this.sw_7 && !this.sw_5 && !this.sw_3) {\n            if (this.sig_6w) {\n                this.route_w_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6w = false;\n                return;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_3 = \"W_3_1__|__1_wc_ridgewood\";\n                this.routed_trk_3 = true;\n                this.sig_6w = true;\n            }\n        }\n        else if (this.sw_7 && this.sw_5 && !this.sw_3) {\n            if (this.sig_6w) {\n                this.route_w_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6w = false;\n                return;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_w_trk_3 = \"W_3_2__|__2_wc_ridgewood\";\n                this.routed_trk_3 = true;\n                this.sig_6w = true;\n            }\n        }\n    }\n    // ---- END click_sig_6w() ----\n\n    /**\n     * click_sig_2e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_2e(next_block_1, next_block_2, next_block_3, next_block_4) {\n        if (this.sw_1 || this.sw_5) {\n            return;\n        }\n        else if (!this.sw_3 && !this.sw_7 && !this.sw_9) {\n            if (this.sig_2e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2e = false;\n                return;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_1__|__1_ridgewood_suscon\";\n                this.routed_trk_1 = true;\n                this.sig_2e = true;\n            }\n        }\n        else if (this.sw_3 && !this.sw_7 && !this.sw_9) {\n            if (this.sig_2e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2e = false;\n                return;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_2__|__2_ridgewood_suscon\";\n                this.routed_trk_1 = true;\n                this.sig_2e = true;\n            }\n        }\n        else if (!this.sw_3 && this.sw_7 && !this.sw_9) {\n            if (this.sig_2e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2e = false;\n                return;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_3__|__1_ridgewood_bt\";\n                this.routed_trk_1 = true;\n                this.sig_2e = true;\n            }\n        }\n        else if (!this.sw_3 && !this.sw_7 && this.sw_9) {\n            if (this.sig_2e) {\n                this.route_e_trk_1 = null;\n                this.routed_trk_1 = false;\n                this.sig_2e = false;\n                return;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_1 = \"E_1_4__|__2_ridgewood_bt\";\n                this.routed_trk_1 = true;\n                this.sig_2e = true;\n            }\n        }\n    }\n    // ---- END click_sig_2e() ----\n\n    /**\n     * click_sig_4e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_4e(next_block_1, next_block_2, next_block_3, next_block_4) {\n        if (this.sw_3) {\n            return;\n        }\n        else if (!this.sw_5) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n                return;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_2__|__2_ridgewood_suscon\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        }\n        else if (this.sw_5 && !this.sw_7 && !this.sw_9) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n                return;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_1__|__1_ridgewood_suscon\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        }\n        else if (this.sw_5 && this.sw_7) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n                return;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_3__|__1_ridgewood_bt\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        }\n        else if (this.sw_5 && !this.sw_7 && this.sw_9) {\n            if (this.sig_4e) {\n                this.route_e_trk_2 = null;\n                this.routed_trk_2 = false;\n                this.sig_4e = false;\n                return;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_2 = \"E_2_4__|__2_ridgewood_bt\";\n                this.routed_trk_2 = true;\n                this.sig_4e = true;\n            }\n        }\n    }\n    // ---- END click_sig_4e() ----\n\n    /**\n     * click_sig_6e()\n     * @summary the function that is called when clicking the signal, creates a route\n     * \n     * @description When the function is called it will determine if a route can be created, \n     * and if so what the route is and sets it based off of the switch status\n     * \n     * @param next_block_1, The next block on Track #1\n     * @param next_block_2, The next block on Track #2\n     * @param next_block_3, The next block on Track #3\n     * @param next_block_4, The next block on Track #4\n     */\n    click_sig_6e(next_block_1, next_block_2, next_block_3, next_block_4) {\n        if (this.sw_7) {\n            return;\n        }\n        else if (!this.sw_1) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n                return;\n            }\n            else {\n                if (next_block_3 === Occupied || next_block_3 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_3__|__1_ridgewood_bt\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n        else if (this.sw_1 && !this.sw_3 && !this.sw_5 && !this.sw_7 && !this.sw_9) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n                return;\n            }\n            else {\n                if (next_block_1 === Occupied || next_block_1 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_1__|__1_ridgewood_suscon\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n        else if (this.sw_1 && !this.sw_3 && !this.sw_5 && !this.sw_7 && this.sw_9) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n                return;\n            }\n            else {\n                if (next_block_4 === Occupied || next_block_4 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_4__|__2_ridgewood_bt\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n        else if (this.sw_1 && this.sw_3 && !this.sw_5) {\n            if (this.sig_6e) {\n                this.route_e_trk_3 = null;\n                this.routed_trk_3 = false;\n                this.sig_6e = false;\n                return;\n            }\n            else {\n                if (next_block_2 === Occupied || next_block_2 === Lined) {\n                    alert(\"Cannot Line Route Because Conflict With Next Block\");\n                    return;\n                }\n                this.route_e_trk_3 = \"E_3_2__|__2_ridgewood_suscon\";\n                this.routed_trk_3 = true;\n                this.sig_6e = true;\n            }\n        }\n    }\n    // ---- END click_sig_6e() ----\n\n    /**\n     * get_routes()\n     * @summary Gets all the routes from the interlocking\n     * \n     * @returns An Array holding every route variable from the interlocking\n     */\n    get_routes() {\n        let routes = [ \n            this.route_e_trk_2, this.route_e_trk_3,\n            this.route_w_trk_2, this.route_w_trk_4, this.route_w_trk_3, \n            this.route_e_trk_1, this.route_w_trk_1\n        ];\n\n        return routes;\n    }\n    // ---- END get_routes() ----\n\n    /**\n     * set_trk_1_occupied()\n     * @summary Sets track #1 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */\n    set_trk_1_occupied(n_state) {\n        if (n_state === true) {\n            this.occupied_trk_1 = n_state;\n            this.routed_trk_1 = false;\n            this.trk_1_time = new Date().getTime() / 1000;\n        }\n        else {\n            console.log(\"ERROR\");\n        }\n    }\n    // ---- END set_trk_1_occupied() ----\n\n    /**\n     * set_trk_2_occupied()\n     * @summary Sets track #2 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */\n    set_trk_2_occupied(n_state) {\n        if (n_state === true) {\n            this.occupied_trk_2 = n_state;\n            this.routed_trk_2 = false;\n            this.trk_2_time = new Date().getTime() / 1000;\n        }\n        else {\n            console.log(\"ERROR\");\n        }\n    }\n    // ---- END set_trk_2_occupied() ----\n\n    /**\n     * set_trk_3_occupied()\n     * @summary Sets track #3 as occupied\n     * \n     * @param n_state, The new state of the track\n     * This was used to test, and never removed passing the state as a paramemter, which is not needed anymore\n     */\n    set_trk_3_occupied(n_state) {\n        if (n_state === true) {\n            this.occupied_trk_3 = n_state;\n            this.routed_trk_3 = false;\n            this.trk_3_time = new Date().getTime() / 1000;\n        }\n        else {\n            console.log(\"ERROR\");\n        }\n    }\n    // ---- END set_trk_3_occupied() ----\n\n    /**\n     * can_clear()\n     * @summary Checks if a track could be cleared, meaning a train is no longer in the interlocking\n     * \n     * @description Check both track if a train has been in the interlocking for more then 4 seconds, if so it\n     * clears that track\n     */\n    can_clear() {\n        // Get the current time\n        let current_time = new Date().getTime() / 1000;\n        // Track #1\n        if (current_time - this.trk_1_time > 4 && current_time - this.trk_1_time< 100000) {\n            this.sig_2w_1 = false;\n            this.sig_2w_2 = false;\n            this.sig_2e = false;\n\n            this.route_w_trk_1 = null;\n            this.route_w_trk_4 = null;\n            this.route_e_trk_1 = null;\n            this.routed_trk_1 = false;\n\n            this.occupied_trk_1 = false;\n            this.trk_1_time = null;\n        }\n        // Track #2\n        if (current_time - this.trk_2_time > 4 && current_time - this.trk_2_time< 100000) {\n            this.sig_4w = false;\n            this.sig_4e = false;\n\n            this.route_w_trk_2 = null;\n            this.route_e_trk_2 = null;\n            this.routed_trk_2 = false;\n\n            this.occupied_trk_2 = false;\n            this.trk_2_time = null;\n        }\n        // Track #3\n        if (current_time - this.trk_3_time > 4 && current_time - this.trk_3_time< 100000) {\n            this.sig_6w = false;\n            this.sig_6e = false;\n\n            this.route_w_trk_3 = null;\n            this.route_e_trk_3 = null;\n            this.routed_trk_3 = false;\n\n            this.occupied_trk_3 = false;\n            this.trk_3_time = null;\n        }\n    }\n    // ---- END can_clear() ----\n\n    /**\n     * @summary Function to throw switch #1 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_1() {\n        if (this.sw_1 === false) {\n            this.sw_1 = true;\n        }\n        else {\n            this.sw_1 = false;\n        }\n    }\n    // ---- END throw_sw_1() ----\n\n    /**\n     * @summary Funtion to throw switch #3 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_3() {\n        if (this.sw_3 === false) {\n            this.sw_3 = true;\n        }\n        else {\n            this.sw_3 = false;\n        }\n    }\n    // ---- END throw_sw_3() ----\n\n    /**\n     * @summary Funtion to throw switch #5 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_5() {\n        if (this.sw_5 === false) {\n            this.sw_5 = true;\n        }\n        else {\n            this.sw_5 = false;\n        }\n    }\n    // ---- END throw_sw_5() ----\n\n    /**\n     * @summary Funtion to throw switch #7 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_7() {\n        if (this.sw_7 === false) {\n            this.sw_7 = true;\n        }\n        else {\n            this.sw_7 = false;\n        }\n    }\n    // ---- END throw_sw_7() ----\n\n    /**\n     * @summary Funtion to throw switch #9 in the interlocking\n     * \n     * The function sets the status of the switch, whether it is is the normal possition\n     * of reversed, (True = Reversed / False = Normal)\n     */\n    throw_sw_9() {\n        if (this.sw_9 === false) {\n            this.sw_9 = true;\n        }\n        else {\n            this.sw_9 = false;\n        }\n    }\n    // ---- END throw_sw_9() ----\n\n    /**\n     * get_interlocking_status()\n     * @summary returns the status of the interlocking that would be needed by the ReactJS Components\n     * \n     * @description All the information that is returned here is what is needed by the ReactJS Component \n     * for the interlocking that is need to draw the interlocking to the screen\n     * \n     * @returns Object with the status of the interlocking\n     */\n    get_interlocking_status() {\n        var status = {\n            sw_1: this.sw_1,\n            sw_3: this.sw_3,\n            sw_5: this.sw_5,\n            sw_7: this.sw_7,\n            sw_9: this.sw_9,\n            routed_trk_1: this.routed_trk_1,\n            routed_trk_2: this.routed_trk_2,\n            routed_trk_3: this.routed_trk_3,\n            occupied_trk_1: this.occupied_trk_1,\n            occupied_trk_2: this.occupied_trk_2,\n            occupied_trk_3: this.occupied_trk_3,\n            routes: this.get_routes()\n        };\n\n        return status;\n    }\n    // ---- END get_interlocking_status() ----\n}\n\n// This is required when using ReactJS\nexport default CTC_Ridgewood;"]},"metadata":{},"sourceType":"module"}