{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Hilburn Interlocking\n *\n * Extends the React Component Class and is the UI part of the Hilburn Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */ // Import React Component\nimport React,{Component}from'react';// Import CSS style sheet\nimport'../../../css/Main_Line/wc.css';// Import Images\n// Switch Images\nimport CX_135 from'../../../images/CX_135.png';import CX_135_Lined_Top from'../../../images/CX_135_Lined_Top.png';import CX_135_Lined_Bottom from'../../../images/CX_135_Lined_Bottom.png';import CX_135_Lined_Both from'../../../images/CX_135_Lined_Both.png';import CX_135_R from'../../../images/CX_135_R.png';import CX_135_R_Lined from'../../../images/CX_135_R_Lined.png';import CX_135_Lined_Top_Occupied_Bottom from'../../../images/CX_135_Lined_Top_Occupied_Bottom.png';import CX_135_Occupied_Top_Lined_Bottom from'../../../images/CX_135_Occupied_Top_Lined_Bottom.png';import CX_135_Occupied_Top from'../../../images/CX_135_Occupied_Top.png';import CX_135_Occupied_Bottom from'../../../images/CX_135_Occupied_Bottom.png';import CX_135_Occupied_Both from'../../../images/CX_135_Occupied_Both.png';import CX_135_R_Occupied from'../../../images/CX_135_R_Occupied.png';import CX_225 from'../../../images/CX_225.png';import CX_225_Lined_Top from'../../../images/CX_225_Lined_Top.png';import CX_225_Lined_Bottom from'../../../images/CX_225_Lined_Bottom.png';import CX_225_Lined_Both from'../../../images/CX_225_Lined_Both.png';import CX_225_R from'../../../images/CX_225_R.png';import CX_225_R_Lined from'../../../images/CX_225_R_Lined.png';import CX_225_Lined_Top_Occupied_Bottom from'../../../images/CX_225_Lined_Top_Occupied_Bottom.png';import CX_225_Occupied_Top_Lined_Bottom from'../../../images/CX_225_Occupied_Top_Lined_Bottom.png';import CX_225_Occupied_Top from'../../../images/CX_225_Occupied_Top.png';import CX_225_Occupied_Bottom from'../../../images/CX_225_Occupied_Bottom.png';import CX_225_Occupied_Both from'../../../images/CX_225_Occupied_Both.png';import CX_225_R_Occupied from'../../../images/CX_225_R_Occupied.png';import SW_U_E from'../../../images/SW_U_E.png';import SW_U_E_Lined from'../../../images/SW_U_E_Lined.png';import SW_U_E_Occupied from'../../../images/SW_U_E_Occupied.png';import SW_U_E_R from'../../../images/SW_U_E_R.png';import SW_U_E_R_Lined from'../../../images/SW_U_E_R_Lined.png';import SW_U_E_R_Occupied from'../../../images/SW_U_E_R_Occupied.png';import SW_U_W from'../../../images/SW_U_W.png';import SW_U_W_Lined from'../../../images/SW_U_W_Lined.png';import SW_U_W_Occupied from'../../../images/SW_U_W_Occupied.png';import SW_U_W_R from'../../../images/SW_U_W_R.png';import SW_U_W_R_Lined from'../../../images/SW_U_W_R_Lined.png';import SW_U_W_R_Occupied from'../../../images/SW_U_W_R_Occupied.png';// Signal Images\nimport SIG_W from'../../../images/SIG_W.png';import SIG_W_Clear from'../../../images/SIG_W_Clear.png';import SIG_W_Stop from'../../../images/SIG_W_Stop.png';import SIG_E from'../../../images/SIG_E.png';import SIG_E_Clear from'../../../images/SIG_E_Clear.png';import SIG_E_Stop from'../../../images/SIG_E_Stop.png';// Color Constants For Drawing Routes\nvar Empty='#999999';var Green='#75fa4c';var Red='#eb3323';/**\n * The React JSX Component Class for the WC Interlocking\n * \n * This class is a JSX React Component for the WC Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */var WC=/*#__PURE__*/function(_Component){_inherits(WC,_Component);function WC(){var _getPrototypeOf2;var _this;_classCallCheck(this,WC);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(WC)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={// Switch Status\nsw_1:_this.props.status.sw_1,sw_3:_this.props.status.sw_3,sw_5:_this.props.status.sw_5,sw_7:_this.props.status.sw_7,// Image File for the switch - Will change depending on route\nsw_1_src:CX_225,sw_3_src:SW_U_W,sw_5_src:CX_135,sw_7_src:SW_U_E,// Colors for tail tracks - Will change depending on route\ntail_1_w:Empty,tail_2_w:Empty,tail_yard:Empty,tail_2_center:Empty,tail_1_e:Empty,tail_2_e:Empty,tail_3_e:Empty,// Image File for the signals - Will change depending on route\nsig_2w1_src:SIG_W,sig_2w2_src:SIG_W,sig_4w_src:SIG_W,sig_2e1_src:SIG_E,sig_2e2_src:SIG_E,sig_4e_src:SIG_E,// Information For Interlocking Routes\noccupied_1:_this.props.status.occupied_trk_1,occupied_2:_this.props.status.occupied_trk_2,route_1:_this.props.status.routed_trk_1,route_2:_this.props.status.routed_trk_2,routes:_this.props.status.routes};_this.set_switch_img=function(){// Set SW #1\n// SW #1 Reversed\nif(_this.state.sw_1){_this.state.sw_1_src=CX_225_R;}// SW #1 Normal\nelse{_this.state.sw_1_src=CX_225;}// Set SW #3\n// SW #3 Reversed\nif(_this.state.sw_3){_this.state.sw_3_src=SW_U_W_R;}// SW #3 Normal\nelse{_this.state.sw_3_src=SW_U_W;}// Set SW #5\n// SW #5 Reversed\nif(_this.state.sw_5){_this.state.sw_5_src=CX_135_R;}// SW #5 Normal\nelse{_this.state.sw_5_src=CX_135;}// Set SW #7\n// SW #7 Reversed\nif(_this.state.sw_7){_this.state.sw_7_src=SW_U_E_R;}// SW #7 Normal\nelse{_this.state.sw_7_src=SW_U_E;}};return _this;}_createClass(WC,[{key:\"componentWillReceiveProps\",/**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */value:function componentWillReceiveProps(nextProps){this.setState({sw_1:nextProps.status.sw_1,sw_3:nextProps.status.sw_3,sw_5:nextProps.status.sw_5,sw_7:nextProps.status.sw_7,occupied_1:nextProps.status.occupied_trk_1,occupied_2:nextProps.status.occupied_trk_2,route_1:nextProps.status.routed_trk_1,route_2:nextProps.status.routed_trk_2,routes:nextProps.status.routes});}// ---- END componentWillReceiveProps() ----\n/**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */},{key:\"render\",value:function render(){// Clear all the drawings from the interlocking so if a train clears the route is gone\nthis.reset_drawings();// Set the switch images based off the state of each crossover\nthis.set_switch_img();// Draw all the current routes in the interlocking\nthis.set_route_drawings();// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{className:\"wc_title\"},\"WC\"),React.createElement(\"div\",{className:\"wc_milepost\"},\"MP 23.6\"),React.createElement(\"div\",{className:\"wc_1_west\",style:{background:this.state.tail_1_w}}),React.createElement(\"div\",{className:\"wc_2_west\",style:{background:this.state.tail_2_w}}),React.createElement(\"div\",{className:\"wc_yard\",style:{background:this.state.tail_yard}}),React.createElement(\"div\",{className:\"wc_SW_1\",onClick:this.props.throw_sw_1},React.createElement(\"img\",{src:this.state.sw_1_src})),React.createElement(\"div\",{className:\"wc_SW_3\",onClick:this.props.throw_sw_3},React.createElement(\"img\",{src:this.state.sw_3_src})),React.createElement(\"div\",{className:\"wc_SW_5\",onClick:this.props.throw_sw_5},React.createElement(\"img\",{src:this.state.sw_5_src})),React.createElement(\"div\",{className:\"wc_SW_7\",onClick:this.props.throw_sw_7},React.createElement(\"img\",{src:this.state.sw_7_src})),React.createElement(\"div\",{className:\"wc_2_center\",style:{background:this.state.tail_2_center}}),React.createElement(\"div\",{className:\"wc_3_east\",style:{background:this.state.tail_3_e}}),React.createElement(\"div\",{className:\"wc_1_east\",style:{background:this.state.tail_1_e}}),React.createElement(\"div\",{className:\"wc_2_east\",style:{background:this.state.tail_2_e}}),React.createElement(\"div\",{className:\"wc_sig_2e-2\",onClick:this.props.click_sig_2e_2},React.createElement(\"img\",{src:this.state.sig_2e2_src})),React.createElement(\"div\",{className:\"wc_sig_2e-1\",onClick:this.props.click_sig_2e_1},React.createElement(\"img\",{src:this.state.sig_2e1_src})),React.createElement(\"div\",{className:\"wc_sig_4e\",onClick:this.props.click_sig_4e},React.createElement(\"img\",{src:this.state.sig_4e_src})),React.createElement(\"div\",{className:\"wc_sig_2w-2\",onClick:this.props.click_sig_2w_2},React.createElement(\"img\",{src:this.state.sig_2w2_src})),React.createElement(\"div\",{className:\"wc_sig_2w-1\",onClick:this.props.click_sig_2w_1},React.createElement(\"img\",{src:this.state.sig_2w1_src})),React.createElement(\"div\",{className:\"wc_sig_4w\",onClick:this.props.click_sig_4w},React.createElement(\"img\",{src:this.state.sig_4w_src})));}// ---- END render() ----\n/**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */},{key:\"set_route_drawings\",value:function set_route_drawings(){var color_1=Empty;var color_2=Empty;// Setting the color of the tracks depending on if the interlocking in occupied or not\nif(this.state.route_1){color_1=Green;}if(this.state.route_2){color_2=Green;}if(this.state.occupied_1){color_1=Red;}if(this.state.occupied_2){color_2=Red;}// Loop Through All The Routes\nfor(var i=0;i<this.state.routes.length;i++){if(this.state.routes[i]===\"W_1_1__|__1_sf_wc\"||this.state.routes[i]===\"E_1_1__|__1_wc_ridgewood\"){// Tail Tracks\nthis.state.tail_1_e=color_1;this.state.tail_1_w=color_1;if(this.state.occupied_1){// Switches\nthis.state.sw_7_src=SW_U_E_Occupied;this.state.sw_3_src=SW_U_W_Occupied;// Crossovers that could change based off of Track #2 Status\nif(this.state.routes.includes(\"W_2_2__|__2_sf_wc\")||this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")){// Track #2 Is Occupied\nif(this.state.occupied_2){this.state.sw_5_src=CX_135_Occupied_Both;this.state.sw_1_src=CX_225_Occupied_Bottom;}// Track #2 Routed\nelse if(this.state.route_2){this.state.sw_5_src=CX_135_Occupied_Top_Lined_Bottom;this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}}// Nothing Track #2\nelse{this.state.sw_5_src=CX_135_Occupied_Top;this.state.sw_1_src=CX_225_Occupied_Top;}// Signals\nthis.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;}else{// Switches\nthis.state.sw_7_src=SW_U_E_Lined;this.state.sw_3_src=SW_U_W_Lined;// Crossovers that could change based off of Track #2 Status\nif(this.state.routes.includes(\"W_2_2__|__2_sf_wc\")||this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")){// Track #2 Occupied\nif(this.state.occupied_2){this.state.sw_5_src=CX_135_Lined_Top_Occupied_Bottom;this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}// Track #2 Routed\nelse if(this.state.route_2){this.state.sw_5_src=CX_135_Lined_Both;this.state.sw_1_src=CX_225_Lined_Both;}}// Nothing Track #2\nelse{this.state.sw_5_src=CX_135_Lined_Top;this.state.sw_1_src=CX_225_Lined_Top;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_1__|__1_sf_wc\"){this.state.sig_2w1_src=SIG_W_Clear;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Clear;this.state.sig_2e2_src=SIG_E_Stop;}}}else if(this.state.routes[i]===\"W_2_2__|__2_sf_wc\"||this.state.routes[i]===\"E_2_2__|__2_wc_ridgewood\"){// Set Tail Track Colors\nthis.state.tail_2_e=color_2;this.state.tail_2_center=color_2;this.state.tail_2_w=color_2;// If The Route Is Occupied\nif(this.state.occupied_2){// Switches\n// Crossovers that could change based of the state of Track #1\nif(this.state.routes.includes(\"W_1_1__|__1_sf_wc\")||this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\")||this.state.routes.includes(\"W_3_1__|__1_sf_wc\")||this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")){if(this.state.occupied_1){this.state.sw_5_src=CX_135_Occupied_Both;this.state.sw_1_src=CX_225_Occupied_Both;}else if(this.state.route_1){this.state.sw_5_src=CX_135_Lined_Top_Occupied_Bottom;this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}}else if(this.state.routes.includes(\"W_3_3__|__0_yard_wc\")||this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\")||this.state.routes.includes(\"W_1_3__|__0_yard_wc\")||this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")){if(this.state.occupied_1){this.state.sw_5_src=CX_135_Occupied_Both;this.state.sw_1_src=CX_225_Occupied_Bottom;}else if(this.state.route_1){this.state.sw_5_src=CX_135_Lined_Top_Occupied_Bottom;this.state.sw_1_src=CX_225_Occupied_Bottom;}}// Nothing Track #1\nelse{this.state.sw_5_src=CX_135_Occupied_Bottom;this.state.sw_1_src=CX_225_Occupied_Bottom;}// Signals\nthis.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\n// Crossovers that could change based of the state of Track #1\nif(this.state.routes.includes(\"W_1_1__|__1_sf_wc\")||this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\")||this.state.routes.includes(\"W_3_1__|__1_sf_wc\")||this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")){if(this.state.occupied_1){this.state.sw_5_src=CX_135_Occupied_Top_Lined_Bottom;this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}else if(this.state.route_1){this.state.sw_5_src=CX_135_Lined_Both;this.state.sw_1_src=CX_225_Lined_Both;}}else if(this.state.routes.includes(\"W_3_3__|__0_yard_wc\")||this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\")||this.state.routes.includes(\"W_1_3__|__0_yard_wc\")||this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")){if(this.state.occupied_1){this.state.sw_5_src=CX_135_Occupied_Top_Lined_Bottom;this.state.sw_1_src=CX_225_Lined_Bottom;}else if(this.state.route_1){this.state.sw_5_src=CX_135_Lined_Both;this.state.sw_1_src=CX_225_Lined_Bottom;}}// Nothing Track #1\nelse{this.state.sw_5_src=CX_135_Lined_Bottom;this.state.sw_1_src=CX_225_Lined_Bottom;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_2_2__|__2_sf_wc\"){this.state.sig_4w_src=SIG_W_Clear;this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_3_1__|__1_sf_wc\"||this.state.routes[i]===\"E_1_3__|__3_wc_ridgewood\"){// Set Tail Track Colors\nthis.state.tail_3_e=color_1;this.state.tail_1_w=color_1;// If The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_7_src=SW_U_E_R_Occupied;this.state.sw_5_src=CX_135_Occupied_Top;this.state.sw_3_src=SW_U_W_Occupied;this.state.sw_1_src=CX_225_Occupied_Top;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_7_src=SW_U_E_R_Lined;this.state.sw_5_src=CX_135_Lined_Top;this.state.sw_3_src=SW_U_W_Lined;this.state.sw_1_src=CX_225_Lined_Top;// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_3_1__|__1_sf_wc\"){this.state.sig_2w2_src=SIG_W_Clear;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Clear;this.state.sig_2e2_src=SIG_E_Stop;}}}else if(this.state.routes[i]===\"W_3_3__|__0_yard_wc\"||this.state.routes[i]===\"E_3_3__|__3_wc_ridgewood\"){// Set Tail Track Colors\nthis.state.tail_3_e=color_1;this.state.tail_yard=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_7_src=SW_U_E_R_Occupied;this.state.sw_5_src=CX_135_Occupied_Top;this.state.sw_3_src=SW_U_W_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_7_src=SW_U_E_R_Lined;this.state.sw_5_src=CX_135_Lined_Top;this.state.sw_3_src=SW_U_W_R_Lined;// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_3_3__|__0_yard_wc\"){this.state.sig_2w2_src=SIG_W_Clear;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_3_2__|__2_sf_wc\"){// Set Tail Track Colors\nthis.state.tail_3_e=color_1;this.state.tail_2_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_7_src=SW_U_E_R_Occupied;this.state.sw_5_src=CX_135_Occupied_Top;this.state.sw_3_src=SW_U_W_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_7_src=SW_U_E_R_Lined;this.state.sw_5_src=CX_135_Lined_Top;this.state.sw_3_src=SW_U_W_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Clear;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_2_3__|__3_wc_ridgewood\"){// Set Tail Track Colors\nthis.state.tail_3_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_7_src=SW_U_E_R_Occupied;this.state.sw_5_src=CX_135_Occupied_Top;this.state.sw_3_src=SW_U_W_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_7_src=SW_U_E_R_Lined;this.state.sw_5_src=CX_135_Lined_Top;this.state.sw_3_src=SW_U_W_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Clear;}}else if(this.state.routes[i]===\"W_1_2__|__2_sf_wc\"){// Set Tail Track Colors\nthis.state.tail_1_e=color_1;this.state.tail_2_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_7_src=SW_U_E_Occupied;this.state.sw_5_src=CX_135_Occupied_Top;this.state.sw_3_src=SW_U_W_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_7_src=SW_U_E_Lined;this.state.sw_5_src=CX_135_Lined_Top;this.state.sw_3_src=SW_U_W_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Clear;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_2_1__|__1_wc_ridgewood\"){// Set Tail Track Colors\nthis.state.tail_1_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_7_src=SW_U_E_Occupied;this.state.sw_5_src=CX_135_Occupied_Top;this.state.sw_3_src=SW_U_W_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_7_src=SW_U_E_Lined;this.state.sw_5_src=CX_135_Lined_Top;this.state.sw_3_src=SW_U_W_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Clear;}}else if(this.state.routes[i]===\"W_2_1__|__1_sf_wc\"){// Set Tail Track Colors\nthis.state.tail_2_e=color_2;this.state.tail_1_w=color_2;// If The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_5_src=CX_135_R_Occupied;this.state.sw_3_src=SW_U_W_Occupied;this.state.sw_1_src=CX_225_Occupied_Top;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// If The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=CX_135_R_Lined;this.state.sw_3_src=SW_U_W_Lined;this.state.sw_1_src=CX_225_Lined_Top;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Clear;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_1_2__|__2_wc_ridgewood\"){// Set Tail Track Colors\nthis.state.tail_2_e=color_1;this.state.tail_1_w=color_1;// If The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_5_src=CX_135_R_Occupied;this.state.sw_3_src=SW_U_W_Occupied;this.state.sw_1_src=CX_225_Occupied_Top;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// If The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=CX_135_R_Lined;this.state.sw_3_src=SW_U_W_Lined;this.state.sw_1_src=CX_225_Lined_Top;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Clear;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"W_2_3__|__0_yard_wc\"){// Set Tail Track Colors\nthis.state.tail_2_e=color_2;this.state.tail_yard=color_2;// If The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_5_src=CX_135_R_Occupied;this.state.sw_3_src=SW_U_W_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=CX_135_R_Lined;this.state.sw_3_src=SW_U_W_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Clear;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_3_2__|__2_wc_ridgewood\"){// Set Tail Track Colors\nthis.state.tail_2_e=color_1;this.state.tail_yard=color_1;// If The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_5_src=CX_135_R_Occupied;this.state.sw_3_src=SW_U_W_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=CX_135_R_Lined;this.state.sw_3_src=SW_U_W_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e1_src=SIG_E_Stop;this.state.sig_2e2_src=SIG_E_Clear;this.state.sig_4e_src=SIG_E_Stop;}}}}// ---- END set_route_drawings() ----\n/**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */},{key:\"reset_drawings\",// ---- END set_switch_image() ----\n/**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */value:function reset_drawings(){this.state.tail_1_w=Empty;this.state.tail_2_w=Empty;this.state.tail_yard=Empty;this.state.tail_2_center=Empty;this.state.tail_1_e=Empty;this.state.tail_2_e=Empty;this.state.tail_3_e=Empty;this.state.sig_2w1_src=SIG_W;this.state.sig_2w2_src=SIG_W;this.state.sig_4w_src=SIG_W;this.state.sig_2e1_src=SIG_E;this.state.sig_2e2_src=SIG_E;this.state.sig_4e_src=SIG_E;}//---- END reset_drawings() ----\n}]);return WC;}(Component);// Export the interlocking to be drawn on the screen\nexport default WC;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Main_Line/WC.jsx"],"names":["React","Component","CX_135","CX_135_Lined_Top","CX_135_Lined_Bottom","CX_135_Lined_Both","CX_135_R","CX_135_R_Lined","CX_135_Lined_Top_Occupied_Bottom","CX_135_Occupied_Top_Lined_Bottom","CX_135_Occupied_Top","CX_135_Occupied_Bottom","CX_135_Occupied_Both","CX_135_R_Occupied","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SW_U_E","SW_U_E_Lined","SW_U_E_Occupied","SW_U_E_R","SW_U_E_R_Lined","SW_U_E_R_Occupied","SW_U_W","SW_U_W_Lined","SW_U_W_Occupied","SW_U_W_R","SW_U_W_R_Lined","SW_U_W_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","WC","state","sw_1","props","status","sw_3","sw_5","sw_7","sw_1_src","sw_3_src","sw_5_src","sw_7_src","tail_1_w","tail_2_w","tail_yard","tail_2_center","tail_1_e","tail_2_e","tail_3_e","sig_2w1_src","sig_2w2_src","sig_4w_src","sig_2e1_src","sig_2e2_src","sig_4e_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_trk_1","route_2","routed_trk_2","routes","set_switch_img","nextProps","setState","reset_drawings","set_route_drawings","background","throw_sw_1","throw_sw_3","throw_sw_5","throw_sw_7","click_sig_2e_2","click_sig_2e_1","click_sig_4e","click_sig_2w_2","click_sig_2w_1","click_sig_4w","color_1","color_2","i","length","includes"],"mappings":"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","sourcesContent":["/**\n * @file Hilburn.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for Hilburn Interlocking\n *\n * Extends the React Component Class and is the UI part of the Hilburn Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Main_Line/wc.css';\n\n// Import Images\n// Switch Images\nimport CX_135 from '../../../images/CX_135.png';\nimport CX_135_Lined_Top from '../../../images/CX_135_Lined_Top.png';\nimport CX_135_Lined_Bottom from '../../../images/CX_135_Lined_Bottom.png';\nimport CX_135_Lined_Both from '../../../images/CX_135_Lined_Both.png';\nimport CX_135_R from '../../../images/CX_135_R.png';\nimport CX_135_R_Lined from '../../../images/CX_135_R_Lined.png';\nimport CX_135_Lined_Top_Occupied_Bottom from '../../../images/CX_135_Lined_Top_Occupied_Bottom.png';\nimport CX_135_Occupied_Top_Lined_Bottom from '../../../images/CX_135_Occupied_Top_Lined_Bottom.png';\nimport CX_135_Occupied_Top from '../../../images/CX_135_Occupied_Top.png';\nimport CX_135_Occupied_Bottom from '../../../images/CX_135_Occupied_Bottom.png';\nimport CX_135_Occupied_Both from '../../../images/CX_135_Occupied_Both.png';\nimport CX_135_R_Occupied from '../../../images/CX_135_R_Occupied.png';\n\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\nimport SW_U_E from '../../../images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../images/SW_U_E_R_Occupied.png';\n\nimport SW_U_W from '../../../images/SW_U_W.png';\nimport SW_U_W_Lined from '../../../images/SW_U_W_Lined.png';\nimport SW_U_W_Occupied from '../../../images/SW_U_W_Occupied.png';\nimport SW_U_W_R from '../../../images/SW_U_W_R.png';\nimport SW_U_W_R_Lined from '../../../images/SW_U_W_R_Lined.png';\nimport SW_U_W_R_Occupied from '../../../images/SW_U_W_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n\n/**\n * The React JSX Component Class for the WC Interlocking\n * \n * This class is a JSX React Component for the WC Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass WC extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * This object holds all the information for the interlocking that is required to display the routes \n     * correctly\n     * \n     * Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        sw_5: this.props.status.sw_5,\n        sw_7: this.props.status.sw_7,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_225,\n        sw_3_src: SW_U_W,\n        sw_5_src: CX_135,\n        sw_7_src: SW_U_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_yard: Empty,\n        tail_2_center: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        tail_3_e: Empty,\n        // Image File for the signals - Will change depending on route\n        sig_2w1_src: SIG_W,\n        sig_2w2_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e1_src: SIG_E,\n        sig_2e2_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_trk_1,\n        route_2: this.props.status.routed_trk_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            sw_5: nextProps.status.sw_5,\n            sw_7: nextProps.status.sw_7,\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_trk_1,\n            route_2: nextProps.status.routed_trk_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_img();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"wc_title\">WC</div>\n                <div className=\"wc_milepost\">MP 23.6</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"wc_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"wc_2_west\" style={{background: this.state.tail_2_w}}></div>\n                <div className=\"wc_yard\" style={{background: this.state.tail_yard}}></div>\n                {/* Switches */}\n                <div className=\"wc_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"wc_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"wc_SW_5\" onClick={this.props.throw_sw_5}><img src={this.state.sw_5_src}/></div>\n                <div className=\"wc_SW_7\" onClick={this.props.throw_sw_7}><img src={this.state.sw_7_src}/></div>\n                {/* Center Tail Tracks */}\n                <div className=\"wc_2_center\" style={{background: this.state.tail_2_center}}></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"wc_3_east\" style={{background: this.state.tail_3_e}}></div>\n                <div className=\"wc_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"wc_2_east\" style={{background: this.state.tail_2_e}}></div>\n                {/* Signals */}\n                <div className=\"wc_sig_2e-2\" onClick={this.props.click_sig_2e_2}><img src={this.state.sig_2e2_src}/></div>\n                <div className=\"wc_sig_2e-1\" onClick={this.props.click_sig_2e_1}><img src={this.state.sig_2e1_src}/></div>\n                <div className=\"wc_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n                <div className=\"wc_sig_2w-2\" onClick={this.props.click_sig_2w_2}><img src={this.state.sig_2w2_src}/></div>\n                <div className=\"wc_sig_2w-1\" onClick={this.props.click_sig_2w_1}><img src={this.state.sig_2w1_src}/></div>\n                <div className=\"wc_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Setting the color of the tracks depending on if the interlocking in occupied or not\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop Through All The Routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            if (this.state.routes[i] === \"W_1_1__|__1_sf_wc\" || this.state.routes[i] === \"E_1_1__|__1_wc_ridgewood\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n\n                    // Crossovers that could change based off of Track #2 Status\n                    if (this.state.routes.includes(\"W_2_2__|__2_sf_wc\") || this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")) {\n                        // Track #2 Is Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_5_src = CX_135_Occupied_Both;\n                            this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        }\n                        // Track #2 Routed\n                        else if (this.state.route_2) {\n                            this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_5_src = CX_135_Occupied_Top;\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                }\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_W_Lined;\n\n                    // Crossovers that could change based off of Track #2 Status\n                    if (this.state.routes.includes(\"W_2_2__|__2_sf_wc\") || this.state.routes.includes(\"E_2_2__|__2_wc_ridgewood\")) {\n                        // Track #2 Occupied\n                        if (this.state.occupied_2) {\n                            this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                        // Track #2 Routed\n                        else if (this.state.route_2) {\n                            this.state.sw_5_src = CX_135_Lined_Both;\n                            this.state.sw_1_src = CX_225_Lined_Both;\n                        }\n                    }\n                    // Nothing Track #2\n                    else {\n                        this.state.sw_5_src = CX_135_Lined_Top;\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_sf_wc\") {\n                        this.state.sig_2w1_src = SIG_W_Clear;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Clear;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_2__|__2_sf_wc\" || this.state.routes[i] === \"E_2_2__|__2_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_center = color_2;\n                this.state.tail_2_w = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    // Crossovers that could change based of the state of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_3_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Both;\n                            this.state.sw_1_src = CX_225_Occupied_Both;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_3_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_1_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Both;\n                            this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Top_Occupied_Bottom;\n                            this.state.sw_1_src = CX_225_Occupied_Bottom;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_5_src = CX_135_Occupied_Bottom;\n                        this.state.sw_1_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Crossovers that could change based of the state of Track #1\n                    if (this.state.routes.includes(\"W_1_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_1__|__1_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_3_1__|__1_sf_wc\") || this.state.routes.includes(\"E_1_3__|__3_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Both;\n                            this.state.sw_1_src = CX_225_Lined_Both;\n                        }\n                    }\n                    else if (this.state.routes.includes(\"W_3_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_3__|__3_wc_ridgewood\") ||\n                        this.state.routes.includes(\"W_1_3__|__0_yard_wc\") || this.state.routes.includes(\"E_3_1__|__1_wc_ridgewood\")) {\n                        if (this.state.occupied_1) {\n                            this.state.sw_5_src = CX_135_Occupied_Top_Lined_Bottom;\n                            this.state.sw_1_src = CX_225_Lined_Bottom;\n                        }\n                        else if (this.state.route_1) {\n                            this.state.sw_5_src = CX_135_Lined_Both;\n                            this.state.sw_1_src = CX_225_Lined_Bottom;\n                        }\n                    }\n                    // Nothing Track #1\n                    else {\n                        this.state.sw_5_src = CX_135_Lined_Bottom;\n                        this.state.sw_1_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_sf_wc\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_1__|__1_sf_wc\" || this.state.routes[i] === \"E_1_3__|__3_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_Lined_Top;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_1__|__1_sf_wc\") {\n                        this.state.sig_2w2_src = SIG_W_Clear;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Clear;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_3__|__0_yard_wc\" || this.state.routes[i] === \"E_3_3__|__3_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_1;\n                this.state.tail_yard = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_R_Lined;\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_3__|__0_yard_wc\") {\n                        this.state.sig_2w2_src = SIG_W_Clear;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2e1_src = SIG_E_Stop;\n                        this.state.sig_2e2_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_2__|__2_sf_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Clear;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_3__|__3_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_3_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_R_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_sf_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__1_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Occupied;\n                    this.state.sw_5_src = CX_135_Occupied_Top;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_7_src = SW_U_E_Lined;\n                    this.state.sw_5_src = CX_135_Lined_Top;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_1__|__1_sf_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_1_w = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // If The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_Lined_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_1_2__|__2_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_Occupied;\n                    this.state.sw_1_src = CX_225_Occupied_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // If The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_Lined;\n                    this.state.sw_1_src = CX_225_Lined_Top;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Clear;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"W_2_3__|__0_yard_wc\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_2;\n                this.state.tail_yard = color_2;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Clear;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_3_2__|__2_wc_ridgewood\") {\n                // Set Tail Track Colors\n                this.state.tail_2_e = color_1;\n                this.state.tail_yard = color_1;\n\n                // If The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Occupied;\n                    this.state.sw_3_src = SW_U_W_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = CX_135_R_Lined;\n                    this.state.sw_3_src = SW_U_W_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e1_src = SIG_E_Stop;\n                    this.state.sig_2e2_src = SIG_E_Clear;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_img()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_img = () => {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_225_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_225;\n        }\n        \n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = SW_U_W_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = SW_U_W;\n        }\n\n        // Set SW #5\n        // SW #5 Reversed\n        if (this.state.sw_5) {\n            this.state.sw_5_src = CX_135_R;\n        }\n        // SW #5 Normal\n        else {\n            this.state.sw_5_src = CX_135;\n        }\n        \n        // Set SW #7\n        // SW #7 Reversed\n        if (this.state.sw_7) {\n            this.state.sw_7_src = SW_U_E_R;\n        }\n        // SW #7 Normal\n        else {\n            this.state.sw_7_src = SW_U_E;\n        }\n    }\n    // ---- END set_switch_image() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_yard = Empty;\n        this.state.tail_2_center = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n        this.state.tail_3_e = Empty;\n\n        this.state.sig_2w1_src = SIG_W;\n        this.state.sig_2w2_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e1_src = SIG_E;\n        this.state.sig_2e2_src = SIG_E;\n        this.state.sig_4e_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default WC;"]},"metadata":{},"sourceType":"module"}