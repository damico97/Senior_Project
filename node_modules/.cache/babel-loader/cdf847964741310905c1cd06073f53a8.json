{"ast":null,"code":"import _classCallCheck from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joey/Documents/Codes/CMPS_450/Senior_Project/node_modules/@babel/runtime/helpers/esm/inherits\";/**\n * @file HX.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for HX Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the HX Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */ // Import React Component\nimport React,{Component}from'react';// Import CSS style sheet\nimport'../../../css/Bergen_County_Line/hx.css';// Import Images \n// Switch Images\nimport CX_225 from'../../../images/CX_225.png';import CX_225_Lined_Top from'../../../images/CX_225_Lined_Top.png';import CX_225_Lined_Bottom from'../../../images/CX_225_Lined_Bottom.png';import CX_225_Lined_Both from'../../../images/CX_225_Lined_Both.png';import CX_225_R from'../../../images/CX_225_R.png';import CX_225_R_Lined from'../../../images/CX_225_R_Lined.png';import CX_225_Lined_Top_Occupied_Bottom from'../../../images/CX_225_Lined_Top_Occupied_Bottom.png';import CX_225_Occupied_Top_Lined_Bottom from'../../../images/CX_225_Occupied_Top_Lined_Bottom.png';import CX_225_Occupied_Top from'../../../images/CX_225_Occupied_Top.png';import CX_225_Occupied_Bottom from'../../../images/CX_225_Occupied_Bottom.png';import CX_225_Occupied_Both from'../../../images/CX_225_Occupied_Both.png';import CX_225_R_Occupied from'../../../images/CX_225_R_Occupied.png';import SW_U_E from'../../../images/SW_U_E.png';import SW_U_E_Lined from'../../../images/SW_U_E_Lined.png';import SW_U_E_Occupied from'../../../images/SW_U_E_Occupied.png';import SW_U_E_R from'../../../images/SW_U_E_R.png';import SW_U_E_R_Lined from'../../../images/SW_U_E_R_Lined.png';import SW_U_E_R_Occupied from'../../../images/SW_U_E_R_Occupied.png';// Signal Images\nimport SIG_W from'../../../images/SIG_W.png';import SIG_W_Clear from'../../../images/SIG_W_Clear.png';import SIG_W_Stop from'../../../images/SIG_W_Stop.png';import SIG_E from'../../../images/SIG_E.png';import SIG_E_Clear from'../../../images/SIG_E_Clear.png';import SIG_E_Stop from'../../../images/SIG_E_Stop.png';// Color Constants For Drawing Routes\nvar Empty='#999999';var Green='#75fa4c';var Red='#eb3323';/**\n * The React JSX Component Class for the HX Interlocking\n * This class is a JSX React Component for the HX Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */var HX=/*#__PURE__*/function(_Component){_inherits(HX,_Component);function HX(){var _getPrototypeOf2;var _this;_classCallCheck(this,HX);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(HX)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={// Switch Status\nsw_1:_this.props.status.sw_1,sw_3:_this.props.status.sw_3,sw_5:_this.props.status.sw_5,// Image File for the switch - Will change depending on route\nsw_1_src:CX_225,sw_3_src:SW_U_E,sw_5_src:SW_U_E,// Colors for tail tracks - Will change depending on route\ntail_1_w:Empty,tail_2_w:Empty,tail_1_e:Empty,tail_2_e:Empty,tail_3_e:Empty,tail_4_e:Empty,// Image File for the signals - Will change depending on route\nsig_2w1_src:SIG_W,sig_2w2_src:SIG_W,sig_2w3_src:SIG_W,sig_4w_src:SIG_W,sig_2e_src:SIG_E,sig_4e_src:SIG_E,// Information For Interlocking Routes\noccupied_1:_this.props.status.occupied_trk_1,occupied_2:_this.props.status.occupied_trk_2,route_1:_this.props.status.routed_1,route_2:_this.props.status.routed_2,routes:_this.props.status.routes};return _this;}_createClass(HX,[{key:\"componentWillReceiveProps\",/**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * @description The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */value:function componentWillReceiveProps(nextProps){this.setState({sw_1:nextProps.status.sw_1,sw_3:nextProps.status.sw_3,sw_5:nextProps.status.sw_5,occupied_1:nextProps.status.occupied_trk_1,occupied_2:nextProps.status.occupied_trk_2,route_1:nextProps.status.routed_1,route_2:nextProps.status.routed_2,routes:nextProps.status.routes});}// ---- END componentWillReceiveProps() ----\n/**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */},{key:\"render\",value:function render(){// Clear all the drawings from the interlocking so if a train clears the route is gone\nthis.reset_drawings();// Set the switch images based off the state of each crossover\nthis.set_switch_images();// Draw all the current routes in the interlocking\nthis.set_route_drawings();// Returns the HTML to draw the interlocking and it's current state to the screen\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{className:\"hx_title\"},\"HX\"),React.createElement(\"div\",{className:\"hx_milepost\"},\"MP 5.4\"),React.createElement(\"div\",{className:\"hx_1_west\",style:{background:this.state.tail_1_w}}),React.createElement(\"div\",{className:\"hx_2_west\",style:{background:this.state.tail_2_w}}),React.createElement(\"div\",{className:\"hx_SW_1\",onClick:this.props.throw_sw_1},React.createElement(\"img\",{src:this.state.sw_1_src})),React.createElement(\"div\",{className:\"hx_SW_3\",onClick:this.props.throw_sw_3},React.createElement(\"img\",{src:this.state.sw_3_src})),React.createElement(\"div\",{className:\"hx_SW_5\",onClick:this.props.throw_sw_5},React.createElement(\"img\",{src:this.state.sw_5_src})),React.createElement(\"div\",{className:\"hx_1_east\",style:{background:this.state.tail_1_e}}),React.createElement(\"div\",{className:\"hx_2_east\",style:{background:this.state.tail_2_e}}),React.createElement(\"div\",{className:\"hx_croxton_1\",style:{background:this.state.tail_4_e}}),React.createElement(\"div\",{className:\"hx_croxton_2\",style:{background:this.state.tail_3_e}}),React.createElement(\"div\",{className:\"hx_sig_2w-3\",onClick:this.props.click_sig_2w3},React.createElement(\"img\",{src:this.state.sig_2w3_src})),React.createElement(\"div\",{className:\"hx_sig_2w-2\",onClick:this.props.click_sig_2w2},React.createElement(\"img\",{src:this.state.sig_2w2_src})),React.createElement(\"div\",{className:\"hx_sig_2w-1\",onClick:this.props.click_sig_2w1},React.createElement(\"img\",{src:this.state.sig_2w1_src})),React.createElement(\"div\",{className:\"hx_sig_4w\",onClick:this.props.click_sig_4w},React.createElement(\"img\",{src:this.state.sig_4w_src})),React.createElement(\"div\",{className:\"hx_sig_2e\",onClick:this.props.click_sig_2e},React.createElement(\"img\",{src:this.state.sig_2e_src})),React.createElement(\"div\",{className:\"hx_sig_4e\",onClick:this.props.click_sig_4e},React.createElement(\"img\",{src:this.state.sig_4e_src})));}// ---- END render() ----\n/**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */},{key:\"set_route_drawings\",value:function set_route_drawings(){var color_1=Empty;var color_2=Empty;// Set Track colors depending on if they are routed or occupied\nif(this.state.route_1){color_1=Green;}if(this.state.route_2){color_2=Green;}if(this.state.occupied_1){color_1=Red;}if(this.state.occupied_2){color_2=Red;}// Loop Through All The Routes\nfor(var i=0;i<this.state.routes.length;i++){// West and East normal on Track 1\nif(this.state.routes[i]===\"W_1_1__|__1_pascack_hx\"||this.state.routes[i]===\"E_1_1__|__3_hx_laurel\"){// Tail Tracks\nthis.state.tail_1_e=color_1;this.state.tail_1_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_3_src=SW_U_E_Occupied;// Crossovers that can change based on other tracks status\n// Trk2 Lined\nif(this.state.route_2){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}// Trk2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Occupied_Both;}// Nothing Trk2\nelse{this.state.sw_1_src=CX_225_Occupied_Top;}// Signals\nthis.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_3_src=SW_U_E_Lined;// Crossovers that can change based on other tracks status\n// Trk2 Lined\nif(this.state.route_2){this.state.sw_1_src=CX_225_Lined_Both;}// Trk2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}// Nothing Trk2\nelse{this.state.sw_1_src=CX_225_Lined_Top;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_1_1__|__1_pascack_hx\"){this.state.sig_2w1_src=SIG_W_Clear;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;}}}// West and East normal on Track 2\nelse if(this.state.routes[i]===\"W_2_2__|__2_pascack_hx\"||this.state.routes[i]===\"E_2_2__|__1_hx_laurel\"){// Tail Tracks\nthis.state.tail_2_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\n// Crossovers that can change base on track 1\n// Trk1 Lined\nif(this.state.route_1){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}// Trk1 Occupied\nelse if(this.state.occupied_1){this.state.sw_1_src=CX_225_Occupied_Both;}// Nothing Trk1\nelse{this.state.sw_1_src=CX_225_Occupied_Bottom;}// Signals\nthis.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\n// Crossovers that can change base on track 1\n// Trk1 Lined\nif(this.state.route_1){this.state.sw_1_src=CX_225_Lined_Both;}// Trk1 Occupied\nelse if(this.state.occupied_1){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}// Nothing Trk1\nelse{this.state.sw_1_src=CX_225_Lined_Bottom;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_2_2__|__2_pascack_hx\"){this.state.sig_4w_src=SIG_W_Clear;this.state.sig_4e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_4w_src=SIG_W_Stop;this.state.sig_4e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_1_2__|__2_pascack_hx\"){// Tail Tracks\nthis.state.tail_1_e=color_1;this.state.tail_2_w=color_1;// The Route In Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_3_src=SW_U_E_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_3_src=SW_U_E_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w1_src=SIG_W_Clear;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_2_1__|__3_hx_laurel\"){// Tail Tracks\nthis.state.tail_1_e=color_2;this.state.tail_2_w=color_2;// The Route In Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_3_src=SW_U_E_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_3_src=SW_U_E_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Clear;}}else if(this.state.routes[i]===\"W_3_2__|__2_pascack_hx\"){// Tail Tracks\nthis.state.tail_3_e=color_1;this.state.tail_2_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_5_src=SW_U_E_Occupied;this.state.sw_3_src=SW_U_E_R_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=SW_U_E_Lined;this.state.sw_3_src=SW_U_E_R_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Clear;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_2_3__|__3_hx_croxton\"){// Tail Tracks\nthis.state.tail_3_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_5_src=SW_U_E_Occupied;this.state.sw_3_src=SW_U_E_R_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=SW_U_E_Lined;this.state.sw_3_src=SW_U_E_R_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Clear;}}else if(this.state.routes[i]===\"W_4_2__|__2_pascack_hx\"){// Tail Tracks\nthis.state.tail_4_e=color_1;this.state.tail_2_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_5_src=SW_U_E_R_Occupied;this.state.sw_3_src=SW_U_E_R_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=SW_U_E_R_Lined;this.state.sw_3_src=SW_U_E_R_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Clear;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}}else if(this.state.routes[i]===\"E_2_4__|__4_hx_croxton\"){// Tail Tracks\nthis.state.tail_4_e=color_2;this.state.tail_2_w=color_2;// The Route Is Occupied\nif(this.state.occupied_2){// Switches\nthis.state.sw_5_src=SW_U_E_R_Occupied;this.state.sw_3_src=SW_U_E_R_Occupied;this.state.sw_1_src=CX_225_R_Occupied;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=SW_U_E_R_Lined;this.state.sw_3_src=SW_U_E_R_Lined;this.state.sw_1_src=CX_225_R_Lined;// Signals\nthis.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_4w_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;this.state.sig_4e_src=SIG_E_Clear;}}else if(this.state.routes[i]===\"W_3_1__|__1_pascack_hx\"||this.state.routes[i]===\"E_1_3__|__3_hx_croxton\"){// Tail Tracks\nthis.state.tail_3_e=color_1;this.state.tail_1_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_5_src=SW_U_E_Occupied;this.state.sw_3_src=SW_U_E_R_Occupied;// Crossovers that can change based on track 2 state\n// Trk2 Lined\nif(this.state.route_2){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}// Trk2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Occupied_Both;}// Nothing Trk2\nelse{this.state.sw_1_src=CX_225_Occupied_Top;}// Signals\nthis.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=SW_U_E_Lined;this.state.sw_3_src=SW_U_E_R_Lined;// Crossovers that can change based on track 2 state\n// Trk2 Lined\nif(this.state.route_2){this.state.sw_1_src=CX_225_Lined_Both;}// Trk2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}// Nothing Trk2\nelse{this.state.sw_1_src=CX_225_Lined_Top;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_3_1__|__1_pascack_hx\"){this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Clear;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;}}}else if(this.state.routes[i]===\"W_4_1__|__1_pascack_hx\"||this.state.routes[i]===\"E_1_4__|__4_hx_croxton\"){// Tail Tracks\nthis.state.tail_4_e=color_1;this.state.tail_1_w=color_1;// The Route Is Occupied\nif(this.state.occupied_1){// Switches\nthis.state.sw_5_src=SW_U_E_R_Occupied;this.state.sw_3_src=SW_U_E_R_Occupied;// Crossovers that can change based on track 2 state\n// Trk2 Lined\nif(this.state.route_2){this.state.sw_1_src=CX_225_Occupied_Top_Lined_Bottom;}// Trk2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Occupied_Both;}// Nothing Trk2\nelse{this.state.sw_1_src=CX_225_Occupied_Top;}// Signals\nthis.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Stop;}// The Route Is NOT Occupied\nelse{// Switches\nthis.state.sw_5_src=SW_U_E_R_Lined;this.state.sw_3_src=SW_U_E_R_Lined;// Crossovers that can change based on track 2 state\n// Trk2 Lined\nif(this.state.route_2){this.state.sw_1_src=CX_225_Lined_Both;}// Trk2 Occupied\nelse if(this.state.occupied_2){this.state.sw_1_src=CX_225_Lined_Top_Occupied_Bottom;}// Nothing Trk2\nelse{this.state.sw_1_src=CX_225_Lined_Top;}// Signals\n// West Bound Signals\nif(this.state.routes[i]===\"W_4_1__|__1_pascack_hx\"){this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Clear;this.state.sig_2e_src=SIG_E_Stop;}// East Bound Signals\nelse{this.state.sig_2w1_src=SIG_W_Stop;this.state.sig_2w2_src=SIG_W_Stop;this.state.sig_2w3_src=SIG_W_Stop;this.state.sig_2e_src=SIG_E_Clear;}}}}}// ---- END set_route_drawings() ----\n/**\n     * set_switch_images()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * @description This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */},{key:\"set_switch_images\",value:function set_switch_images(){// Set SW #1\n// SW #1 Reversed\nif(this.state.sw_1){this.state.sw_1_src=CX_225_R;}// SW #1 Normal\nelse{this.state.sw_1_src=CX_225;}// Set SW #3\n// SW #3 Reversed\nif(this.state.sw_3){this.state.sw_3_src=SW_U_E_R;}// SW #3 Normal\nelse{this.state.sw_3_src=SW_U_E;}// Set SW #5\n// SW #5 Reversed\nif(this.state.sw_5){this.state.sw_5_src=SW_U_E_R;}// SW #5 Normal\nelse{this.state.sw_5_src=SW_U_E;}}// ---- END set_switch_images() ----\n/**\n     * @summary Function to reset the signal images and track colors\n     * \n     * @description This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */},{key:\"reset_drawings\",value:function reset_drawings(){this.state.tail_1_w=Empty;this.state.tail_2_w=Empty;this.state.tail_1_e=Empty;this.state.tail_2_e=Empty;this.state.tail_3_e=Empty;this.state.tail_4_e=Empty;this.state.sig_2w1_src=SIG_W;this.state.sig_2w2_src=SIG_W;this.state.sig_2w3_src=SIG_W;this.state.sig_4w_src=SIG_W;this.state.sig_2e_src=SIG_E;this.state.sig_4e_src=SIG_E;}//---- END reset_drawings() ----\n}]);return HX;}(Component);// Export the interlocking to be drawn on the screen\nexport default HX;","map":{"version":3,"sources":["/Users/joey/Documents/Codes/CMPS_450/Senior_Project/src/components/Panel/Bergen_County_Line/HX.jsx"],"names":["React","Component","CX_225","CX_225_Lined_Top","CX_225_Lined_Bottom","CX_225_Lined_Both","CX_225_R","CX_225_R_Lined","CX_225_Lined_Top_Occupied_Bottom","CX_225_Occupied_Top_Lined_Bottom","CX_225_Occupied_Top","CX_225_Occupied_Bottom","CX_225_Occupied_Both","CX_225_R_Occupied","SW_U_E","SW_U_E_Lined","SW_U_E_Occupied","SW_U_E_R","SW_U_E_R_Lined","SW_U_E_R_Occupied","SIG_W","SIG_W_Clear","SIG_W_Stop","SIG_E","SIG_E_Clear","SIG_E_Stop","Empty","Green","Red","HX","state","sw_1","props","status","sw_3","sw_5","sw_1_src","sw_3_src","sw_5_src","tail_1_w","tail_2_w","tail_1_e","tail_2_e","tail_3_e","tail_4_e","sig_2w1_src","sig_2w2_src","sig_2w3_src","sig_4w_src","sig_2e_src","sig_4e_src","occupied_1","occupied_trk_1","occupied_2","occupied_trk_2","route_1","routed_1","route_2","routed_2","routes","nextProps","setState","reset_drawings","set_switch_images","set_route_drawings","background","throw_sw_1","throw_sw_3","throw_sw_5","click_sig_2w3","click_sig_2w2","click_sig_2w1","click_sig_4w","click_sig_2e","click_sig_4e","color_1","color_2","i","length"],"mappings":"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","sourcesContent":["/**\n * @file HX.jsx\n * @author Joey Damico\n * @date September 25, 2019\n * @summary React JSX Component Class that is for HX Interlocking\n *\n * @description Extends the React Component Class and is the UI part of the HX Interlocking,\n * this class controls all the drawings of routes, and also gives a visual reprenstation\n * of that status of the interlocking\n */\n\n// Import React Component\nimport React, { Component } from 'react';\n// Import CSS style sheet\nimport '../../../css/Bergen_County_Line/hx.css';\n\n// Import Images \n// Switch Images\nimport CX_225 from '../../../images/CX_225.png';\nimport CX_225_Lined_Top from '../../../images/CX_225_Lined_Top.png';\nimport CX_225_Lined_Bottom from '../../../images/CX_225_Lined_Bottom.png';\nimport CX_225_Lined_Both from '../../../images/CX_225_Lined_Both.png';\nimport CX_225_R from '../../../images/CX_225_R.png';\nimport CX_225_R_Lined from '../../../images/CX_225_R_Lined.png';\nimport CX_225_Lined_Top_Occupied_Bottom from '../../../images/CX_225_Lined_Top_Occupied_Bottom.png';\nimport CX_225_Occupied_Top_Lined_Bottom from '../../../images/CX_225_Occupied_Top_Lined_Bottom.png';\nimport CX_225_Occupied_Top from '../../../images/CX_225_Occupied_Top.png';\nimport CX_225_Occupied_Bottom from '../../../images/CX_225_Occupied_Bottom.png';\nimport CX_225_Occupied_Both from '../../../images/CX_225_Occupied_Both.png';\nimport CX_225_R_Occupied from '../../../images/CX_225_R_Occupied.png';\n\nimport SW_U_E from '../../../images/SW_U_E.png';\nimport SW_U_E_Lined from '../../../images/SW_U_E_Lined.png';\nimport SW_U_E_Occupied from '../../../images/SW_U_E_Occupied.png';\nimport SW_U_E_R from '../../../images/SW_U_E_R.png';\nimport SW_U_E_R_Lined from '../../../images/SW_U_E_R_Lined.png';\nimport SW_U_E_R_Occupied from '../../../images/SW_U_E_R_Occupied.png';\n\n// Signal Images\nimport SIG_W from '../../../images/SIG_W.png';\nimport SIG_W_Clear from '../../../images/SIG_W_Clear.png';\nimport SIG_W_Stop from '../../../images/SIG_W_Stop.png';\nimport SIG_E from '../../../images/SIG_E.png';\nimport SIG_E_Clear from '../../../images/SIG_E_Clear.png';\nimport SIG_E_Stop from '../../../images/SIG_E_Stop.png';\n\n// Color Constants For Drawing Routes\nconst Empty = '#999999';\nconst Green = '#75fa4c';\nconst Red = '#eb3323';\n\n/**\n * The React JSX Component Class for the HX Interlocking\n * This class is a JSX React Component for the HX Interlocking, this will control all the UI for the comonent,\n * and the click events that will pass reference between the backend and the user. This also controls drawing the \n * route drawings to show if a route(s) is setup in the interlocking or if the route is occupied\n */\nclass HX extends Component {\n    /**\n     * State\n     * @summary Object that holds the state or status information for the component\n     * \n     * @description This object holds all the information for the interlocking that is required to display the routes \n     * correctly Anything that has \"this.props.\" is passed down from the CTC interlocking class\n     */\n    state = {  \n        // Switch Status\n        sw_1: this.props.status.sw_1,\n        sw_3: this.props.status.sw_3,\n        sw_5: this.props.status.sw_5,\n        // Image File for the switch - Will change depending on route\n        sw_1_src: CX_225,\n        sw_3_src: SW_U_E,\n        sw_5_src: SW_U_E,\n        // Colors for tail tracks - Will change depending on route\n        tail_1_w: Empty,\n        tail_2_w: Empty,\n        tail_1_e: Empty,\n        tail_2_e: Empty,\n        tail_3_e: Empty,\n        tail_4_e: Empty,\n        // Image File for the signals - Will change depending on route\n        sig_2w1_src: SIG_W,\n        sig_2w2_src: SIG_W,\n        sig_2w3_src: SIG_W,\n        sig_4w_src: SIG_W,\n        sig_2e_src: SIG_E,\n        sig_4e_src: SIG_E,\n        // Information For Interlocking Routes\n        occupied_1: this.props.status.occupied_trk_1,\n        occupied_2: this.props.status.occupied_trk_2,\n        route_1: this.props.status.routed_1,\n        route_2: this.props.status.routed_2,\n        routes: this.props.status.routes\n    };\n\n    /**\n     * componentWillReceiveProps()\n     * @summary Function that updates the state of the component\n     * \n     * @description The data that is being changed is passed down from the CTC classes in the simulation backend\n     * \n     * @param nextProps, the new data to set the component state too\n     */\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sw_1: nextProps.status.sw_1, \n            sw_3: nextProps.status.sw_3,\n            sw_5: nextProps.status.sw_5,\n\n            occupied_1: nextProps.status.occupied_trk_1,\n            occupied_2: nextProps.status.occupied_trk_2,\n            route_1: nextProps.status.routed_1,\n            route_2: nextProps.status.routed_2,\n            routes: nextProps.status.routes\n        });\n    }\n    // ---- END componentWillReceiveProps() ----\n\n    /**\n     * render()\n     * @summary standard React function that draws the interlocking to the screen\n     */\n    render() { \n        // Clear all the drawings from the interlocking so if a train clears the route is gone\n        this.reset_drawings();\n        // Set the switch images based off the state of each crossover\n        this.set_switch_images();\n        // Draw all the current routes in the interlocking\n        this.set_route_drawings();\n\n        // Returns the HTML to draw the interlocking and it's current state to the screen\n        return (  \n            <div>\n                {/* Tags */}\n                <div className=\"hx_title\">HX</div>\n                <div className=\"hx_milepost\">MP 5.4</div>\n                {/* West Side Tail Tracks */}\n                <div className=\"hx_1_west\" style={{background: this.state.tail_1_w}}></div>\n                <div className=\"hx_2_west\" style={{background: this.state.tail_2_w}}></div>\n                {/* Switches */}\n                <div className=\"hx_SW_1\" onClick={this.props.throw_sw_1}><img src={this.state.sw_1_src}/></div>\n                <div className=\"hx_SW_3\" onClick={this.props.throw_sw_3}><img src={this.state.sw_3_src}/></div>\n                <div className=\"hx_SW_5\" onClick={this.props.throw_sw_5}><img src={this.state.sw_5_src}/></div>\n                {/* East Side Tail Tracks */}\n                <div className=\"hx_1_east\" style={{background: this.state.tail_1_e}}></div>\n                <div className=\"hx_2_east\" style={{background: this.state.tail_2_e}}></div>\n                <div className=\"hx_croxton_1\" style={{background: this.state.tail_4_e}}></div>\n                <div className=\"hx_croxton_2\" style={{background: this.state.tail_3_e}}></div>\n                {/* Signals */}\n                <div className=\"hx_sig_2w-3\" onClick={this.props.click_sig_2w3}><img src={this.state.sig_2w3_src}/></div>\n                <div className=\"hx_sig_2w-2\" onClick={this.props.click_sig_2w2}><img src={this.state.sig_2w2_src}/></div>\n                <div className=\"hx_sig_2w-1\" onClick={this.props.click_sig_2w1}><img src={this.state.sig_2w1_src}/></div>\n                <div className=\"hx_sig_4w\" onClick={this.props.click_sig_4w}><img src={this.state.sig_4w_src}/></div>\n                <div className=\"hx_sig_2e\" onClick={this.props.click_sig_2e}><img src={this.state.sig_2e_src}/></div>\n                <div className=\"hx_sig_4e\" onClick={this.props.click_sig_4e}><img src={this.state.sig_4e_src}/></div>\n            </div>\n        );\n    }\n    // ---- END render() ----\n\n    /**\n     * @summary Sets the drawing for the route through the interlocking\n     * \n     * @description Function takes what routes are currently set in the Interlocking class and displays that route in the UI, the drawing\n     * will change depending on if the interlocking is occupied or not\n     */\n    set_route_drawings() {\n        let color_1 = Empty;\n        let color_2 = Empty;\n\n        // Set Track colors depending on if they are routed or occupied\n        if (this.state.route_1) {\n            color_1 = Green;\n        }\n        if (this.state.route_2) {\n            color_2 = Green;\n        }\n        if (this.state.occupied_1) {\n            color_1 = Red;\n        }\n        if (this.state.occupied_2) {\n            color_2 = Red;\n        }\n\n        // Loop Through All The Routes\n        for (let i = 0; i < this.state.routes.length; i++) {\n            // West and East normal on Track 1\n            if (this.state.routes[i] === \"W_1_1__|__1_pascack_hx\" || this.state.routes[i] === \"E_1_1__|__3_hx_laurel\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Occupied;\n\n                    // Crossovers that can change based on other tracks status\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Lined;\n\n                    // Crossovers that can change based on other tracks status\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_1_1__|__1_pascack_hx\") {\n                        this.state.sig_2w1_src = SIG_W_Clear;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            // West and East normal on Track 2\n            else if (this.state.routes[i] === \"W_2_2__|__2_pascack_hx\" || this.state.routes[i] === \"E_2_2__|__1_hx_laurel\") {\n                // Tail Tracks\n                this.state.tail_2_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    // Crossovers that can change base on track 1\n                    // Trk1 Lined\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Trk1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk1\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Bottom;\n                    }\n\n                    // Signals\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    // Crossovers that can change base on track 1\n                    // Trk1 Lined\n                    if (this.state.route_1) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk1 Occupied\n                    else if (this.state.occupied_1) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Nothing Trk1\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Bottom;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_2_2__|__2_pascack_hx\") {\n                        this.state.sig_4w_src = SIG_W_Clear;\n                        this.state.sig_4e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_4w_src = SIG_W_Stop;\n                        this.state.sig_4e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_1_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route In Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Clear;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_1__|__3_hx_laurel\") {\n                // Tail Tracks\n                this.state.tail_1_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route In Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_3_src = SW_U_E_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Clear;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_3__|__3_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_2__|__2_pascack_hx\") {\n                // Tail Tracks\n                this.state.tail_4_e = color_1;\n                this.state.tail_2_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Clear;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n            }\n            else if (this.state.routes[i] === \"E_2_4__|__4_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_4_e = color_2;\n                this.state.tail_2_w = color_2;\n\n                // The Route Is Occupied\n                if (this.state.occupied_2) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n                    this.state.sw_1_src = CX_225_R_Occupied;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n                    this.state.sw_1_src = CX_225_R_Lined;\n\n                    // Signals\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_4w_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                    this.state.sig_4e_src = SIG_E_Clear;\n                }\n            }\n            else if (this.state.routes[i] === \"W_3_1__|__1_pascack_hx\"|| this.state.routes[i] === \"E_1_3__|__3_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_3_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_3_1__|__1_pascack_hx\") {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Clear;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n            else if (this.state.routes[i] === \"W_4_1__|__1_pascack_hx\"|| this.state.routes[i] === \"E_1_4__|__4_hx_croxton\") {\n                // Tail Tracks\n                this.state.tail_4_e = color_1;\n                this.state.tail_1_w = color_1;\n\n                // The Route Is Occupied\n                if (this.state.occupied_1) {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Occupied;\n                    this.state.sw_3_src = SW_U_E_R_Occupied;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Top_Lined_Bottom;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Occupied_Both;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Occupied_Top;\n                    }\n\n                    // Signals\n                    this.state.sig_2w1_src = SIG_W_Stop;\n                    this.state.sig_2w2_src = SIG_W_Stop;\n                    this.state.sig_2w3_src = SIG_W_Stop;\n                    this.state.sig_2e_src = SIG_E_Stop;\n                }\n                // The Route Is NOT Occupied\n                else {\n                    // Switches\n                    this.state.sw_5_src = SW_U_E_R_Lined;\n                    this.state.sw_3_src = SW_U_E_R_Lined;\n\n                    // Crossovers that can change based on track 2 state\n                    // Trk2 Lined\n                    if (this.state.route_2) {\n                        this.state.sw_1_src = CX_225_Lined_Both;\n                    }\n                    // Trk2 Occupied\n                    else if (this.state.occupied_2) {\n                        this.state.sw_1_src = CX_225_Lined_Top_Occupied_Bottom;\n                    }\n                    // Nothing Trk2\n                    else {\n                        this.state.sw_1_src = CX_225_Lined_Top;\n                    }\n\n                    // Signals\n                    // West Bound Signals\n                    if (this.state.routes[i] === \"W_4_1__|__1_pascack_hx\") {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Clear;\n                        this.state.sig_2e_src = SIG_E_Stop;\n                    }\n                    // East Bound Signals\n                    else {\n                        this.state.sig_2w1_src = SIG_W_Stop;\n                        this.state.sig_2w2_src = SIG_W_Stop;\n                        this.state.sig_2w3_src = SIG_W_Stop;\n                        this.state.sig_2e_src = SIG_E_Clear;\n                    }\n                }\n            }\n        }\n    }\n    // ---- END set_route_drawings() ----\n\n    /**\n     * set_switch_images()\n     * @summary Changes image sources for the switches, depending on switch status\n     * \n     * @description This function uses the data passed in through status from the CTC classes and \n     * shows if the switches are reversed or not on the screen, by changing the image\n     * source files, to the correct .png file respectivly\n     */\n    set_switch_images() {\n        // Set SW #1\n        // SW #1 Reversed\n        if (this.state.sw_1) {\n            this.state.sw_1_src = CX_225_R;\n        }\n        // SW #1 Normal\n        else {\n            this.state.sw_1_src = CX_225;\n        }\n\n        // Set SW #3\n        // SW #3 Reversed\n        if (this.state.sw_3) {\n            this.state.sw_3_src = SW_U_E_R;\n        }\n        // SW #3 Normal\n        else {\n            this.state.sw_3_src = SW_U_E;\n        }\n\n        // Set SW #5\n        // SW #5 Reversed\n        if (this.state.sw_5) {\n            this.state.sw_5_src = SW_U_E_R;\n        }\n        // SW #5 Normal\n        else {\n            this.state.sw_5_src = SW_U_E;\n        }\n    }\n    // ---- END set_switch_images() ----\n\n    /**\n     * @summary Function to reset the signal images and track colors\n     * \n     * @description This function is need, because if the player was to remove a route,\n     * or when the train clears the interlocking nothing will clear the route\n     * the is displaying on the screen, even if it's gone in the backend\n     */\n    reset_drawings() {\n        this.state.tail_1_w = Empty;\n        this.state.tail_2_w = Empty;\n        this.state.tail_1_e = Empty;\n        this.state.tail_2_e = Empty;\n        this.state.tail_3_e = Empty;\n        this.state.tail_4_e = Empty;\n\n        this.state.sig_2w1_src = SIG_W;\n        this.state.sig_2w2_src = SIG_W;\n        this.state.sig_2w3_src = SIG_W;\n        this.state.sig_4w_src = SIG_W;\n        this.state.sig_2e_src = SIG_E;\n        this.state.sig_4e_src = SIG_E;\n    }\n    //---- END reset_drawings() ----\n}\n \n// Export the interlocking to be drawn on the screen\nexport default HX;"]},"metadata":{},"sourceType":"module"}